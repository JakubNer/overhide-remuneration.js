{"version":3,"sources":["webpack://__oh$__/webpack/universalModuleDefinition","webpack://__oh$__/webpack/bootstrap","webpack://__oh$__/./src/fns/imparter_fns.js","webpack://__oh$__/./src/imparters/eth-web3.js","webpack://__oh$__/./src/imparters/ohledger-web3.js","webpack://__oh$__/./src/fns/ohledger_fns.js","webpack://__oh$__/./src/imparters/btc-manual.js","webpack://__oh$__/./src/imparters/ohledger.js","webpack://__oh$__/external {\"commonjs\":\"web3\",\"commonjs2\":\"web3\",\"amd\":\"web3\",\"root\":\"Web3\"}","webpack://__oh$__/./src/fns/dom_fns.js","webpack://__oh$__/./src/wallets/web3_wallet.js","webpack://__oh$__/./src/wallets/overhide_wallet.js","webpack://__oh$__/./src/ledgers.js","webpack://__oh$__/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__6__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","imparter_fns","recipient","date","Date","Error","address","_callee","uri","from","to","tallyOnly","tallyDollars","token","__fetch","since","dollarsQuery","regeneratorRuntime","wrap","_context","prev","next","concat","toISOString","headers","Headers","Authorization","then","res","json","e","String","abrupt","sent","stop","_callee2","signature","message","_context2","method","Content-Type","body","JSON","stringify","btoa","result","status","eth_web3","web3_wallet","getToken","fire","_this","this","_classCallCheck","_defineProperty","main","rinkeby","eth_accounts","networkChangeDelegates","push","network","onNetworkChange","imparterTag","tag","remuneration_uri","credentials","walletAddress","options","details","dollarAmount","hostPrefix","now","length","minrate","getTxs_check_details","getOverhideRemunerationAPIUri","getTxs_retrieve","_callee3","_context3","sign","isSignatureValid_call","_callee4","_context4","web3","eth","personal","_callee5","amount","_context5","Promise","resolve","reject","sendTransaction","on","confirmationNumber","receipt","error","ohledger_web3","overhide_wallet","ohledger_fns","setNetwork_check_details","currency","createTransaction","showOhLedgerGratisIframeUri","oh_ledger_transact_fn","toUpperCase","toLowerCase","signFn","showGratisFn","ohLedgerTransactFn","toLocaleString","btc_manual","domFns","prod","test","document","addEventListener","detail","makePopupHidden","base64Message","hideAllPopupContents","setFrame","url","t0","atob","makePopupVisible","t1","ohledger","privateKeyToAccount","secret","recover","err","privateKey","dom_fns","createPopup","triggerFor","parent","dispatchEvent","CustomEvent","click","data","_objectSpread","_this2","console","assert","rs","rj","src","widthEm","arguments","undefined","heightEm","frame","getElementById","setAttribute","style","display","container","width","height","setupNewPromise","params","isError","popup","createElement","innerHTML","attach","appendChild","setTimeout","addTag","removeTag","Web3","accounts","detectWeb3Wallet","ethereum","_asyncToGenerator","mark","enable","detectWalletCb","setInterval","_ref3","currentAccounts","currentAddress","currentNetwork","getAccounts","net","getNetworkType","forEach","isPresent","apply","loadOhLedgerTransactFns","event","implementationCode","location","scriptTag","onload","onreadystatechange","loadJS","fn","oh_ledger_transact","oh$","self","_typeof","global","_EventTarget","_inherits","_class2","_wrapNativeSuper","EventTarget","_super","_createSuper","_len","args","Array","_key","_assertThisInitialized","getImparterTags","canSetCredentials","canGenerateCredentials","canChangeNetwork","generateCredentials","setCredentials","setNetwork","getCredentials","getNetwork","getFromDollars","getTallyDollars","getTally","getTransactions","isOnLedger","doEnable","isEnabled","imparterTags","which","createEvent","param","initEvent","web3Wallet","findIndex","v","imparterTagIndex","splice","overhideWallet","imparters","_token","fetcher","fetch","_x","_x2","_setCredentials","_x3","_x4","_generateCredentials","_x5","_x6","_setNetwork","_x7","_x8","_getFromDollars","_x9","_x10","_x11","_getTallyDollars","getTxs","_x12","_x13","_x14","_getTally","_callee6","_context6","_x15","_x16","_x17","_getTransactions","_callee7","_context7","_x18","_x19","_x20","_x21","_x22","_getTxs","_callee8","_context8","_x23","_isOnLedger","_callee9","_context9","_x24","_x25","_sign","_callee10","_context10","_x26","_x27","_x28","_x29","_createTransaction","_callee11","_context11","init","g","Function"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,SACA,mBAAAC,eAAAC,IACAD,OAAA,mBAAAJ,GACA,iBAAAC,QACAA,QAAA,QAAAD,EAAAG,QAAA,SAEAJ,EAAA,QAAAC,EAAAD,EAAA,MARA,CASCO,OAAA,SAAAC,GACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAX,QAAA,IAUA,OANAY,EAAAH,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,GAAA,EAGAV,EAAAD,QA0DA,OArDAQ,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAxB,GACA,oBAAAyB,eAAAC,aACAN,OAAAC,eAAArB,EAAAyB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAArB,EAAA,cAAiD2B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAlC,GACA,IAAAiB,EAAAjB,KAAA6B,WACA,WAA2B,OAAA7B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,ugBClFMC,iMACJ,SAA4BC,EAAWC,GACrC,GAAIA,KAAUA,aAAgBC,MAAO,MAAM,IAAIC,MAAM,sCACrD,KAAM,YAAaH,GAAeA,EAAUI,SAAS,MAAM,IAAID,MAAM,6GAEvE,SAAAE,EAA6BC,EAAKC,EAAMC,EAAIC,EAAWC,EAAcT,EAAMU,EAAOC,GAAlF,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACOb,EADP,CAAAW,EAAAE,KAAA,cACkB,IAAIhB,MAAM,+DAD5B,cAEMU,EAAQ,GACRZ,IACFY,EAAK,UAAAO,OAAanB,EAAKoB,gBAErBP,EAAe,GACfJ,IACFI,EAAY,uBARhBG,EAAAE,KAAA,EAUeP,EAAO,GAAAQ,OAAId,EAAJ,sBAAAc,OAA4Bb,EAA5B,KAAAa,OAAoCZ,EAApC,gBAAAY,OAAqDX,EAAY,OAAS,SAA1EW,OAAoFN,GAApFM,OAAmGP,EAAnG,yBAAiI,CACjJS,QAAS,IAAIC,QAAQ,CACnBC,cAAA,UAAAJ,OAA2BT,OAG9Bc,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SALN,MAMJ,SAAAC,GACL,MAAMC,OAAOD,KAjBnB,cAAAX,EAAAa,OAAA,SAAAb,EAAAc,MAAA,wBAAAd,EAAAe,SAAA3B,yJAqBA,SAAA4B,EAAmC3B,EAAK4B,EAAWC,EAAS5B,EAAMI,EAAOC,GAAzE,OAAAG,mBAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACeP,EAAO,GAAAQ,OAAId,EAAJ,uBAA8B,CAChD+B,OAAQ,OACRf,QAAS,CACPgB,eAAgB,kCAChBd,cAAA,UAAAJ,OAA2BT,IAE7B4B,KAAMC,KAAKC,UAAU,CACnBP,UAAWQ,KAAKR,GAChBC,QAASO,KAAKP,GACd/B,QAASG,MAGVkB,KAAK,SAACkB,GACL,OAAqB,KAAjBA,EAAOC,SAbF,MAmBJ,SAAAhB,GACL,MAAMC,OAAOD,KArBnB,cAAAQ,EAAAN,OAAA,SAAAM,EAAAL,MAAA,wBAAAK,EAAAJ,SAAAC,2GA0BalC,2oBClDT8C,aAQJ,SAAAA,EAAYC,EAAaC,EAAUnC,EAASoC,GAAM,IAAAC,EAAAC,kGAAAC,CAAAD,KAAAL,GAAAO,EAAAF,KAAA,mBAL/B,CACjBG,KAAO,+BACPC,QAAU,yCAIVJ,KAAKJ,YAAcA,EACnBI,KAAKK,aAAeT,EAAYS,aAChCL,KAAKH,SAAWA,EAChBG,KAAKtC,QAAUA,EACfsC,KAAKF,KAAOA,EAEZF,EAAYU,uBAAuBC,KAAK,SAACC,GAAD,OAAaT,EAAKU,gBAAgBD,2DAG5E,SAAgBA,GACdR,KAAKF,KAAK,kBAAkB,CAACY,YAAaf,EAASgB,IAAKvF,KAAMoF,EAASxE,KAAiB,QAAXwE,EAAoB,OAAS,OAAQpD,IAAK4C,KAAKY,iBAAiBJ,sCAG/I,WACE,OAAO,wCAGT,WACE,OAAO,kCAGT,WACE,OAAO,gCAGT,SAAeK,GACb,OAAO,gCAGT,WACE,MAAO,CAAC3D,QAAU8C,KAAKJ,YAAYkB,kDAGrC,SAAoBC,GAClB,OAAO,4BAGT,SAAWC,GACT,OAAO,4BAGT,WACE,MAAO,CAAE5F,KAAQ4E,KAAKJ,YAAYY,QAASxE,KAAoC,QAA5BgE,KAAKJ,YAAYY,QAAoB,OAAS,OAAQpD,IAAO4C,KAAKY,iBAAiBZ,KAAKJ,YAAYY,uDAGzJ,WACE,OAAOR,KAAKY,iBAAiBZ,KAAKJ,YAAYY,kFAGhD,SAAArD,EAAqB8D,GAArB,IAAAC,EAAAC,EAAA1B,EAAA,OAAA5B,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQiD,EAA0C,SAA7BlB,KAAKJ,YAAYY,QAAqB,GAAK,QACxDW,GAAO,IAAInE,MAAQmB,cAF3BJ,EAAAE,KAAA,EAGuB+B,KAAKtC,QAAL,WAAAQ,OAAwBgD,EAAxB,gCAAAhD,OAAiEiD,GAAO,CACzF/C,QAAS,IAAIC,QAAQ,CACnBC,cAAA,UAAAJ,OAA2B8B,KAAKH,gBAGnCtB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SALE,MAMZ,SAAAC,GACL,MAAMC,OAAOD,KAVnB,WAGQe,EAHR1B,EAAAc,OAYmC,IAAlBY,EAAO2B,WAAgB,KAAe3B,EAAO,KAA4B,IAAtBA,EAAO,GAAG4B,QAZ9E,CAAAtD,EAAAE,KAAA,eAAAF,EAAAa,OAAA,SAYoG,GAZpG,cAAAb,EAAAa,OAAA,SAaSqC,EAAexB,EAAO,GAAG4B,SAblC,wBAAAtD,EAAAe,SAAA3B,EAAA6C,+HAgBA,SAAAjB,EAAajC,EAAWC,EAAMQ,EAAWC,GAAzC,IAAAF,EAAAF,EAAAC,EAAA,OAAAQ,mBAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UACEpB,IAAayE,qBAAqBxE,EAAWC,GAEvCO,EAAKR,EAAUI,QACfE,EAAM4C,KAAKuB,gCAEZvB,KAAKJ,YAAYY,QANxB,CAAAtB,EAAAjB,KAAA,cAMuC,IAAIhB,MAAM,iCANjD,UAOO+C,KAAKJ,YAAYkB,cAPxB,CAAA5B,EAAAjB,KAAA,cAO6C,IAAIhB,MAAM,4CAPvD,cAQMI,EAAO2C,KAAKJ,YAAYkB,cAR9B5B,EAAAjB,KAAA,GAUepB,IAAa2E,gBAAgBpE,EAAKC,EAAMC,EAAIC,EAAWC,EAAcT,EAAMiD,KAAKH,WAAYG,KAAKtC,SAVhH,eAAAwB,EAAAN,OAAA,SAAAM,EAAAL,MAAA,yBAAAK,EAAAJ,SAAAC,EAAAiB,yIAaA,SAAAyB,IAAA,IAAArE,EAAAC,EAAA4B,EAAAD,EAAA,OAAAnB,mBAAAC,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,UACQb,EAAM4C,KAAKuB,gCACZvB,KAAKJ,YAAYY,QAFxB,CAAAkB,EAAAzD,KAAA,cAEuC,IAAIhB,MAAM,+BAFjD,UAGO+C,KAAKJ,YAAYkB,cAHxB,CAAAY,EAAAzD,KAAA,cAG6C,IAAIhB,MAAM,4CAHvD,UAIQI,EAAO2C,KAAKJ,YAAYkB,cACzB1D,EALP,CAAAsE,EAAAzD,KAAA,cAKkB,IAAIhB,MAAM,+DAL5B,cAMQgC,EAAU,yCANlByC,EAAAzD,KAAA,GAO0B+B,KAAK2B,KAAK1C,GAPpC,eAOQD,EAPR0C,EAAA7C,KAAA6C,EAAAzD,KAAA,GASepB,IAAa+E,sBAAsBxE,EAAK4B,EAAWC,EAAS5B,EAAM2C,KAAKH,WAAYG,KAAKtC,SATvG,eAAAgE,EAAA9C,OAAA,SAAA8C,EAAA7C,MAAA,yBAAA6C,EAAA5C,SAAA2C,EAAAzB,4HAYA,SAAA6B,EAAW5C,GAAX,OAAApB,mBAAAC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,UACO+B,KAAKJ,YAAYkB,cADxB,CAAAgB,EAAA7D,KAAA,cAC6C,IAAIhB,MAAJ,YAAAiB,OAAsByB,EAASgB,IAA/B,gBAD7C,cAEEX,KAAKF,KAAK,gBAAiB,CAACY,YAAaf,EAASgB,MAFpDmB,EAAA7D,KAAA,EAGgBzD,OAAOuH,KAAKC,IAAIC,SAASN,KAAK1C,EAASe,KAAKJ,YAAYkB,cAAe,IAHvF,cAAAgB,EAAAlD,OAAA,SAAAkD,EAAAjD,MAAA,wBAAAiD,EAAAhD,SAAA+C,EAAA7B,0IAMA,SAAAkC,EAAwBC,EAAQ7E,EAAIyD,GAApC,IAAA1D,EAAA,OAAAQ,mBAAAC,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,UACO+B,KAAKJ,YAAYY,QADxB,CAAA4B,EAAAnE,KAAA,cACuC,IAAIhB,MAAM,+BADjD,UAEO+C,KAAKJ,YAAYkB,cAFxB,CAAAsB,EAAAnE,KAAA,cAE6C,IAAIhB,MAAM,4CAFvD,cAGQI,EAAO2C,KAAKJ,YAAYkB,cAClBd,KAAKuB,gCAEjBvB,KAAKF,KAAK,gBAAiB,CAACY,YAAaf,EAASgB,MANpDyB,EAAAnE,KAAA,EAOS,IAAIoE,QAAQ,SAACC,EAASC,GAC3B/H,OAAOuH,KAAKC,IAAIQ,gBAAgB,CAAEnF,KAAMA,EAAMC,GAAIA,EAAIxB,MAAOqG,IAC5DM,GAAG,eAAgB,SAAUC,EAAoBC,GAChDL,MAEDG,GAAG,QAAS,SAACG,GACZL,EAAOK,OAbb,cAAAR,EAAAxD,OAAA,UAiBS,GAjBT,yBAAAwD,EAAAtD,SAAAoD,EAAAlC,yGAzGIL,QACS,YA6HAA,kpBC7HTkD,aAKJ,SAAAA,EAAYC,EAAiBlD,EAAaC,EAAUnC,EAASoC,gGAAMG,CAAAD,KAAA6C,GAAA3C,EAAAF,KAAA,OAF5D,QAGLA,KAAKJ,YAAcA,EACnBI,KAAK8C,gBAAkBA,EACvB9C,KAAKtC,QAAUA,EACfsC,KAAKH,SAAWA,EAChBG,KAAKF,KAAOA,0DAGd,WACE,OAAO,wCAGT,WACE,OAAO,kCAGT,WACE,OAAO,gCAGT,SAAee,GACb,OAAO,gCAGT,WACE,MAAO,CAAC3D,QAAW8C,KAAKJ,YAAYkB,kDAGtC,SAAoBC,GAClB,OAAO,4BAGT,SAAWC,GAKT,OAJA+B,IAAaC,yBAAyBhC,GAEtChB,KAAKhE,KAAOgF,EAAQhF,KACpBgE,KAAKF,KAAK,kBAAmB,CAAEY,YAAamC,EAAclC,IAAKsC,SAAU,MAAOjH,KAAMgF,EAAQhF,KAAMoB,IAAK4C,KAAK8C,gBAAgBlC,iBAAiBI,EAAQhF,SAChJ,4BAGT,WACE,MAAO,CAAEiH,SAAY,MAAOjH,KAAQgE,KAAKhE,KAAMoB,IAAO4C,KAAK8C,gBAAgBlC,iBAAiBZ,KAAKhE,oDAGnG,WACE,IAAKgE,KAAKhE,KAAM,MAAM,IAAIiB,MAAM,8CAChC,OAAO+C,KAAK8C,gBAAgBlC,iBAAiBZ,KAAKhE,+EAGpD,SAAAmB,EAAqB8D,GAArB,OAAApD,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAa,OAAA,SACwB,IAAfqC,GADT,wBAAAlD,EAAAe,SAAA3B,4HAIA,SAAA4B,EAAajC,EAAWC,EAAMQ,EAAWC,GAAzC,IAAAF,EAAAF,EAAAC,EAAA,OAAAQ,mBAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UACEpB,IAAayE,qBAAqBxE,EAAWC,GAEvCO,EAAKR,EAAUI,QACfE,EAAM4C,KAAKuB,gCAEZvB,KAAKhE,KANZ,CAAAkD,EAAAjB,KAAA,cAMwB,IAAIhB,MAAM,8CANlC,UAOO+C,KAAKJ,YAAYkB,cAPxB,CAAA5B,EAAAjB,KAAA,cAO6C,IAAIhB,MAAM,4CAPvD,cAQMI,EAAO2C,KAAKJ,YAAYkB,cAR9B5B,EAAAjB,KAAA,GAUepB,IAAa2E,gBAAgBpE,EAAKC,EAAMC,EAAIC,EAAWC,EAAcT,EAAMiD,KAAKH,WAAYG,KAAKtC,SAVhH,eAAAwB,EAAAN,OAAA,SAAAM,EAAAL,MAAA,yBAAAK,EAAAJ,SAAAC,EAAAiB,yIAaA,SAAAyB,IAAA,IAAArE,EAAAC,EAAA4B,EAAAD,EAAA,OAAAnB,mBAAAC,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,UACQb,EAAM4C,KAAKuB,gCACZvB,KAAKhE,KAFZ,CAAA0F,EAAAzD,KAAA,cAEwB,IAAIhB,MAAM,8CAFlC,UAGO+C,KAAKJ,YAAYkB,cAHxB,CAAAY,EAAAzD,KAAA,cAG6C,IAAIhB,MAAM,4CAHvD,UAIQI,EAAO2C,KAAKJ,YAAYkB,cACzB1D,EALP,CAAAsE,EAAAzD,KAAA,cAKkB,IAAIhB,MAAM,+DAL5B,cAMQgC,EAAU,yCANlByC,EAAAzD,KAAA,GAO0B+B,KAAK2B,KAAK1C,GAPpC,eAOQD,EAPR0C,EAAA7C,KAAA6C,EAAAzD,KAAA,GASepB,IAAa+E,sBAAsBxE,EAAK4B,EAAWC,EAAS5B,EAAM2C,KAAKH,WAAYG,KAAKtC,SATvG,eAAAgE,EAAA9C,OAAA,SAAA8C,EAAA7C,MAAA,yBAAA6C,EAAA5C,SAAA2C,EAAAzB,4HAYA,SAAA6B,EAAW5C,GAAX,OAAApB,mBAAAC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,UACO+B,KAAKJ,YAAYkB,cADxB,CAAAgB,EAAA7D,KAAA,cAC6C,IAAIhB,MAAJ,YAAAiB,OAAsB2E,EAAclC,IAApC,gBAD7C,cAEEX,KAAKF,KAAK,gBAAiB,CAACY,YAAamC,EAAclC,MAFzDmB,EAAA7D,KAAA,EAGgBzD,OAAOuH,KAAKC,IAAIC,SAASN,KAAK1C,EAASe,KAAKJ,YAAYkB,cAAe,IAHvF,cAAAgB,EAAAlD,OAAA,SAAAkD,EAAAjD,MAAA,wBAAAiD,EAAAhD,SAAA+C,EAAA7B,0IAMA,SAAAkC,EAAwBC,EAAQ7E,EAAIyD,GAApC,IAAA1D,EAAAD,EAAA2C,EAAAC,KAAA,OAAAnC,mBAAAC,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,UACO+B,KAAKhE,KADZ,CAAAoG,EAAAnE,KAAA,cACwB,IAAIhB,MAAM,8CADlC,UAEO+C,KAAKJ,YAAYkB,cAFxB,CAAAsB,EAAAnE,KAAA,cAE6C,IAAIhB,MAAM,4CAFvD,cAGQI,EAAO2C,KAAKJ,YAAYkB,cACxB1D,EAAM4C,KAAKuB,gCAJnBa,EAAAnE,KAAA,EAMQ8E,IAAaG,kBACjBf,EACA9E,EACAC,EACA,SAAC2B,GAAD,OAAac,EAAK4B,KAAK1C,IACvB,SAAC5B,EAAM2B,EAAWC,GAAlB,OAA8Bc,EAAK+C,gBAAgBK,4BAA4B/F,EAAKC,EAAM2B,EAAWC,IACrGe,KAAK8C,gBAAgBM,sBAAsBpD,KAAKhE,MAChD+E,GAbJ,cAAAqB,EAAAxD,OAAA,UAeS,GAfT,wBAAAwD,EAAAtD,SAAAoD,EAAAlC,yGAzFI6C,QACS,iBA2GAA,uUC/GTE,qMACJ,SAAgC/B,GAC9B,KAAM,aAAcA,GAAU,MAAM,IAAI/D,MAAM,gCAC9C,KAAM,SAAU+D,GAAU,MAAM,IAAI/D,MAAM,4BAG1C,GAFA+D,EAAQiC,SAAWjC,EAAQiC,SAASI,cACpCrC,EAAQhF,KAAOgF,EAAQhF,KAAKsH,cACH,QAArBtC,EAAQiC,SAAoB,MAAM,IAAIhG,MAAM,4BAChD,GAAqB,SAAjB+D,EAAQhF,MAAoC,SAAjBgF,EAAQhF,KAAiB,MAAM,IAAIiB,MAAM,kHAG1E,SAAAE,EAA+BgF,EAAQ9E,EAAMC,EAAIiG,EAAQC,EAAcC,EAAoB1C,GAA3F,IAAA9B,EAAAD,EAAA,OAAAnB,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACgB,GAAVkE,EADN,CAAApE,EAAAE,KAAA,cAEQ,YAAa8C,GAAWA,EAAQ9B,SAAW,cAAe8B,GAAWA,EAAQ/B,WAFrF,CAAAjB,EAAAE,KAAA,QAGUgB,EAAU8B,EAAQ9B,QAClBD,EAAY+B,EAAQ/B,UAJ9BjB,EAAAE,KAAA,uBAMUgB,EANV,6CAAAf,QAMiE,IAAIlB,MAAO0G,kBAN5E3F,EAAAE,KAAA,EAO4BsF,EAAOtE,GAPnC,OAOUD,EAPVjB,EAAAc,KAAA,eAAAd,EAAAE,KAAA,GASUuF,EAAanG,EAAM2B,EAAWC,GATxC,QAAAlB,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAWUwF,EAAmBtB,EAAQ9E,EAAMC,GAX3C,yBAAAS,EAAAe,SAAA3B,yRAgBa4F,2oBCxBTY,aAYJ,SAAAA,EAAYC,EAAQ/D,EAAUnC,EAASoC,GAAM,IAAAC,EAAAC,kGAAAC,CAAAD,KAAA2D,GAAAzD,EAAAF,KAAA,mBAT1B,CACjB6D,KAAO,8BACPC,KAAO,qCAOoC5D,EAAAF,KAAA,MAJvC,oCAIuCE,EAAAF,KAAA,UAHnC,MAGmCE,EAAAF,KAAA,OAFtC,QAGLA,KAAK4D,OAASA,EACd5D,KAAKH,SAAWA,EAChBG,KAAKtC,QAAUA,EACfsC,KAAKF,KAAOA,EAEZtF,OAAOuJ,SAASC,iBAAiB,sBAAuB,SAACtF,GACnD,WAAYA,GAAKA,EAAEuF,QAAU,cAAevF,EAAEuF,QAChDlE,EAAK6D,OAAOM,gBAAgBxF,EAAEuF,OAAOjF,WAAW,GAElDe,EAAK6D,OAAOM,gBAAZ,gBAA4C,6DAIhD,WACE,OAAO,wCAGT,WACE,OAAO,kCAGT,WACE,OAAO,gCAGT,SAAerD,GACb,KAAM,YAAaA,GAAc,MAAM,IAAI5D,MAAM,+BACjD,OAAO+C,KAAKhE,MACV,IAAK,kBACH,IAAK,8GAA8G8H,KAAKjD,EAAY3D,SAClI,MAAM,IAAID,MAAJ,oCAAAiB,OAA8C2C,EAAY3D,UAElE,MACF,IAAK,UACH,IAAK,6GAA6G4G,KAAKjD,EAAY3D,SACjI,MAAM,IAAID,MAAJ,4BAAAiB,OAAsC2C,EAAY3D,UAM9D,OAFA8C,KAAK9C,QAAU2D,EAAY3D,QAC3B8C,KAAKF,KAAK,sBAAuB,CAAEY,YAAaiD,EAAWhD,IAAKzD,QAAS8C,KAAK9C,WACvE,gCAGT,WACE,MAAO,CAACA,QAAU8C,KAAK9C,4CAGzB,SAAoB6D,GAClB,OAAO,4BAGT,SAAWC,GACT,KAAM,SAAUA,GAAU,MAAM,IAAI/D,MAAM,4BAE1C,GADA+D,EAAQhF,KAAOgF,EAAQhF,KAAKsH,cACP,SAAjBtC,EAAQhF,MAAoC,SAAjBgF,EAAQhF,KAAiB,MAAM,IAAIiB,MAAM,mCAGxE,OAFA+C,KAAKhE,KAAOgF,EAAQhF,KACpBgE,KAAKF,KAAK,kBAAmB,CAAEY,YAAaiD,EAAWhD,IAAK3E,KAAMgF,EAAQhF,KAAMoB,IAAK4C,KAAKY,iBAAiBI,EAAQhF,SAC5G,4BAGT,WACE,MAAO,CAAEA,KAAQgE,KAAKhE,KAAMoB,IAAO4C,KAAKY,iBAAiBZ,KAAKhE,oDAGhE,WACE,IAAKgE,KAAKhE,KAAM,MAAM,IAAIiB,MAAM,8CAChC,OAAO+C,KAAKY,iBAAiBZ,KAAKhE,+EAGpC,SAAAmB,EAAqB8D,GAArB,IAAAC,EAAAC,EAAA1B,EAAA,OAAA5B,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQiD,EAA2B,SAAdlB,KAAKhE,KAAkB,GAAK,QACzCmF,GAAO,IAAInE,MAAQmB,cAF3BJ,EAAAE,KAAA,EAGuB+B,KAAKtC,QAAL,WAAAQ,OAAwBgD,EAAxB,gCAAAhD,OAAiEiD,GAAO,CACzF/C,QAAS,IAAIC,QAAQ,CACnBC,cAAA,UAAAJ,OAA2B8B,KAAKH,gBAGnCtB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SALE,MAMZ,SAAAC,GACL,MAAMC,OAAOD,KAVnB,WAGQe,EAHR1B,EAAAc,OAYmC,IAAlBY,EAAO2B,WAAgB,KAAe3B,EAAO,KAA4B,IAAtBA,EAAO,GAAG4B,QAZ9E,CAAAtD,EAAAE,KAAA,eAAAF,EAAAa,OAAA,SAYoG,GAZpG,cAAAb,EAAAa,OAAA,SAaSqC,EAAexB,EAAO,GAAG4B,SAblC,wBAAAtD,EAAAe,SAAA3B,EAAA6C,+HAgBA,SAAAjB,EAAajC,EAAWC,EAAMQ,EAAWC,GAAzC,IAAAF,EAAAF,EAAAC,EAAA,OAAAQ,mBAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UACEpB,IAAayE,qBAAqBxE,EAAWC,GAEvCO,EAAKR,EAAUI,QACfE,EAAM4C,KAAKuB,gCAEZvB,KAAKhE,KANZ,CAAAkD,EAAAjB,KAAA,cAMwB,IAAIhB,MAAM,8CANlC,UAOO+C,KAAK9C,QAPZ,CAAAgC,EAAAjB,KAAA,cAO2B,IAAIhB,MAAM,8CAPrC,cAQQI,EAAO2C,KAAK9C,QARpBgC,EAAAjB,KAAA,GAUepB,IAAa2E,gBAAgBpE,EAAKC,EAAMC,EAAIC,EAAWC,EAAcT,EAAMiD,KAAKH,WAAYG,KAAKtC,SAVhH,eAAAwB,EAAAN,OAAA,SAAAM,EAAAL,MAAA,yBAAAK,EAAAJ,SAAAC,EAAAiB,yIAaA,SAAAyB,IAAA,IAAArE,EAAAC,EAAA4B,EAAAD,EAAA,OAAAnB,mBAAAC,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,UACQb,EAAM4C,KAAKuB,gCACZvB,KAAKhE,KAFZ,CAAA0F,EAAAzD,KAAA,cAEwB,IAAIhB,MAAM,8CAFlC,UAGO+C,KAAK9C,QAHZ,CAAAwE,EAAAzD,KAAA,cAG2B,IAAIhB,MAAM,8CAHrC,UAIQI,EAAO2C,KAAK9C,QACbE,EALP,CAAAsE,EAAAzD,KAAA,cAKkB,IAAIhB,MAAM,+DAL5B,cAMQgC,EAAU,yCANlByC,EAAAzD,KAAA,GAO0B+B,KAAK2B,KAAK1C,GAPpC,eAOQD,EAPR0C,EAAA7C,KAAA6C,EAAAzD,KAAA,GASepB,IAAa+E,sBAAsBxE,EAAK4B,EAAWC,EAAS5B,EAAM2C,KAAKH,WAAYG,KAAKtC,SATvG,eAAAgE,EAAA9C,OAAA,SAAA8C,EAAA7C,MAAA,yBAAA6C,EAAA5C,SAAA2C,EAAAzB,4HAYA,SAAA6B,EAAW5C,GAAX,IAAAkF,EAAA,OAAAtG,mBAAAC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,UACO+B,KAAK9C,QADZ,CAAA4E,EAAA7D,KAAA,cAC2B,IAAIhB,MAAJ,4BAAAiB,OAAsCyF,EAAWhD,IAAjD,aAD3B,cAGEX,KAAK4D,OAAOQ,uBACND,EAAgB3E,KAAKP,GAC3Be,KAAK4D,OAAOS,SAAZ,GAAAnG,OAAwB8B,KAAKsE,IAA7B,kCAAApG,OAAiE8B,KAAK9C,QAAtE,aAAAgB,OAAyFiG,EAAzF,WAAAjG,OAAgH8B,KAAKH,WAArH,YAAA3B,OAAuJ,QAAb8B,KAAKhE,OALjJ8F,EAAAyC,GAMSC,KANT1C,EAAA7D,KAAA,EAMoB+B,KAAK4D,OAAOa,mBANhC,cAAA3C,EAAA4C,GAAA5C,EAAAjD,KAAAiD,EAAAlD,OAAA,YAAAkD,EAAAyC,IAAAzC,EAAA4C,KAAA,yBAAA5C,EAAAhD,SAAA+C,EAAA7B,0IASA,SAAAkC,EAAwBC,EAAQ7E,EAAIyD,GAApC,OAAAlD,mBAAAC,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,UACO+B,KAAKhE,KADZ,CAAAoG,EAAAnE,KAAA,cACwB,IAAIhB,MAAM,8CADlC,UAEO+C,KAAK9C,QAFZ,CAAAkF,EAAAnE,KAAA,cAE2B,IAAIhB,MAAM,8CAFrC,cAGe+C,KAAK9C,QAElB8C,KAAK4D,OAAOQ,uBACZpE,KAAK4D,OAAOS,SAAZ,GAAAnG,OAAwB8B,KAAKsE,IAA7B,4CAAApG,OAA2E8B,KAAK9C,QAAhF,QAAAgB,OAA8FZ,EAA9F,WAAAY,OAA0GiE,EAA1G,YAAAjE,OAAwI,QAAb8B,KAAKhE,OANlIoG,EAAAnE,KAAA,EAOQ+B,KAAK4D,OAAOa,mBAPpB,cAAArC,EAAAxD,OAAA,UASS,GATT,yBAAAwD,EAAAtD,SAAAoD,EAAAlC,yGArII2D,QACS,cAiJAA,kpBCjJTgB,aAOJ,SAAAA,EAAY7B,EAAiBlD,EAAaC,EAAUnC,EAASoC,gGAAMG,CAAAD,KAAA2E,GAAAzE,EAAAF,KAAA,UAJzD,MAIyDE,EAAAF,KAAA,SAH1D,MAG0DE,EAAAF,KAAA,OAF5D,QAGLA,KAAK8C,gBAAkBA,EACvB9C,KAAKK,aAAeT,EAAYS,aAChCL,KAAKH,SAAWA,EAChBG,KAAKtC,QAAUA,EACfsC,KAAKF,KAAOA,0DAGd,WACE,OAAO,wCAGT,WACE,OAAO,kCAGT,WACE,OAAO,gCAGT,SAAee,GACb,KAAM,WAAYA,GAAc,MAAM,IAAI5D,MAAM,8BAC5C,YAAa4D,GAAeA,EAAY3D,QAC1C8C,KAAK9C,QAAU2D,EAAY3D,QAAQoG,cAEnCtD,KAAK9C,QAAU8C,KAAKK,aAAauE,oBAAoB/D,EAAYgE,QAAQ3H,QAAQoG,cAEnFtD,KAAK6E,OAAShE,EAAYgE,OAC1B,IACE,GAAM7E,KAAKK,aAAayE,QAAQ9E,KAAKK,aAAasB,KAAK,eAAgB3B,KAAK6E,SAASvB,eAAiBtD,KAAK9C,QACzG,MAAM,IAAID,MAAM,mCAElB,MAAO8H,GACP,MAAM,IAAI9H,MAAM,mCAGlB,OADA+C,KAAKF,KAAK,sBAAuB,CAAEY,YAAaiE,EAAShE,IAAKzD,QAAS8C,KAAK9C,QAAS2H,OAAQ7E,KAAK6E,UAC3F,gCAGT,WACE,MAAO,CAAC3H,QAAU8C,KAAK9C,QAAS2H,OAAS7E,KAAK6E,2CAGhD,SAAoB9D,GAClB,IAAMvC,EAAMwB,KAAKK,aAAalE,SAI9B,OAHA6D,KAAK9C,QAAUsB,EAAItB,QAAQoG,cAC3BtD,KAAK6E,OAASrG,EAAIwG,WAClBhF,KAAKF,KAAK,sBAAuB,CAAEY,YAAaiE,EAAShE,IAAKzD,QAAS8C,KAAK9C,QAAS2H,OAAQ7E,KAAK6E,UAC3F,4BAGT,SAAW7D,GAKT,OAJA+B,IAAaC,yBAAyBhC,GAEtChB,KAAKhE,KAAOgF,EAAQhF,KACpBgE,KAAKF,KAAK,kBAAmB,CAAEY,YAAaiE,EAAShE,IAAKsC,SAAU,MAAOjH,KAAMgF,EAAQhF,KAAMoB,IAAK4C,KAAK8C,gBAAgBlC,iBAAiBI,EAAQhF,SAC3I,4BAGT,WACE,MAAO,CAAEiH,SAAY,MAAOjH,KAAQgE,KAAKhE,KAAMoB,IAAO4C,KAAK8C,gBAAgBlC,iBAAiBZ,KAAKhE,oDAGnG,WACE,IAAKgE,KAAKhE,KAAM,MAAM,IAAIiB,MAAM,8CAChC,OAAO+C,KAAK8C,gBAAgBlC,iBAAiBZ,KAAKhE,+EAGpD,SAAAmB,EAAqB8D,GAArB,OAAApD,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAa,OAAA,SACwB,IAAfqC,GADT,wBAAAlD,EAAAe,SAAA3B,4HAIA,SAAA4B,EAAajC,EAAWC,EAAMQ,EAAWC,GAAzC,IAAAF,EAAAF,EAAAC,EAAA,OAAAQ,mBAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UACEpB,IAAayE,qBAAqBxE,EAAWC,GAEvCO,EAAKR,EAAUI,QACfE,EAAM4C,KAAKuB,gCAEZvB,KAAKhE,KANZ,CAAAkD,EAAAjB,KAAA,cAMwB,IAAIhB,MAAM,8CANlC,UAOO+C,KAAK9C,QAPZ,CAAAgC,EAAAjB,KAAA,cAO2B,IAAIhB,MAAM,8CAPrC,cAQQI,EAAO2C,KAAK9C,QARpBgC,EAAAjB,KAAA,GAUepB,IAAa2E,gBAAgBpE,EAAKC,EAAMC,EAAIC,EAAWC,EAAcT,EAAMiD,KAAKH,WAAYG,KAAKtC,SAVhH,eAAAwB,EAAAN,OAAA,SAAAM,EAAAL,MAAA,yBAAAK,EAAAJ,SAAAC,EAAAiB,yIAaA,SAAAyB,IAAA,IAAArE,EAAAC,EAAA4B,EAAAD,EAAA,OAAAnB,mBAAAC,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,UACQb,EAAM4C,KAAKuB,gCACZvB,KAAKhE,KAFZ,CAAA0F,EAAAzD,KAAA,cAEwB,IAAIhB,MAAM,8CAFlC,UAGO+C,KAAK9C,QAHZ,CAAAwE,EAAAzD,KAAA,cAG2B,IAAIhB,MAAM,8CAHrC,UAIQI,EAAO2C,KAAK9C,QACbE,EALP,CAAAsE,EAAAzD,KAAA,cAKkB,IAAIhB,MAAM,+DAL5B,cAMQgC,EAAU,yCANlByC,EAAAzD,KAAA,GAO0B+B,KAAK2B,KAAK1C,GAPpC,eAOQD,EAPR0C,EAAA7C,KAAA6C,EAAAzD,KAAA,GASepB,IAAa+E,sBAAsBxE,EAAK4B,EAAWC,EAAS5B,EAAM2C,KAAKH,WAAYG,KAAKtC,SATvG,eAAAgE,EAAA9C,OAAA,SAAA8C,EAAA7C,MAAA,yBAAA6C,EAAA5C,SAAA2C,EAAAzB,4HAYA,SAAA6B,EAAW5C,GAAX,OAAApB,mBAAAC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,UACO+B,KAAK6E,OADZ,CAAA/C,EAAA7D,KAAA,cAC0B,IAAIhB,MAAJ,4BAAAiB,OAAsCyG,EAAShE,IAA/C,aAD1B,cAAAmB,EAAAlD,OAAA,SAESoB,KAAKK,aAAasB,KAAK1C,EAASe,KAAK6E,QAAQ7F,WAFtD,wBAAA8C,EAAAhD,SAAA+C,EAAA7B,0IAKA,SAAAkC,EAAwBC,EAAQ7E,EAAIyD,GAApC,IAAA1D,EAAAD,EAAA2C,EAAAC,KAAA,OAAAnC,mBAAAC,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,UACO+B,KAAKhE,KADZ,CAAAoG,EAAAnE,KAAA,cACwB,IAAIhB,MAAM,8CADlC,UAEO+C,KAAK9C,QAFZ,CAAAkF,EAAAnE,KAAA,cAE2B,IAAIhB,MAAM,8CAFrC,cAGQI,EAAO2C,KAAK9C,QACZE,EAAM4C,KAAKuB,gCAJnBa,EAAAnE,KAAA,EAMQ8E,IAAaG,kBACjBf,EACA9E,EACAC,EACA,SAAC2B,GAAD,OAAac,EAAK4B,KAAK1C,IACvB,SAAC5B,EAAM2B,EAAWC,GAAlB,OAA8Bc,EAAK+C,gBAAgBK,4BAA4B/F,EAAKC,EAAM2B,EAAWC,IACrGe,KAAK8C,gBAAgBM,sBAAsBpD,KAAKhE,MAChD+E,GAbJ,cAAAqB,EAAAxD,OAAA,UAeS,GAfT,wBAAAwD,EAAAtD,SAAAoD,EAAAlC,yGA7GI2E,QACS,YA+HAA,qBCnIfvK,EAAAD,QAAAM,23BCCMwK,aAIJ,SAAAA,IAAc,IAAAlF,EAAAC,kGAAAC,CAAAD,KAAAiF,GAAA/E,EAAAF,KAAA,UAHJ,MAGIE,EAAAF,KAAA,SAFL,MAGPxF,OAAOuJ,SAASC,iBAAiB,kBAAmB,SAACtF,GACnDqB,EAAKmE,gBAAgB,cAAc,gDAKvC,WACElE,KAAKkF,6CAOP,SAAgBxE,EAAayE,GAC3B3K,OAAO4K,OAAOrB,SAASsB,cAAc,IAAIC,YAAY,YAAa,CAACrB,OAAQ3E,KAAKC,UAAU,CACxFmB,YAAaA,EACbyE,WAAYA,EACZI,OAAO,iCAQX,SAAW7E,EAAayE,EAAYK,GAClChL,OAAO4K,OAAOrB,SAASsB,cAAc,IAAIC,YAAY,YAAa,CAACrB,OAAQ3E,KAAKC,UAALkG,IAAA,GACtED,GADsE,IAEzE9E,YAAaA,EACbyE,WAAYA,uCAKhB,WAAkB,IAAAO,EAAA1F,KAEhB,OADA2F,QAAQC,QAAQ5F,KAAKsC,QAAS,+EACvB,IAAID,QAAQ,SAACwD,EAAIC,GACtBJ,EAAKpD,QAAUuD,EACfH,EAAKnD,OAASuD,4BAKlB,SAASC,GAA8B,IAAzBC,EAAyBC,UAAA7E,OAAA,QAAA8E,IAAAD,UAAA,GAAAA,UAAA,GAAjB,GAAIE,EAAaF,UAAA7E,OAAA,QAAA8E,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAC3BG,EAAQrC,SAASsC,eAAe,oBACtCD,EAAME,aAAa,MAAOP,GAC1BK,EAAMG,MAAMC,QAAQ,QACpB,IAAMC,EAAY1C,SAASsC,eAAe,0BAC1CI,EAAUF,MAAMG,MAAhB,GAAAxI,OAAyB8H,EAAzB,MACAS,EAAUF,MAAMI,OAAhB,GAAAzI,OAA0BiI,EAA1B,sCAIF,WAGE,OAFYpC,SAASsC,eAAe,sBAC9BE,MAAMC,QAAQ,QACbxG,KAAK4G,iDAGd,SAAgBC,EAAQC,GACtB,IAAIC,EAAQhD,SAASsC,eAAe,sBACpCrG,KAAKoE,uBACL2C,EAAMR,MAAMC,QAAQ,OACpBb,QAAQC,OAAO5F,KAAKsC,QAAS,4DACzBwE,EAAS9G,KAAKuC,OAAOsE,GACpB7G,KAAKsC,QAAQuE,GAClB7G,KAAKsC,QAAU,KACftC,KAAKuC,OAAS,yCAGhB,WACEwB,SAASsC,eAAe,oBAAoBE,MAAMC,QAAQ,kCAG5D,WACE,IAAIO,EAAQhD,SAASiD,cAAc,OACnCD,EAAMT,aAAa,KAAK,sBACxBS,EAAMR,MAAMC,QAAQ,OACpBO,EAAME,UAAN,qRAMA,IAAIV,EAAQxC,SAASiD,cAAc,SACnCT,EAAMU,UAAN,umCA8Ca,SAATC,IACEnD,SAAS1E,MACX0E,SAAS1E,KAAK8H,YAAYJ,GAC1BhD,SAAS1E,KAAK8H,YAAYZ,IAE1Ba,WAAWF,EAAQ,KAGvBA,wCAIWjC,8pBClJf,IAEMrF,aAOJ,SAAAA,EAAYyH,EAAQC,EAAWxH,gGAAMG,CAAAD,KAAAJ,GAAAM,EAAAF,KAAA,eANrB,IAAIuH,IAAK,yBAA0BvF,IAAIwF,UAMlBtH,EAAAF,KAAA,gBALrB,MAKqBE,EAAAF,KAAA,UAJ3B,MAI2BE,EAAAF,KAAA,yBAFZ,IAGvBA,KAAKqH,OAASA,EACdrH,KAAKsH,UAAYA,EACjBtH,KAAKF,KAAOA,6CAId,WACEE,KAAKyH,mDAUP,WAAmB,IAAA1H,EAAAC,KACjB,GAAKxF,OAAOkN,SAAZ,CAGAC,EAAA9J,mBAAA+J,KAAC,SAAA7I,IAAA,OAAAlB,mBAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAESzD,OAAOkN,SAASG,SAFzB,OAGGrN,OAAOuH,KAAO,IAAIwF,IAAK/M,OAAOkN,UAHjCxI,EAAAjB,KAAA,eAAAiB,EAAAlB,KAAA,EAAAkB,EAAAqF,GAAArF,EAAA,uBAAAA,EAAAjB,KAAA,GAMO6J,IANP,QAQCC,YAAWJ,EAAA9J,mBAAA+J,KAAC,SAAAzK,IAAA,OAAAU,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJ6J,IADI,wBAAA/J,EAAAe,SAAA3B,MAvCe,KA+B5B,yBAAA+B,EAAAJ,SAAAC,EAAA,gBAAD4I,GAaA,IAAIG,EAAc,eAAAE,EAAAL,EAAA9J,mBAAA+J,KAAG,SAAAnG,IAAA,IAAAwG,EAAAC,EAAAC,EAAA,OAAAtK,mBAAAC,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAAAyD,EAAA1D,KAAA,EAAA0D,EAAAzD,KAAA,EAEWzD,OAAOuH,KAAKC,IAAIoG,cAF3B,cAEbH,EAFavG,EAAA7C,KAGbqJ,EAAkBD,GAAmBA,EAAgB7G,OAAS,EAAK6G,EAAgB,GAAK,KAH3EvG,EAAAzD,KAAA,EAIWzD,OAAOuH,KAAKC,IAAIqG,IAAIC,iBAJ/B,OAIbH,EAJazG,EAAA7C,KAAA6C,EAAAzD,KAAA,iBAAAyD,EAAA1D,KAAA,GAAA0D,EAAA6C,GAAA7C,EAAA,iBAMfyG,IAAmBpI,EAAKS,UAC1BT,EAAKS,QAAU2H,EACfpI,EAAKO,uBAAuBiI,QAAQ,SAAApN,GAAC,OAAIA,EAAE4E,EAAKS,YAE9C0H,IAAmBnI,EAAKe,gBACtBoH,GACFnI,EAAKsH,OAAO1H,IAASgB,KACrBZ,EAAKsH,OAAOxE,IAAclC,OAE1BZ,EAAKuH,UAAU3H,IAASgB,KACxBZ,EAAKuH,UAAUzE,IAAclC,MAE/BZ,EAAKe,cAAgBoH,EACrBnI,EAAKD,KAAK,iBAAkB,CAAEY,YAAaf,IAASgB,IAAK6H,YAAaN,IACtEnI,EAAKD,KAAK,iBAAkB,CAAEY,YAAamC,IAAclC,IAAK6H,YAAaN,IACvEA,IACFnI,EAAKD,KAAK,sBAAuB,CAAEY,YAAaf,IAASgB,IAAKzD,QAASgL,IACvEnI,EAAKD,KAAK,sBAAuB,CAAEY,YAAamC,IAAclC,IAAKzD,QAASgL,MAvB7D,yBAAAxG,EAAA5C,SAAA2C,EAAA,kBAAH,yBAAAuG,EAAAS,MAAAzI,KAAAiG,YAAA,yCA8BPrG,+bC9ETkD,aAWJ,SAAAA,EAAYc,GAAQ,IAAA7D,EAAAC,kGAAAC,CAAAD,KAAA8C,GAAA5C,EAAAF,KAAA,wBAVI,CACtB6D,KAAQ,KACRC,KAAQ,OAQU5D,EAAAF,KAAA,mBALD,CACjB6D,KAAQ,gCACRC,KAAQ,uCAGU5D,EAAAF,KAAA,SAiBX,WACH+D,SAAS1E,KACXU,EAAK2I,0BAELtB,WAAWrH,EAAKmH,OAAQ,OApB1BlH,KAAK4D,OAASA,EAEdpJ,OAAOwJ,iBAAiB,UAAW,SAACtF,GAC9BA,EAAE8G,MAAyB,iBAAjB9G,EAAE8G,KAAKmD,MACnB5I,EAAK6D,OAAOM,gBAAgBxF,EAAE8G,KAAKvB,QAC1BvF,EAAE8G,MAAyB,oBAAjB9G,EAAE8G,KAAKmD,OAC1B5I,EAAK6D,OAAOM,gBAAgBxF,EAAE8G,KAAKvB,QAAQ,KAE5C,8CAIL,WACEjE,KAAKkH,kGAWP,SAAA/J,EAAkCC,EAAKC,EAAM2B,EAAWC,GAAxD,OAAApB,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACE+B,KAAK4D,OAAOQ,uBACZpE,KAAK4D,OAAOS,SAAZ,GAAAnG,OAAwBd,EAAxB,yBAAAc,OAAmDb,EAAnD,eAAAa,OAAqEc,EAArE,aAAAd,OAA0Fe,IAF5FlB,EAAAE,KAAA,EAGQ+B,KAAK4D,OAAOa,mBAHpB,wBAAA1G,EAAAe,SAAA3B,EAAA6C,sQAOA,SAAOsE,EAAKsE,EAAoBC,GAK9B,IAAIC,EAAY/E,SAASiD,cAAc,UACvC8B,EAAU/C,IAAMzB,EAEhBwE,EAAUC,OAASH,EACnBE,EAAUE,mBAAqBJ,EAE/BC,EAAS1B,YAAY2B,0CAGvB,WAA0B,IAAApD,EAAA1F,KAExBA,KAAKiJ,OAAL,GAAA/K,OAAe8B,KAAKY,iBAAiBiD,KAArC,gBAAyD,WACvD,IAAMqF,EAAKC,mBACXzD,EAAKtC,sBAAsBS,KAAO,WAA4B,OAAbqF,EAAET,WAAF,EAAAxC,WAAoBP,EAAK9B,OAAOgD,oBAChF7C,SAAS1E,MAGZW,KAAKiJ,OAAL,GAAA/K,OAAe8B,KAAKY,iBAAiBkD,KAArC,gBAAyD,WACvD,IAAMoF,EAAKC,mBACXzD,EAAKtC,sBAAsBU,KAAO,WAA4B,OAAboF,EAAET,WAAF,EAAAxC,WAAoBP,EAAK9B,OAAOgD,oBAChF7C,SAAS1E,2CAIDyD,gwECgFf,IAAMsG,EAAO,WAEX,IAAInP,EAAsB,WAAf,oBAAOoP,KAAP,YAAAC,EAAOD,QAAoBA,KAAKA,OAASA,MAAQA,MACzC,gBAAjB,IAAOE,EAAP,YAAAD,EAAOC,KAAsBA,EAAOA,SAAWA,GAAUA,GACzDvJ,MACA,GAEF/F,EAAKmP,IAAM,aAAAI,sOAAAC,CAAAC,EAAAC,EAAkBC,cAAlB,IAAAC,EAAAC,EAAAJ,GAAA,SAAAA,IAAA,IAAA3J,+FAAAE,CAAAD,KAAA0J,GAAA,QAAAK,EAAA9D,UAAA7E,OAAA4I,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAjE,UAAAiE,GAAA,OAAAhK,EAAAiK,EAAApK,EAAA8J,EAAA7O,KAAAyN,MAAAoB,EAAA,CAAA7J,MAAA9B,OAAA8L,KAAA,SAsIAnC,GAtIA3H,EAAAiK,EAAApK,GAAA,kBA+ISqK,GA/ITlK,EAAAiK,EAAApK,GAAA,oBAgKWsK,GAhKXnK,EAAAiK,EAAApK,GAAA,yBAgLgBuK,GAhLhBpK,EAAAiK,EAAApK,GAAA,mBAkMUwK,GAlMVrK,EAAAiK,EAAApK,GAAA,sBA0NayK,GA1NbtK,EAAAiK,EAAApK,GAAA,iBAiPQ0K,GAjPRvK,EAAAiK,EAAApK,GAAA,aAwQI2K,GAxQJxK,EAAAiK,EAAApK,GAAA,gCAkRuBwB,GAlRvBrB,EAAAiK,EAAApK,GAAA,iBAmSQ4K,GAnSRzK,EAAAiK,EAAApK,GAAA,aAoTI6K,GApTJ1K,EAAAiK,EAAApK,GAAA,iBA+TS8K,GA/TT3K,EAAAiK,EAAApK,GAAA,kBAuVU+K,GAvVV5K,EAAAiK,EAAApK,GAAA,WA8WEgL,GA9WF7K,EAAAiK,EAAApK,GAAA,kBAsYSiL,GAtYT9K,EAAAiK,EAAApK,GAAA,aAoZIkL,GApZJ/K,EAAAiK,EAAApK,GAAA,OAmaF4B,GAnaEzB,EAAAiK,EAAApK,GAAA,oBAkcWmD,IAlcXnD,EAAA,OAAA2J,EAAA,IAqcX,IAAIwB,EAAW,KACTC,EAAY,IAAI9I,QAAQ,SAACC,GAAD,OAAa4I,EAAW5I,IAClD7E,EAAQ,KACRC,EAAU,KACV0N,EAAe,CAACzG,IAAShE,IAAKgD,IAAWhD,KAQ7C,SAASb,EAAKuL,EAAOxE,GACnB,IAAI8B,EAAQ5E,SAASuH,YAAY,SAEjC,IAAK,IAAIC,KADT5C,EAAM6C,UAAUH,GAAO,GAAM,GACXxE,EAChB8B,EAAM4C,GAAS1E,EAAO0E,GAExBnC,EAAI/D,cAAcsD,GAmBpB,IAAM/E,EAAS,IAAIqB,IACbwG,EAAa,IAAI7L,IACnB,SAACe,GAAD,OAfJ,SAAgBA,IAEW,GADFyK,EAAaM,UAAU,SAAAC,GAAC,OAAIA,IAAMhL,KAC7ByK,EAAa7K,KAAKI,GAanC0G,CAAO1G,IAChB,SAACA,GAAD,OARH,SAAmBA,GAClB,IAAIiL,EAAmBR,EAAaM,UAAU,SAAAC,GAAC,OAAIA,IAAMhL,IACrDiL,GAAoB,GAAGR,EAAaS,OAAOD,EAAkB,GAMtDtE,CAAU3G,IACnB,SAAC0K,EAAOxE,GAAR,OAAmB/G,EAAKuL,EAAOxE,KAC7BiF,EAAiB,IAAIhJ,IAAgBc,GAErCmI,EAAY,GA8BlB,SAASlE,EAAOmE,GAAsC,IAA7BC,GAA6BhG,UAAA7E,OAAA,QAAA8E,IAAAD,UAAA,GAAAA,UAAA,GAAlB,CAACgG,QAASC,QAArBD,QACvBxO,EAAQuO,EACRtO,EAAUuO,EACVf,GAAS,GAGX,SAASd,IACP,OAAOgB,EAGT,SAASf,EAAkB3J,GACzB,IAAKA,KAAeqL,EAAW,MAAM,IAAI9O,MAAM,uBAE/C,OAAO8O,EAAUrL,GAAa2J,oBAGhC,SAASC,EAAuB5J,GAC9B,IAAKA,KAAeqL,EAAW,MAAM,IAAI9O,MAAM,uBAE/C,OAAO8O,EAAUrL,GAAa4J,yBAGhC,SAASC,EAAiB7J,GACxB,IAAKA,KAAeqL,EAAW,MAAM,IAAI9O,MAAM,uBAE/C,OAAO8O,EAAUrL,GAAa6J,mBA/iBV,SAkjBPE,EAljBO0B,EAAAC,GAAA,OAAAC,EAAA5D,MAAAzI,KAAAiG,WAAA,SAAAoG,IAAA,OAAAA,EAAA1E,EAAA9J,mBAAA+J,KAkjBtB,SAAAzK,EAA8BuD,EAAaG,GAA3C,OAAAhD,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACOyC,KAAeqL,GADtB,CAAAhO,EAAAE,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAAc,EAAAa,OAAA,SAGSmN,EAAUrL,GAAa+J,eAAe5J,IAH/C,wBAAA9C,EAAAe,SAAA3B,OAljBsBsL,MAAAzI,KAAAiG,WAwjBtB,SAAS0E,EAAejK,GACtB,IAAKA,KAAeqL,EAAW,MAAM,IAAI9O,MAAM,uBAE/C,OAAO8O,EAAUrL,GAAaiK,iBA3jBV,SA8jBPH,EA9jBO8B,EAAAC,GAAA,OAAAC,EAAA/D,MAAAzI,KAAAiG,WAAA,SAAAuG,IAAA,OAAAA,EAAA7E,EAAA9J,mBAAA+J,KA8jBtB,SAAA7I,EAAmC2B,EAAaK,GAAhD,OAAAlD,mBAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,aACOyC,KAAeqL,GADtB,CAAA7M,EAAAjB,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAAiC,EAAAN,OAAA,SAGSmN,EAAUrL,GAAa8J,oBAAoBzJ,IAHpD,wBAAA7B,EAAAJ,SAAAC,OA9jBsB0J,MAAAzI,KAAAiG,WAAA,SAokBPyE,EApkBO+B,EAAAC,GAAA,OAAAC,EAAAlE,MAAAzI,KAAAiG,WAAA,SAAA0G,IAAA,OAAAA,EAAAhF,EAAA9J,mBAAA+J,KAokBtB,SAAAnG,EAA0Bf,EAAaM,GAAvC,OAAAnD,mBAAAC,KAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,aACOyC,KAAeqL,GADtB,CAAArK,EAAAzD,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAAyE,EAAA9C,OAAA,SAGSmN,EAAUrL,GAAagK,WAAW1J,IAH3C,wBAAAU,EAAA5C,SAAA2C,OApkBsBgH,MAAAzI,KAAAiG,WA0kBtB,SAAS2E,EAAWlK,GAClB,IAAKA,KAAeqL,EAAW,MAAM,IAAI9O,MAAM,uBAE/C,OAAO8O,EAAUrL,GAAakK,aAGhC,SAASrJ,EAA8Bb,GACrC,IAAKA,KAAeqL,EAAW,MAAM,IAAI9O,MAAM,uBAE/C,OAAO8O,EAAUrL,GAAaa,gCAnlBV,SAslBPsJ,EAtlBO+B,EAAAC,GAAA,OAAAC,EAAArE,MAAAzI,KAAAiG,WAAA,SAAA6G,IAAA,OAAAA,EAAAnF,EAAA9J,mBAAA+J,KAslBtB,SAAA/F,EAA8BnB,EAAaO,GAA3C,OAAApD,mBAAAC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,aACOyC,KAAeqL,GADtB,CAAAjK,EAAA7D,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAA6E,EAAA7D,KAAA,EAEYkN,EAFZ,UAAArJ,EAAAyC,GAAAzC,EAAAjD,MAAAiD,EAAAyC,GAAA,CAAAzC,EAAA7D,KAAA,QAAA6D,EAAAyC,IAE0B7G,EAF1B,WAAAoE,EAAAyC,GAAA,CAAAzC,EAAA7D,KAAA,cAEyC,IAAIhB,MAAM,uCAFnD,cAAA6E,EAAA7D,KAAA,GAIe8N,EAAUrL,GAAamK,eAAe5J,GAJrD,eAAAa,EAAAlD,OAAA,SAAAkD,EAAAjD,MAAA,yBAAAiD,EAAAhD,SAAA+C,OAtlBsB4G,MAAAzI,KAAAiG,WAAA,SA6lBP6E,EA7lBOiC,EAAAC,EAAAC,GAAA,OAAAC,EAAAzE,MAAAzI,KAAAiG,WAAA,SAAAiH,IAAA,OAAAA,EAAAvF,EAAA9J,mBAAA+J,KA6lBtB,SAAA1F,EAA+BxB,EAAa5D,EAAWC,GAAvD,OAAAc,mBAAAC,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,cAAAmE,EAAAnE,KAAA,EACgBkP,EAAOzM,EAAa5D,EAAWC,GAAM,GAAM,GAD3D,cAAAqF,EAAAxD,OAAA,SAAAwD,EAAAvD,MAAA,wBAAAuD,EAAAtD,SAAAoD,OA7lBsBuG,MAAAzI,KAAAiG,WAAA,SAimBP8E,EAjmBOqC,EAAAC,EAAAC,GAAA,OAAAC,EAAA9E,MAAAzI,KAAAiG,WAAA,SAAAsH,IAAA,OAAAA,EAAA5F,EAAA9J,mBAAA+J,KAimBtB,SAAA4F,EAAwB9M,EAAa5D,EAAWC,GAAhD,OAAAc,mBAAAC,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAxP,KAAA,EACgBkP,EAAOzM,EAAa5D,EAAWC,GAAM,GAAM,GAD3D,cAAA0Q,EAAA7O,OAAA,SAAA6O,EAAA5O,MAAA,wBAAA4O,EAAA3O,SAAA0O,OAjmBsB/E,MAAAzI,KAAAiG,WAAA,SAqmBP+E,EArmBO0C,EAAAC,EAAAC,GAAA,OAAAC,EAAApF,MAAAzI,KAAAiG,WAAA,SAAA4H,IAAA,OAAAA,EAAAlG,EAAA9J,mBAAA+J,KAqmBtB,SAAAkG,EAA+BpN,EAAa5D,EAAWC,GAAvD,OAAAc,mBAAAC,KAAA,SAAAiQ,GAAA,cAAAA,EAAA/P,KAAA+P,EAAA9P,MAAA,cAAA8P,EAAA9P,KAAA,EACgBkP,EAAOzM,EAAa5D,EAAWC,GAAM,GAAO,GAD5D,cAAAgR,EAAAnP,OAAA,SAAAmP,EAAAlP,MAAA,wBAAAkP,EAAAjP,SAAAgP,OArmBsBrF,MAAAzI,KAAAiG,WAAA,SAymBPkH,EAzmBOa,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA5F,MAAAzI,KAAAiG,WAAA,SAAAoI,IAAA,OAAAA,EAAA1G,EAAA9J,mBAAA+J,KAymBtB,SAAA0G,EAAsB5N,EAAa5D,EAAWC,EAAMQ,EAAWC,GAA/D,OAAAK,mBAAAC,KAAA,SAAAyQ,GAAA,cAAAA,EAAAvQ,KAAAuQ,EAAAtQ,MAAA,aACOyC,KAAeqL,GADtB,CAAAwC,EAAAtQ,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAAsR,EAAAtQ,KAAA,EAEYkN,EAFZ,UAAAoD,EAAAhK,GAAAgK,EAAA1P,MAAA0P,EAAAhK,GAAA,CAAAgK,EAAAtQ,KAAA,QAAAsQ,EAAAhK,IAE0B7G,EAF1B,WAAA6Q,EAAAhK,GAAA,CAAAgK,EAAAtQ,KAAA,cAEyC,IAAIhB,MAAM,uCAFnD,cAAAsR,EAAAtQ,KAAA,GAIe8N,EAAUrL,GAAayM,OAAOrQ,EAAWC,EAAMQ,EAAWC,GAJzE,eAAA+Q,EAAA3P,OAAA,SAAA2P,EAAA1P,MAAA,yBAAA0P,EAAAzP,SAAAwP,OAzmBsB7F,MAAAzI,KAAAiG,WAAA,SAgnBPgF,EAhnBOuD,GAAA,OAAAC,EAAAhG,MAAAzI,KAAAiG,WAAA,SAAAwI,IAAA,OAAAA,EAAA9G,EAAA9J,mBAAA+J,KAgnBtB,SAAA8G,EAA0BhO,GAA1B,OAAA7C,mBAAAC,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,aACOyC,KAAeqL,GADtB,CAAA4C,EAAA1Q,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAA0R,EAAA1Q,KAAA,EAEYkN,EAFZ,UAAAwD,EAAApK,GAAAoK,EAAA9P,MAAA8P,EAAApK,GAAA,CAAAoK,EAAA1Q,KAAA,QAAA0Q,EAAApK,IAE0B7G,EAF1B,WAAAiR,EAAApK,GAAA,CAAAoK,EAAA1Q,KAAA,cAEyC,IAAIhB,MAAM,uCAFnD,cAAA0R,EAAA1Q,KAAA,GAIe8N,EAAUrL,GAAauK,aAJtC,eAAA0D,EAAA/P,OAAA,SAAA+P,EAAA9P,MAAA,yBAAA8P,EAAA7P,SAAA4P,OAhnBsBjG,MAAAzI,KAAAiG,WAAA,SAunBPtE,EAvnBOiN,EAAAC,GAAA,OAAAC,GAAArG,MAAAzI,KAAAiG,WAAA,SAAA6I,KAAA,OAAAA,GAAAnH,EAAA9J,mBAAA+J,KAunBtB,SAAAmH,EAAoBrO,EAAazB,GAAjC,OAAApB,mBAAAC,KAAA,SAAAkR,GAAA,cAAAA,EAAAhR,KAAAgR,EAAA/Q,MAAA,aACOyC,KAAeqL,GADtB,CAAAiD,EAAA/Q,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAA+R,EAAA/Q,KAAA,EAEYkN,EAFZ,UAAA6D,EAAAzK,GAAAyK,EAAAnQ,MAAAmQ,EAAAzK,GAAA,CAAAyK,EAAA/Q,KAAA,QAAA+Q,EAAAzK,IAE0B7G,EAF1B,WAAAsR,EAAAzK,GAAA,CAAAyK,EAAA/Q,KAAA,cAEyC,IAAIhB,MAAM,uCAFnD,cAAA+R,EAAA/Q,KAAA,GAIe8N,EAAUrL,GAAaiB,KAAK1C,GAJ3C,eAAA+P,EAAApQ,OAAA,SAAAoQ,EAAAnQ,MAAA,yBAAAmQ,EAAAlQ,SAAAiQ,OAvnBsBtG,MAAAzI,KAAAiG,WAAA,SA8nBP/C,GA9nBO+L,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAA5G,MAAAzI,KAAAiG,WAAA,SAAAoJ,KAAA,OAAAA,GAAA1H,EAAA9J,mBAAA+J,KA8nBtB,SAAA0H,EAAiC5O,EAAayB,EAAQ7E,EAAIyD,GAA1D,OAAAlD,mBAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,aACOyC,KAAeqL,GADtB,CAAAwD,EAAAtR,KAAA,cACuC,IAAIhB,MAAM,uBADjD,cAAAsS,EAAAtR,KAAA,EAEYkN,EAFZ,UAAAoE,EAAAhL,GAAAgL,EAAA1Q,MAAA0Q,EAAAhL,GAAA,CAAAgL,EAAAtR,KAAA,QAAAsR,EAAAhL,IAE0B7G,EAF1B,WAAA6R,EAAAhL,GAAA,CAAAgL,EAAAtR,KAAA,cAEyC,IAAIhB,MAAM,uCAFnD,cAAAsS,EAAAtR,KAAA,GAIe8N,EAAUrL,GAAawC,kBAAkBf,EAAQ7E,EAAIyD,GAJpE,eAAAwO,EAAA3Q,OAAA,SAAA2Q,EAAA1Q,MAAA,yBAAA0Q,EAAAzQ,SAAAwQ,OA9nBsB7G,MAAAzI,KAAAiG,WAqoBtB,OA5IA8F,EAAUpM,IAASgB,KAAO,IAAIhB,IAC5B8L,EACA,kBAAMhO,GACN,kBAAaC,EAAO+K,WAAP,EAAAxC,YACb,SAACoF,EAAOxE,GAAR,OAAmB/G,EAAKuL,EAAOxE,KACjCkF,EAAUpI,IAAWhD,KAAO,IAAIgD,IAC9BC,EACA,kBAAMnG,GACN,kBAAaC,EAAO+K,WAAP,EAAAxC,YACb,SAACoF,EAAOxE,GAAR,OAAmB/G,EAAKuL,EAAOxE,KACjCkF,EAAUlJ,IAAclC,KAAO,IAAIkC,IACjCiJ,EACAL,EACA,kBAAMhO,GACN,kBAAaC,EAAO+K,WAAP,EAAAxC,YACb,SAACoF,EAAOxE,GAAR,OAAmB/G,EAAKuL,EAAOxE,KAEjCkF,EAAUpH,IAAShE,KAAO,IAAIgE,IAC5BmH,EACAL,EACA,kBAAMhO,GACN,kBAAaC,EAAO+K,WAAP,EAAAxC,YACb,SAACoF,EAAOxE,GAAR,OAAmB/G,EAAKuL,EAAOxE,KAGjCjD,EAAO4L,OACP/D,EAAW+D,OACX1D,EAAe0D,OAiHRvV,EAAKmP,IAroBD,GAwoBEA,6CChyBf,IAAAqG,EAGAA,EAAA,WACA,OAAAzP,KADA,GAIA,IAEAyP,KAAA,IAAAC,SAAA,iBACC,MAAAhR,GAED,iBAAAlE,SAAAiV,EAAAjV,QAOAJ,EAAAD,QAAAsV","file":"ledgers.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"web3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"__oh$__\", [\"web3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"__oh$__\"] = factory(require(\"web3\"));\n\telse\n\t\troot[\"__oh$__\"] = factory(root[\"Web3\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__6__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","class imparter_fns {\r\n  static getTxs_check_details(recipient, date) {\r\n    if (date && !(date instanceof Date)) throw new Error(\"'date' must be a Date is passed in\");\r\n    if (!('address' in recipient) || !recipient.address) throw new Error(\"'address' required in recipient\");  }\r\n\r\n  static async getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, token, __fetch) {\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    let since = '';\r\n    if (date) {\r\n      since = `&since=${date.toISOString()}`;\r\n    }\r\n    let dollarsQuery = '';\r\n    if (tallyDollars) {\r\n      dollarsQuery = `&tally-dollars=true`\r\n    }\r\n    return await __fetch(`${uri}/get-transactions/${from}/${to}?tally-only=${tallyOnly ? 'true' : 'false'}${dollarsQuery}${since}&include-refunds=true`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${token}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });    \r\n  }\r\n\r\n  static async isSignatureValid_call(uri, signature, message, from, token, __fetch) {\r\n    return await __fetch(`${uri}/is-signature-valid`, {\r\n      method: \"POST\",\r\n      headers: { \r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        signature: btoa(signature),\r\n        message: btoa(message),\r\n        address: from\r\n      })\r\n    })\r\n      .then((result) => {\r\n        if (result.status == 200) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n  }\r\n}\r\n\r\nexport default imparter_fns;","import imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass eth_web3 {\r\n  static tag = 'eth-web3';\r\n\r\n  remuneration_uri = {\r\n    'main':'https://ethereum.overhide.io',\r\n    'rinkeby':'https://rinkeby.ethereum.overhide.io'\r\n  };\r\n\r\n  constructor(web3_wallet, getToken, __fetch, fire) {\r\n    this.web3_wallet = web3_wallet;\r\n    this.eth_accounts = web3_wallet.eth_accounts;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n\r\n    web3_wallet.networkChangeDelegates.push((network) => this.onNetworkChange(network));\r\n  }\r\n\r\n  onNetworkChange(network) {\r\n    this.fire('onNetworkChange',{imparterTag: eth_web3.tag, name: network, mode: network == 'main' ? 'prod' : 'test', uri: this.remuneration_uri[network]});\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return false;\r\n  }\r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }    \r\n\r\n  canChangeNetwork() {\r\n    return false;\r\n  }   \r\n\r\n  setCredentials(credentials) {\r\n    return false;\r\n  }\r\n\r\n  getCredentials() {\r\n    return {\"address\":this.web3_wallet.walletAddress};\r\n  }    \r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }  \r\n\r\n  setNetwork(details) {\r\n    return false;\r\n  }\r\n\r\n  getNetwork() {\r\n    return { \"name\": this.web3_wallet.network, \"mode\": this.web3_wallet.network == 'main' ? 'prod' : 'test', \"uri\": this.remuneration_uri[this.web3_wallet.network]};\r\n  }  \r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    return this.remuneration_uri[this.web3_wallet.network];      \r\n  }  \r\n\r\n  async getFromDollars(dollarAmount) {\r\n    const hostPrefix = this.web3_wallet.network === 'main' ? '' : 'test.';\r\n    const now = (new Date()).toISOString();\r\n    const result = await this.__fetch(`https://${hostPrefix}rates.overhide.io/rates/wei/${now}`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${this.getToken()}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n    if (!result || result.length === 0 || ! 'minrate' in result[0] || result[0].minrate === 0) return 0;\r\n    return dollarAmount / result[0].minrate;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.web3_wallet.network) throw new Error(\"network must be set in wallet\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    var from = this.web3_wallet.walletAddress;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }  \r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.web3_wallet.network) throw new Error(\"no network for imparter tag\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.web3_wallet.walletAddress) throw new Error(`imparter ${eth_web3.tag} not active`);\r\n    this.fire('onWalletPopup', {imparterTag: eth_web3.tag});\r\n    return (await window.web3.eth.personal.sign(message, this.web3_wallet.walletAddress, ''));\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.web3_wallet.network) throw new Error(\"no network for imparter tag\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    this.fire('onWalletPopup', {imparterTag: eth_web3.tag});\r\n    await (new Promise((resolve, reject) => {\r\n      window.web3.eth.sendTransaction({ from: from, to: to, value: amount })\r\n      .on('confirmation', function (confirmationNumber, receipt) {\r\n        resolve();\r\n      })\r\n      .on('error', (error) => {\r\n        reject(error);\r\n      }); \r\n    }));\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default eth_web3;","import ohledger_fns from '../fns/ohledger_fns.js';\r\nimport imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass ohledger_web3 {\r\n  static tag = 'ohledger-web3';\r\n\r\n  mode = 'test';\r\n\r\n  constructor(overhide_wallet, web3_wallet, getToken, __fetch, fire) {\r\n    this.web3_wallet = web3_wallet;\r\n    this.overhide_wallet = overhide_wallet;\r\n    this.__fetch = __fetch;\r\n    this.getToken = getToken;\r\n    this.fire = fire;\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return false;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }    \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n  \r\n  setCredentials(credentials) {\r\n    return false;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\": this.web3_wallet.walletAddress};\r\n  }  \r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    ohledger_fns.setNetwork_check_details(details);\r\n\r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: ohledger_web3.tag, currency: 'USD', mode: details.mode, uri: this.overhide_wallet.remuneration_uri[details.mode] });\r\n    return true;\r\n  }\r\n\r\n  getNetwork() {\r\n    return { \"currency\": \"USD\", \"mode\": this.mode, \"uri\": this.overhide_wallet.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.overhide_wallet.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    return dollarAmount * 100;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    var from = this.web3_wallet.walletAddress;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }  \r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.web3_wallet.walletAddress) throw new Error(`imparter ${ohledger_web3.tag} not active`);\r\n    this.fire('onWalletPopup', {imparterTag: ohledger_web3.tag});\r\n    return (await window.web3.eth.personal.sign(message, this.web3_wallet.walletAddress, ''));\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    await ohledger_fns.createTransaction(\r\n      amount, \r\n      from,\r\n      to,\r\n      (message) => this.sign(message),\r\n      (from, signature, message) => this.overhide_wallet.showOhLedgerGratisIframeUri(uri, from, signature, message), \r\n      this.overhide_wallet.oh_ledger_transact_fn[this.mode], \r\n      options);\r\n\r\n    return true;\r\n  }    \r\n}\r\n\r\nexport default ohledger_web3;","class ohledger_fns {\r\n  static setNetwork_check_details(details) {\r\n    if (!('currency' in details)) throw new Error(\"'currency' must be passed in\");\r\n    if (!('mode' in details)) throw new Error(\"'mode' must be passed in\");\r\n    details.currency = details.currency.toUpperCase();\r\n    details.mode = details.mode.toLowerCase();\r\n    if (details.currency !== 'USD') throw new Error(\"'currency' must be 'USD'\");\r\n    if (details.mode !== 'prod' && details.mode !== 'test') throw new Error(\"'mode' must be 'prod' or 'test'\");    \r\n  }\r\n\r\n  static async createTransaction(amount, from, to, signFn, showGratisFn, ohLedgerTransactFn, options) {\r\n    if (amount == 0) {\r\n      if ('message' in options && options.message && 'signature' in options && options.signature) {\r\n        var message = options.message;\r\n        var signature = options.signature;\r\n      } else {\r\n        var message = `verify ownership of address by signing on ${new Date().toLocaleString()}`;\r\n        var signature = await signFn(message);\r\n      }\r\n      await showGratisFn(from, signature, message);\r\n    } else {\r\n      await ohLedgerTransactFn(amount, from, to);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ohledger_fns;","import imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass btc_manual {\r\n  static tag = 'btc-manual';\r\n\r\n  remuneration_uri = {\r\n    'prod':'https://bitcoin.overhide.io',\r\n    'test':'https://test.bitcoin.overhide.io'\r\n  };\r\n\r\n  url = 'http://localhost:8080/src/frames';\r\n  address = null;\r\n  mode = 'test';\r\n\r\n  constructor(domFns, getToken, __fetch, fire) {\r\n    this.domFns = domFns;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n\r\n    window.document.addEventListener('oh$-popup-signature', (e) => {\r\n      if ('detail' in e && e.detail && 'signature' in e.detail) {\r\n        this.domFns.makePopupHidden(e.detail.signature, false);\r\n      }\r\n      this.domFns.makePopupHidden(`no signature`, true);      \r\n    });    \r\n  }\r\n\r\n  canSetCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }  \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n\r\n  setCredentials(credentials) {\r\n    if (!('address' in credentials)) throw new Error(\"'address' must be passed in\");\r\n    switch(this.mode) {\r\n      case 'bitcoin_testnet':\r\n        if (!/(tb(0([ac-hj-np-z02-9]{39}|[ac-hj-np-z02-9]{59})|1[ac-hj-np-z02-9]{8,87})|[mn2][a-km-zA-HJ-NP-Z1-9]{25,39})/.test(credentials.address)) {\r\n          throw new Error(`invalid bitcoin_testnet address: ${credentials.address}`);\r\n        }\r\n        break;\r\n      case 'bitcoin':\r\n        if (!/(bc(0([ac-hj-np-z02-9]{39}|[ac-hj-np-z02-9]{59})|1[ac-hj-np-z02-9]{8,87})|[13][a-km-zA-HJ-NP-Z1-9]{25,35})/.test(credentials.address)) {\r\n          throw new Error(`invalid bitcoin address: ${credentials.address}`);\r\n        }\r\n        break;\r\n    }\r\n    this.address = credentials.address;\r\n    this.fire('onCredentialsUpdate', { imparterTag: btc_manual.tag, address: this.address});\r\n    return true;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\":this.address};\r\n  }\r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    if (!('mode' in details)) throw new Error(\"'mode' must be passed in\");\r\n    details.mode = details.mode.toLowerCase();\r\n    if (details.mode !== 'prod' && details.mode !== 'test') throw new Error(\"'mode' must be 'prod' or 'test'\");    \r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: btc_manual.tag, mode: details.mode, uri: this.remuneration_uri[details.mode]});\r\n    return true;\r\n  }  \r\n\r\n  getNetwork() {\r\n    return { \"mode\": this.mode, \"uri\": this.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    const hostPrefix = this.mode === 'main' ? '' : 'test.';\r\n    const now = (new Date()).toISOString();\r\n    const result = await this.__fetch(`https://${hostPrefix}rates.overhide.io/rates/sat/${now}`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${this.getToken()}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n    if (!result || result.length === 0 || ! 'minrate' in result[0] || result[0].minrate === 0) return 0;\r\n    return dollarAmount / result[0].minrate;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.address) throw new Error(`credentials for imparter ${btc_manual.tag} not set`);\r\n\r\n    this.domFns.hideAllPopupContents();\r\n    const base64Message = btoa(message);\r\n    this.domFns.setFrame(`${this.url}/btc_manual_sign.html?address=${this.address}&message=${base64Message}&token=${this.getToken()}&isTest=${this.mode == 'test'}`);\r\n    return atob(await this.domFns.makePopupVisible());\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    this.domFns.hideAllPopupContents();\r\n    this.domFns.setFrame(`${this.url}/btc_manual_createTransaction.html?from=${this.address}&to=${to}&value=${amount}&isTest=${this.mode == 'test'}`);\r\n    await this.domFns.makePopupVisible();\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default btc_manual;","import ohledger_fns from '../fns/ohledger_fns.js';\r\nimport imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass ohledger {\r\n  static tag = 'ohledger';\r\n\r\n  address = null;\r\n  secret = null;\r\n  mode = 'test';\r\n\r\n  constructor(overhide_wallet, web3_wallet, getToken, __fetch, fire) {\r\n    this.overhide_wallet = overhide_wallet;\r\n    this.eth_accounts = web3_wallet.eth_accounts;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n\r\n  setCredentials(credentials) {\r\n    if (!('secret' in credentials)) throw new Error(\"'secret' must be passed in\");\r\n    if ('address' in credentials && credentials.address) {\r\n      this.address = credentials.address.toLowerCase();\r\n    } else {\r\n      this.address = this.eth_accounts.privateKeyToAccount(credentials.secret).address.toLowerCase();\r\n    }\r\n    this.secret = credentials.secret;\r\n    try {\r\n      if (!(this.eth_accounts.recover(this.eth_accounts.sign('test message', this.secret)).toLowerCase() == this.address)) {\r\n        throw new Error(\"'secret' not valid for 'address\");\r\n      }\r\n    } catch (err) {\r\n      throw new Error(\"'secret' not valid for 'address\");\r\n    }        \r\n    this.fire('onCredentialsUpdate', { imparterTag: ohledger.tag, address: this.address, secret: this.secret});\r\n    return true;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\":this.address, \"secret\":this.secret};\r\n  }\r\n\r\n  generateCredentials(options) {\r\n    const res = this.eth_accounts.create();\r\n    this.address = res.address.toLowerCase();\r\n    this.secret = res.privateKey;\r\n    this.fire('onCredentialsUpdate', { imparterTag: ohledger.tag, address: this.address, secret: this.secret});\r\n    return true;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    ohledger_fns.setNetwork_check_details(details);\r\n\r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: ohledger.tag, currency: 'USD', mode: details.mode, uri: this.overhide_wallet.remuneration_uri[details.mode]});\r\n    return true;\r\n  }  \r\n\r\n  getNetwork() {\r\n    return { \"currency\": \"USD\", \"mode\": this.mode, \"uri\": this.overhide_wallet.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.overhide_wallet.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    return dollarAmount * 100;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.secret) throw new Error(`credentials for imparter ${ohledger.tag} not set`);\r\n    return this.eth_accounts.sign(message, this.secret).signature;\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    await ohledger_fns.createTransaction(\r\n      amount, \r\n      from,\r\n      to,\r\n      (message) => this.sign(message),\r\n      (from, signature, message) => this.overhide_wallet.showOhLedgerGratisIframeUri(uri, from, signature, message), \r\n      this.overhide_wallet.oh_ledger_transact_fn[this.mode], \r\n      options);\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default ohledger;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","// A modal to display iframes and forms on behalf of the library.\r\nclass dom_fns {\r\n  resolve = null;\r\n  reject = null;\r\n\r\n  constructor() {\r\n    window.document.addEventListener('oh$-popup-close', (e) => {\r\n      this.makePopupHidden('user close', true);\r\n    });    \r\n  }\r\n\r\n  // initialize this after all dependencies wired up\r\n  init() {\r\n    this.createPopup();\r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  raiseEventClick(imparterTag, triggerFor) {\r\n    window.parent.document.dispatchEvent(new CustomEvent('oh$-event', {detail: JSON.stringify({\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor,\r\n      click: true\r\n    })}));\r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  raiseEvent(imparterTag, triggerFor, data) {\r\n    window.parent.document.dispatchEvent(new CustomEvent('oh$-event', {detail: JSON.stringify({\r\n      ...data,\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor\r\n    })}));    \r\n  }\r\n\r\n  // promise used for popups and resolutions via oh-ledger-* messages.\r\n  setupNewPromise() {\r\n    console.assert(!this.resolve, 'oh-popup promise being set but already set when calling setupNewPromise(..)');\r\n    return new Promise((rs, rj) => {\r\n      this.resolve = rs;\r\n      this.reject = rj;\r\n    });    \r\n  }\r\n\r\n  // Setup the iframe source\r\n  setFrame(src, widthEm=80, heightEm=60) {\r\n    const frame = document.getElementById('oh-ledger-iframe');\r\n    frame.setAttribute('src', src);\r\n    frame.style.display='block';    \r\n    const container = document.getElementById('oh-popup-container-div');\r\n    container.style.width=`${widthEm}em`;\r\n    container.style.height=`${heightEm}em`;\r\n  }\r\n\r\n  // make popup visible to be hidden with makePopupHidden\r\n  makePopupVisible() {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    popup.style.display='block';\r\n    return this.setupNewPromise();\r\n  }\r\n\r\n  makePopupHidden(params, isError) {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    this.hideAllPopupContents();\r\n    popup.style.display='none';\r\n    console.assert(this.resolve, 'oh-popup promise not set yet calling makePopupHidden(..)');\r\n    if (isError) this.reject(params)\r\n    else this.resolve(params);\r\n    this.resolve = null;\r\n    this.reject = null;\r\n  }\r\n\r\n  hideAllPopupContents() {\r\n    document.getElementById('oh-ledger-iframe').style.display='none';\r\n  }\r\n\r\n  createPopup() {\r\n    var popup = document.createElement('div');\r\n    popup.setAttribute('id','oh-popup-container');\r\n    popup.style.display='none';\r\n    popup.innerHTML = `\r\n      <div id=\"oh-popup-container-div\">\r\n        <a href=\"#\" title=\"Close\" id=\"oh-popup-close\" onclick=\"window.parent.document.dispatchEvent(new CustomEvent('oh$-popup-close',{})); return false;\">X</a>\r\n        <iframe id=\"oh-ledger-iframe\"></iframe>\r\n      </div>\r\n    `;\r\n    var style = document.createElement('style');\r\n    style.innerHTML =`\r\n      #oh-popup-container {\r\n          position: fixed;\r\n          font-family: arial, \"lucida console\", sans-serif;\r\n          top: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: rgba(0, 0, 0, 0.8);\r\n          z-index: 999;\r\n          opacity:1;\r\n          pointer-events: auto;\r\n      }\r\n      #oh-popup-container-div {\r\n          max-width: 80vw;\r\n          max-height: 75vh;\r\n          position: relative;\r\n          top: 15vh;\r\n          margin: auto auto;\r\n          padding: 5px 5px 5px 5px;\r\n          background: white;\r\n      }\r\n      #oh-popup-close {\r\n          background: grey;\r\n          color: white;\r\n          line-height: 25px;\r\n          position: absolute;\r\n          right: 2px;\r\n          text-align: center;\r\n          top: 2px;\r\n          width: 24px;\r\n          text-decoration: none;\r\n          font-weight: bold;\r\n      }\r\n      #oh-popup-close:hover {\r\n          background: black;\r\n      }\r\n\r\n      #oh-ledger-iframe {\r\n        display: none;\r\n        border: 0;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `;\r\n    var attach = () => {\r\n      if (document.body) {\r\n        document.body.appendChild(popup);\r\n        document.body.appendChild(style);\r\n      } else {\r\n        setTimeout(attach, 100);\r\n      };\r\n    };\r\n    attach();\r\n  }  \r\n}\r\n\r\nexport default dom_fns;","import Web3 from 'web3';\r\nimport eth_web3 from '../imparters/eth-web3.js';\r\nimport ohledger_web3 from '../imparters/ohledger-web3.js';\r\n\r\nconst WALLET_CHECK_INTERVAL_MS = 500;\r\n\r\nclass web3_wallet {\r\n  eth_accounts = (new Web3('http://localhost:8545')).eth.accounts;\r\n  walletAddress = null;\r\n  network = null;\r\n\r\n  networkChangeDelegates = [];\r\n\r\n  constructor(addTag, removeTag, fire) {\r\n    this.addTag = addTag;\r\n    this.removeTag = removeTag;\r\n    this.fire = fire;\r\n  }\r\n\r\n  // initialize this after all dependencies wired up\r\n  init() {\r\n    this.detectWeb3Wallet();\r\n  }\r\n\r\n  /**\r\n   * Setup window.web3 to be the wallet's if available or offline if not (just for signing).\r\n   * \r\n   * Sets up a timer to check for wallet being logged in and address changes.\r\n   * \r\n   * @ignore\r\n   */\r\n  detectWeb3Wallet() {    \r\n    if (!window.ethereum) return;\r\n \r\n    // Modern dapp browsers...\r\n    (async () => {\r\n      try {\r\n        await window.ethereum.enable();\r\n        window.web3 = new Web3(window.ethereum);\r\n      } catch (e) {/*noop*/ }\r\n\r\n      await detectWalletCb();\r\n\r\n      setInterval(async function () {\r\n        await detectWalletCb();\r\n      }, WALLET_CHECK_INTERVAL_MS);\r\n    })();\r\n\r\n    var detectWalletCb = async () => {\r\n      try {\r\n        var currentAccounts = await window.web3.eth.getAccounts();\r\n        var currentAddress = (currentAccounts && currentAccounts.length > 0) ? currentAccounts[0] : null;\r\n        var currentNetwork = (await window.web3.eth.net.getNetworkType());\r\n      } catch (e) {/*noop*/}\r\n      if (currentNetwork !== this.network) {\r\n        this.network = currentNetwork;\r\n        this.networkChangeDelegates.forEach(d => d(this.network));        \r\n      }\r\n      if (currentAddress !== this.walletAddress) {\r\n        if (currentAddress) { /* add imparters */\r\n          this.addTag(eth_web3.tag);\r\n          this.addTag(ohledger_web3.tag);\r\n        } else { /* remove imparters */\r\n          this.removeTag(eth_web3.tag);\r\n          this.removeTag(ohledger_web3.tag);\r\n        } \r\n        this.walletAddress = currentAddress;\r\n        this.fire('onWalletChange', { imparterTag: eth_web3.tag, isPresent: !!currentAddress });\r\n        this.fire('onWalletChange', { imparterTag: ohledger_web3.tag, isPresent: !!currentAddress });\r\n        if (currentAddress) {\r\n          this.fire('onCredentialsUpdate', { imparterTag: eth_web3.tag, address: currentAddress });\r\n          this.fire('onCredentialsUpdate', { imparterTag: ohledger_web3.tag, address: currentAddress });\r\n        }\r\n      }\r\n    }\r\n  } \r\n}\r\n\r\nexport default web3_wallet;","class overhide_wallet {\r\n  oh_ledger_transact_fn = {\r\n    'prod': null,\r\n    'test': null\r\n  };\r\n\r\n  remuneration_uri = {\r\n    'prod': 'https://ledger.overhide.io/v1',\r\n    'test': 'https://test.ledger.overhide.io/v1'\r\n  }\r\n\r\n  constructor(domFns) {\r\n    this.domFns = domFns;\r\n\r\n    window.addEventListener('message', (e) => {\r\n      if (e.data && e.data.event === 'oh-ledger-ok') {\r\n        this.domFns.makePopupHidden(e.data.detail);\r\n      } else if (e.data && e.data.event === 'oh-ledger-error') {\r\n        this.domFns.makePopupHidden(e.data.detail, true);\r\n      }\r\n    }, false);\r\n  }\r\n\r\n  // initialize this after all dependencies wired up\r\n  init() {\r\n    this.attach();\r\n  }\r\n  \r\n  attach = () => {\r\n    if (document.body) {\r\n      this.loadOhLedgerTransactFns();\r\n    } else {\r\n      setTimeout(this.attach, 100);\r\n    };\r\n  };\r\n\r\n  async showOhLedgerGratisIframeUri(uri, from, signature, message) {\r\n    this.domFns.hideAllPopupContents();\r\n    this.domFns.setFrame(`${uri}/gratis.html?address=${from}&signature=${signature}&message=${message}`);\r\n    await this.domFns.makePopupVisible();\r\n  }\r\n\r\n  // https://stackoverflow.com/a/31374433\r\n  loadJS(url, implementationCode, location) {\r\n    //url is URL of external file, implementationCode is the code\r\n    //to be called from the file, location is the location to \r\n    //insert the <script> element\r\n\r\n    var scriptTag = document.createElement('script');\r\n    scriptTag.src = url;\r\n\r\n    scriptTag.onload = implementationCode;\r\n    scriptTag.onreadystatechange = implementationCode;\r\n\r\n    location.appendChild(scriptTag);\r\n  };\r\n\r\n  loadOhLedgerTransactFns() {\r\n    // load prod ohledger transact fn\r\n    this.loadJS(`${this.remuneration_uri.prod}/transact.js`, () => {\r\n      const fn = oh_ledger_transact;\r\n      this.oh_ledger_transact_fn.prod = (...args) => { fn(...args); return this.domFns.setupNewPromise(); }\r\n    }, document.body);\r\n\r\n    // load test ohledger transact fn\r\n    this.loadJS(`${this.remuneration_uri.test}/transact.js`, () => {\r\n      const fn = oh_ledger_transact;\r\n      this.oh_ledger_transact_fn.test = (...args) => { fn(...args); return this.domFns.setupNewPromise(); }\r\n    }, document.body);\r\n  }\r\n}\r\n\r\nexport default overhide_wallet;","import dom_fns from './fns/dom_fns';\r\nimport eth_web3 from './imparters/eth-web3.js';\r\nimport btc_manual from './imparters/btc-manual.js';\r\nimport ohledger_web3 from './imparters/ohledger-web3.js';\r\nimport ohledger from './imparters/ohledger.js';\r\nimport web3_wallet from './wallets/web3_wallet.js';\r\nimport overhide_wallet from './wallets/overhide_wallet.js';\r\n\r\n//     ledgers.js \r\n//     https://ledger.overhide.io\r\n//     (c) 2021 Overhide LLC, Wyoming, USA\r\n//     ledgers.js may be freely distributed under the MIT license.\r\n\r\n/**\r\n * @namespace oh$\r\n * @description \r\n * \r\n * ### REFERENCES\r\n * \r\n * Library code: https://github.com/overhide/ledgers.js/blob/master/dist/ledgers.js.\r\n *\r\n * Repository for this library is https://github.com/overhide/ledgers.js.\r\n * \r\n * The above repository contains a demo app of this library working in conjunction with:\r\n * \r\n * - the *overhide* Ethereum remuneration provider (Rinkeby testnet -- https://rinkeby.ethereum.overhide.io) \r\n * - the *overhide-ledger* (test environment -- https://test.ledger.overhide.io)\r\n * - the *overhide* Bitcoin remuneration provider (testnet -- https://test.bitcoin.overhide.io) \r\n * \r\n * ### ABOUT\r\n * \r\n * JavaScript library to be used in-browser and interrogate *overhide* remuneration providers as to validity\r\n * of ledger credentials and transactions involving these credentials.\r\n * \r\n * The goal of the library and the *overhide* remuneration providers is to ease using of all types of ledgers for\r\n * authentication (I am who I say) and authorization (paid access tiers).\r\n * \r\n * The library leverages injected currency wallets where it can, and exposes functions to work with *loose* currencies \r\n * (without wallets) where it cannot.\r\n * \r\n * The library exports the `oh$` object for use as a module when bundling.\r\n * \r\n * > ---\r\n * > ```\r\n * > import oh$ from \"ledgers.js\";\r\n * > oh$.enable(token);\r\n * > oh$.addEventListener('onWalletChange', (e) => {...});\r\n * > ```\r\n * > ---\r\n * \r\n * > APIs abstracted by *ledgers.js* require a bearer-token.  The `token` (above) is passed in to `enable` the rest of the library's\r\n * > functionality.  `oh$.enable(..)` can be called every so often with a refreshed token.\r\n * >\r\n * >  A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n * >\r\n * > To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n * \r\n * The library can be loaded straight into your HTML (along with pre-requisite `web3.min.js`) and accessed by its `oh$` property from the browser's `window` object:\r\n * \r\n * > ---\r\n * > ```\r\n * > <script \r\n * >    src=\"https://cdnjs.cloudflare.com/ajax/libs/web3/1.3.4/web3.min.js\" \r\n * >    integrity=\"sha512-TTGImODeszogiro9DUvleC9NJVnxO6M0+69nbM3YE9SYcVe4wZp2XYpELtcikuFZO9vjXNPyeoHAhS5DHzX1ZQ==\" \r\n * >    crossorigin=\"anonymous\"></script>\r\n * > <script src=\"./dist/ledgers.js\"></script>\r\n * > <script>\r\n * >   oh$.enable(token);\r\n * >   oh$.addEventListener('onWalletChange', (e) => {...});\r\n * > </script>\r\n * > ```\r\n * > ---\r\n * \r\n * ### IMPARTERS\r\n * \r\n * The library works with a concept of *imprater* tags.  Wallets impart credentials, signatures, and transactions.  For\r\n * *loose change*--where no wallet exists--the library can be interrogated as to which entities should be set by the \r\n * user (can* functions); causing the entities to be imparted back to the user in a common code flow.  \r\n * \r\n * The imparter tags are a simple naming convention.  For example if multiple Ethereum wallet APIs were imparting data \r\n * they  would be individually tagged with a prefix \"eth\" and a dashed suffix.  No suffix indicates a *loose change*\r\n * imparter:\r\n * \r\n * - eth-web3\r\n * - eth-?\r\n * \r\n * Similarly for *overhide-ledger*, the prefix is \"ohledger\", the suffix won't be attached on the *loose change* version \r\n * and will be suffixed on the *web3* walleted version:\r\n * \r\n * - ohledger\r\n * - ohledger-web3\r\n * \r\n * Thus far Bitcoin is only supported in manual mode (no Bitcoin wallet injection into target site):\r\n * \r\n * - btc-manual\r\n * \r\n * The following sections cover special notes on each imparter.  The library adheres to these notes.\r\n * \r\n * #### eth-web3\r\n * \r\n * > Ethereum addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * > \r\n * > Ethereum secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * > \r\n * > Ethereum networks names/modes are:\r\n * >\r\n * >> | name | mode | notes |\r\n * >> | --- | --- | --- |\r\n * >> | main | prod | |\r\n * >> | rinkeyby | test | |\r\n * >> | kovan | test | not supported |\r\n * >> | ropsten | test | not supported |\r\n * >> | goerli | test | not supported |\r\n * >\r\n * > The denomination for amounts is the Wei\r\n * \r\n * #### ohledger, ohledger-web3\r\n * \r\n * > Addresses and secret keys use Ethereum format.\r\n * >\r\n * > Addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * > \r\n * > Secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * >\r\n * > Network tuples consist of a 'currency' as a three letter ISO fiat currency code and a 'mode'.  The supported\r\n * > 'currency' names are:\r\n * > \r\n * > * 'USD'\r\n * > \r\n * > The denominations are:\r\n * > \r\n * >> | Currency | denomination |\r\n * >> | --- | --- |\r\n * >> | USD | cents |\r\n * > \r\n * > Note: at this point only USD are supported.  If there is a need, and *overhide-ledger* instances in currencies\r\n * > other than USD come online, we'll revisit this.\r\n * >\r\n * > An 'ohledger' mode is one of 'prod' or 'test'\r\n * \r\n * #### btc-manual\r\n * \r\n * > Addresses use Bitcoin format.\r\n * > \r\n * > Bitcoin network modes are:\r\n * > \r\n * > * prod -- for mainnet\r\n * > * test -- for testnet\r\n * > \r\n * > The denomination for amounts is the Satoshi.\r\n * \r\n */\r\nconst oh$ = (function() {\r\n\r\n  var root = typeof self == 'object' && self.self === self && self ||\r\n    typeof global == 'object' && global.global === global && global ||\r\n    this ||\r\n    {};\r\n\r\n  root.oh$ = new class extends EventTarget {\r\n    /**\r\n     * @event onWalletChange\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..,isPresent:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *isPresent* - if wallet is present for imparter\r\n     *\r\n     * @description\r\n     *   Event called when wallets' state changes.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletChange', (e) => console.log(`wallet for ${e.imparterTag} is available:${e.isPresent}`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onWalletPopup\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the pop-up\r\n     *\r\n     * @description\r\n     *   Event called when wallet is expected to popup.  Useful in case user wants to react to popup in UI.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletPopup', (e) => console.log(`wallet for ${e.imparterTag} popped`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onCredentialsUpdate\r\n     * @description\r\n     *   Event called when an credentials change for one of the tracked imparters.\r\n     * \r\n     *   Only called when credentials are valid as per imparter: ready to be used for signing, transacting.\r\n     *\r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onCredentialsUpdate', (e) => {\r\n     *     console.log(`new address for ${e.imparterTag} is:${e.address}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     * \r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,address:..}` |\r\n     *  > | ohledger | `{imparterTag:..,address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,address:..}` |\r\n     *  > | btc-manual | `{imparterTag:..,address:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *address* - ledger public address of credential set for imparter\r\n     *  >\r\n     *  > *secret* - ledger PKI private secret for credential set for imparter\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @event onNetworkChange\r\n     * @description\r\n     *   Event called when the network changes for a particular imparter tag.\r\n     * \r\n     *   For example for \"eth\" the network could changed from \"main\" to \"rinkeby\".  \r\n     * \r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onNetworkChange', (e) => {\r\n     *     if (e.imparterTag === 'eth-web3') console.log(`new network selected for ${e.imparterTag} is:${e.name}`);\r\n     *     if (e.imparterTag === /ohledger/.test(e.imparterTag)) console.log(`working in currency: ${e.currency}`);\r\n     *     if (e.imparterTag === 'btc-manual') console.log(`new network mode selected for ${e.imparterTag} is:${e.name}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new credentials object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,name:('main'|'rinkeby'|'kovan')..,mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | btc-manual | `{imparterTag:..,mode:('prod'|'test'), uri:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *name* - of network\r\n     *  >\r\n     *  > *currency* - represented by network\r\n     *  >\r\n     *  > *mode* - production or test network\r\n     *  >\r\n     *  > *uri* - remuneration API URI for network\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function enable\r\n     * @description\r\n     *   Enable `oh$` by instrumenting with token for ledger access.\r\n     * \r\n     *   `oh$` calls may stall while waiting for this call to complete successfully.\r\n     * \r\n     *   A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n     * \r\n     *   To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n     * @param {string} token\r\n     */\r\n    enable = enable;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getImparterTags\r\n     * @description\r\n     *   Retrieves all imparter tags injected by wallets and statically available from the library.\r\n     * @returns {Array} of strings: the imparter tags available\r\n     */\r\n    getImparterTags = getImparterTags;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canSetCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials set by the user: or does the wallet control it\r\n     *   exclusively.\r\n     * \r\n     *   Only the following imparter(s) will return 'true':\r\n     * \r\n     *   - ohledger\r\n     *   - btc-manual\r\n     * \r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials set.\r\n     */\r\n    canSetCredentials = canSetCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canGenerateCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials generated by the user: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials generated.\r\n     */\r\n    canGenerateCredentials = canGenerateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canChangeNetwork\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have network changed by the user via oh$: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *   - ohledger-web3\r\n     *   - btc-manual\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have networks changed via oh$.\r\n     */\r\n    canChangeNetwork = canChangeNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function generateCredentials\r\n     * @description\r\n     *   For imparters that can have credentials generated, generates them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     * @param {string} imparterTag\r\n     * @param {Object} options - imparter specific generation options, if any.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | not supported |\r\n     *  > | ohledger | null | |\r\n     *  > | ohledger-web3 | N/A | not supported |\r\n     *  > | btc-manual | N/A | not supported |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n\r\n     */\r\n    generateCredentials = generateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setCredentials\r\n     * @description\r\n     *   For imparters that can have credentials set, sets them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} credentials - credentials object of imparter specific parameters to set\r\n     * \r\n     *  > The credentials objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | not suppoted |\r\n     *  > | ohledger | `{address:..,secret:..}` | `address` is optional, if not set will be extracted from `secret` |\r\n     *  > | ohledger-web3 | N/A | not supported |\r\n     *  > | btc-manual | `{address:..}` | |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     */\r\n    setCredentials = setCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setNetwork\r\n     * @description\r\n     *   For imparters that can have networks changed via oh$, changes it.  \r\n     * \r\n     *   Fires [onNetworkChange](#eventonnetworkchange) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} details - network details object of imparter specific parameters to set.\r\n     * \r\n     *  > The network details objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | network details object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | not supported, change in wallet |\r\n     *  > | ohledger | `{currency:'USD', mode:'prod'|'test'}` | |\r\n     *  > | ohledger-web3 | `{currency:'USD', mode:'prod'|'test'}` | |\r\n     *  > | btc-manual | `{mode:'prod'|'test'}` | |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onNetworkChange](#eventonnetworkchange) event against `oh$`\r\n     */\r\n    setNetwork = setNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getOverhideRemunerationAPIUri\r\n     * @description\r\n     *   Based on current network set returns the *overhide* remuneration API URI configured in the library.\r\n     * @param {string} imparterTag\r\n     * @returns {string} the URI.\r\n     */\r\n    getOverhideRemunerationAPIUri = getOverhideRemunerationAPIUri;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getCredentials\r\n     * @description\r\n     *   Retrieves current credentials for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current credentials, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     */\r\n    getCredentials = getCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getNetwork\r\n     * @description\r\n     *   Retrieves current network for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current network, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | network details object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{name:('main'|'rinkeby'|'kovan').., mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | btc-manual | `{mode:('prod'|'test'), uri:..}` |\r\n     */\r\n    getNetwork = getNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getFromDollars\r\n     * @description\r\n     *   Retrieve a (highest) converted amount in imparter specific denomination from a provided dollar amount at a very recent exchange rate.\r\n     * @param {string} imparterTag\r\n     * @param {number} dollarAmount - the dollar amount.\r\n     * @returns {Promise} with the value in imparter specific currency at the present time (based on recent exchange rate).\r\n     */\r\n     getFromDollars = getFromDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTallyDollars\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range--converted to a US dollar amount.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the `{'tally':.., 'as-of':..}` object, whereby the 'tally' value is in US dollars: all transactions \r\n     *   are exchanged to USD at an approximate (highest) exchange rate close to the transactions' time.  The 'as-of' timestamp \r\n     *   is that of the call (pass this to back-end to retrieve cached values at better API call rates).\r\n     */\r\n     getTallyDollars = getTallyDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTally\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the `{'tally':.., 'as-of':..}` object, whereby the tally value is in imparter specific currency.\r\n     *   The 'as-of' timestamp is that of the call (pass this to back-end to retrieve cached values at better API call rates).\r\n     */\r\n    getTally = getTally;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTransactions\r\n     * @description\r\n     *   Retrieve transactions on the imparter's ledger, perhaps within a date range, from credentials set against \r\n     *   imparter to a recipient\r\n     * @param {string} imparterTag\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     *\r\n     * @returns {Promise} with the `{'transactions': [{\"transaction-value\":..,\"transaction-date\":..},..], 'as-of':..}` object, \r\n     *   whereby 'transactions' is the list of transactions and 'as-of' is the timestamp of the call.\r\n     */\r\n    getTransactions = getTransactions;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function isOnLedger\r\n     * @description\r\n     *   Determine if current credentials have some transaction on the imparter's ledger: transaction can be to anyone.\r\n     * \r\n     *   Intent is to validate beyond just a valid address.  To validate the address has been used.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @returns {Promise} with 'true' or 'false'; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    isOnLedger = isOnLedger;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function sign\r\n     * @description\r\n     *   Sign using the provided message using the credentials set against the specific imparter.\r\n     * \r\n     *   Note: wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {string} message - to sign\r\n     * @returns {Promise} with the signature; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    sign = sign;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function createTransaction\r\n     * @description\r\n     *   Create a transaction on the imparter's ledger.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`; wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * @param {string} imparterTag\r\n     * @param {number} amount\r\n     * @param {string} to - address of recipient\r\n     * \r\n     *  > $0 (*amount*) transactions against *ohledger* or *ohledger-web* *imparters* use the current credential \r\n     *  > as the *to* address, not the specified *to* address.\r\n     *  \r\n     * @param {Object} options - other options required for the specific imparter.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  > \r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | null |\r\n     *  > | ohledger | {message:.., signature:..} |\r\n     *  > | ohledger-web3 | {message:.., signature:..} |\r\n     *  > | btc-manual | null |\r\n     *  > \r\n     *  > If *message* and *signature* are provided they are used instead of oh$ asking for wallet to resign message.\r\n     *\r\n     * @returns {Promise} of a 'true' for success or an Error; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    createTransaction = createTransaction;\r\n  }();\r\n\r\n  var doEnable = null;\r\n  const isEnabled = new Promise((resolve) => doEnable = resolve);\r\n  var token = null;\r\n  var __fetch = null;\r\n  var imparterTags = [ohledger.tag, btc_manual.tag];\r\n\r\n  /**\r\n   * Function to fire events.\r\n   * \r\n   * @param {string} which - event name to fire\r\n   * @param {Object} params - to copy to event\r\n   */\r\n  function fire(which, params) {\r\n    let event = document.createEvent(\"Event\");\r\n    event.initEvent(which, true, true);\r\n    for (var param in params) {\r\n      event[param] = params[param];\r\n    }\r\n    oh$.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * @param {string} tag -- to add to `imparterTags` if not in `imparterTags`\r\n   */\r\n  function addTag(tag) {\r\n    let imparterTagIndex = imparterTags.findIndex(v => v === tag);\r\n    if (imparterTagIndex == -1) imparterTags.push(tag);\r\n  }\r\n\r\n  /**\r\n   * @param {string} tag -- to remove from `imparterTags` if in `imparterTags`\r\n   */\r\n   function removeTag(tag) {\r\n    let imparterTagIndex = imparterTags.findIndex(v => v === tag);\r\n    if (imparterTagIndex > -1) imparterTags.splice(imparterTagIndex, 1);\r\n  }\r\n\r\n  const domFns = new dom_fns();\r\n  const web3Wallet = new web3_wallet(\r\n      (tag) => addTag(tag), \r\n      (tag) => removeTag(tag),\r\n      (which, params) => fire(which, params));\r\n  const overhideWallet = new overhide_wallet(domFns);\r\n\r\n  const imparters = {};\r\n  imparters[eth_web3.tag] = new eth_web3(\r\n    web3Wallet, \r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params));\r\n  imparters[btc_manual.tag] = new btc_manual(\r\n    domFns,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params));\r\n  imparters[ohledger_web3.tag] = new ohledger_web3(\r\n    overhideWallet,\r\n    web3Wallet,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params)\r\n  );\r\n  imparters[ohledger.tag] = new ohledger(\r\n    overhideWallet,\r\n    web3Wallet,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params)\r\n  );\r\n\r\n  domFns.init();\r\n  web3Wallet.init();\r\n  overhideWallet.init();\r\n\r\n  function enable(_token, {fetcher} = {fetcher: fetch}) {\r\n    token = _token;\r\n    __fetch = fetcher;\r\n    doEnable(true);\r\n  }\r\n\r\n  function getImparterTags() {\r\n    return imparterTags;\r\n  }\r\n\r\n  function canSetCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canSetCredentials();\r\n  }\r\n\r\n  function canGenerateCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canGenerateCredentials();\r\n  }\r\n\r\n  function canChangeNetwork(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canChangeNetwork();\r\n  }\r\n\r\n  async function setCredentials(imparterTag, credentials) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].setCredentials(credentials);\r\n  }\r\n\r\n  function getCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getCredentials();\r\n  }\r\n\r\n  async function generateCredentials(imparterTag, options) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].generateCredentials(options);\r\n  }\r\n\r\n  async function setNetwork(imparterTag, details) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].setNetwork(details);\r\n  }\r\n\r\n  function getNetwork(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getNetwork();    \r\n  }\r\n\r\n  function getOverhideRemunerationAPIUri(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getOverhideRemunerationAPIUri();    \r\n  }\r\n\r\n  async function getFromDollars(imparterTag, dollarAmount) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].getFromDollars(dollarAmount);\r\n  }\r\n\r\n  async function getTallyDollars(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, true, true));\r\n  }\r\n\r\n  async function getTally(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, true, false));\r\n  }\r\n\r\n  async function getTransactions(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, false, false));\r\n  }\r\n\r\n  async function getTxs(imparterTag, recipient, date, tallyOnly, tallyDollars) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].getTxs(recipient, date, tallyOnly, tallyDollars);\r\n  }\r\n\r\n  async function isOnLedger(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].isOnLedger();\r\n  }\r\n\r\n  async function sign(imparterTag, message) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].sign(message);\r\n  }\r\n\r\n  async function createTransaction(imparterTag, amount, to, options) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].createTransaction(amount, to, options);\r\n  }\r\n\r\n  return root.oh$;\r\n})();\r\n\r\nexport default oh$;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}