{"version":3,"sources":["webpack://__oh$__/webpack/universalModuleDefinition","webpack://__oh$__/webpack/bootstrap","webpack://__oh$__/external {\"commonjs\":\"web3\",\"commonjs2\":\"web3\",\"amd\":\"web3\",\"root\":\"Web3\"}","webpack://__oh$__/./src/ledgers.js","webpack://__oh$__/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","oh$","self","_typeof","global","this","_EventTarget","_temp","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_getPrototypeOf","apply","concat","_defineProperty","_assertThisInitialized","enable","getImparterTags","canSetCredentials","canGenerateCredentials","canChangeNetwork","generateCredentials","setCredentials","setNetwork","getOverhideRemunerationAPIUri","getCredentials","getNetwork","getFromDollars","getTallyDollars","getTally","getTransactions","isOnLedger","sign","createTransaction","_inherits","_wrapNativeSuper","EventTarget","WALLET_CHECK_INTERVAL_MS","ETH_WEB3_IMPARTER_TAG","OHLEDGER_IMPARTER_TAG","OHLEDGER_WEB3_IMPARTER_TAG","doEnable","isEnabled","Promise","resolve","token","__fetch","imparterTags","data","walletAddress","network","remuneration_uri","main","rinkeby","oh_ledger_transact_fn","prod","test","address","secret","eth_accounts","Web3","eth","accounts","fire","which","params","event","document","createEvent","param","initEvent","dispatchEvent","_token","fetcher","undefined","fetch","imparterTag","_x","_x2","_setCredentials","_asyncToGenerator","regeneratorRuntime","mark","_callee4","credentials","wrap","_context4","prev","next","t0","Error","toLowerCase","privateKeyToAccount","recover","t1","abrupt","stop","_x3","_x4","_generateCredentials","_callee5","options","res","_context5","privateKey","_x5","_x6","_setNetwork","_callee6","details","_context6","currency","toUpperCase","uri","_x7","_x8","_getFromDollars","_callee7","dollarAmount","hostPrefix","now","result","_context7","Date","toISOString","sent","headers","Headers","Authorization","then","json","e","String","minrate","_x9","_x10","_x11","_getTallyDollars","_callee8","recipient","date","tally","txs","values","_context8","toFixed","map","join","text","Math","round","_x12","_x13","_x14","_getTally","_callee9","_context9","getTxs","_x15","_x16","_x17","_getTransactions","_callee10","_context10","transactions","_x18","_x19","_x20","_x21","_getTxs","_callee11","tallyOnly","to","from","since","_context11","_x22","_isOnLedger","_callee12","message","signature","_context12","method","Content-Type","body","JSON","stringify","btoa","status","_x23","_x24","_sign","_callee13","_context13","web3","personal","_x25","_x26","_x27","_x28","_createTransaction","_callee14","amount","eventPromise","_context14","toLocaleString","showOhLedgerGratisIframeUri","setupNewPromise","reject","sendTransaction","on","confirmationNumber","receipt","error","popup","createElement","setAttribute","style","display","innerHTML","attach","appendChild","loadJS","oh_ledger_transact","setTimeout","createPopup","ethereum","_callee2","_context2","detectWalletCb","setInterval","_callee","_context","_ref3","_callee3","currentAccounts","currentAddress","currentNetwork","_imparterTagIndex","_context3","getAccounts","net","getNetworkType","findIndex","v","push","imparterTagIndex","splice","isPresent","detectWeb3Wallet","console","assert","rs","rj","makePopupHidden","isError","getElementById","hideAllPopupContents","_x29","_x30","_x31","_x32","_showOhLedgerGratisIframeUri","_callee15","frame","_context15","url","implementationCode","location","scriptTag","src","onload","onreadystatechange","addEventListener","detail","g","Function"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,SACA,mBAAAC,eAAAC,IACAD,OAAA,mBAAAJ,GACA,iBAAAC,QACAA,QAAA,QAAAD,EAAAG,QAAA,SAEAJ,EAAA,QAAAC,EAAAD,EAAA,MARA,CASCO,OAAA,SAAAC,GACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAX,QAAA,IAUA,OANAY,EAAAH,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,GAAA,EAGAV,EAAAD,QA0DA,OArDAQ,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAxB,GACA,oBAAAyB,eAAAC,aACAN,OAAAC,eAAArB,EAAAyB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAArB,EAAA,cAAiD2B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAlC,GACA,IAAAiB,EAAAjB,KAAA6B,WACA,WAA2B,OAAA7B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,mBClFAxC,EAAAD,QAAAM,w9DCsHA,IAAMoC,EAAO,WAAW,IAElB5C,EAAsB,WAAf,oBAAO6C,KAAP,YAAAC,EAAOD,QAAoBA,KAAKA,OAASA,MAAQA,MACzC,gBAAjB,IAAOE,EAAP,YAAAD,EAAOC,KAAsBA,EAAOA,SAAWA,GAAUA,GACzDC,MACA,GAEFhD,EAAK4C,IAAM,aAAAK,GAAA,SAAAC,IAAA,IAAAC,EAAAC,mGAAAC,CAAAL,KAAAE,GAAA,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAAX,KAAAI,OAAAD,EAAAS,EAAAV,IAAAnC,KAAA8C,MAAAV,EAAA,CAAAH,MAAAc,OAAAL,mDAAAM,EAAAC,EAAAZ,GAAA,SAmIAa,GAnIAF,EAAAC,EAAAZ,GAAA,kBA4ISc,GA5ITH,EAAAC,EAAAZ,GAAA,oBA4JWe,GA5JXJ,EAAAC,EAAAZ,GAAA,yBA4KgBgB,GA5KhBL,EAAAC,EAAAZ,GAAA,mBA6LUiB,GA7LVN,EAAAC,EAAAZ,GAAA,sBAoNakB,GApNbP,EAAAC,EAAAZ,GAAA,iBA0OQmB,GA1ORR,EAAAC,EAAAZ,GAAA,aAgQIoB,GAhQJT,EAAAC,EAAAZ,GAAA,gCA0QuBqB,GA1QvBV,EAAAC,EAAAZ,GAAA,iBA0RQsB,GA1RRX,EAAAC,EAAAZ,GAAA,aA0SIuB,GA1SJZ,EAAAC,EAAAZ,GAAA,iBAqTSwB,GArTTb,EAAAC,EAAAZ,GAAA,kBA2UUyB,GA3UVd,EAAAC,EAAAZ,GAAA,WAgWE0B,GAhWFf,EAAAC,EAAAZ,GAAA,kBAsXS2B,GAtXThB,EAAAC,EAAAZ,GAAA,aAoYI4B,GApYJjB,EAAAC,EAAAZ,GAAA,OAmZF6B,GAnZElB,EAAAC,EAAAZ,GAAA,oBAibW8B,GAjbX9B,EAAA,yOAAA+B,CAAAjC,EAAAkC,EAAkBC,cAAlBnC,EAAA,IAobX,IAAMoC,EAA2B,IAE3BC,EAAwB,WACxBC,EAAwB,WACxBC,EAA6B,gBAE/BC,EAAW,KACTC,EAAY,IAAIC,QAAQ,SAACC,GAAD,OAAaH,EAAWG,IAClDC,EAAQ,KACRC,EAAU,KACVC,EAAe,CAACR,GAEhBS,EAAO,CACTV,sBAAuB,CACrBW,cAAe,KACfC,QAAS,KACTC,iBAAkB,CAChBC,KAAO,+BACPC,QAAU,yCAGdd,sBAAuB,CACrBe,sBAAuB,CACrBC,KAAQ,KACRC,KAAQ,MAEVC,QAAS,KACTC,OAAQ,KACR5E,KAAM,OACNqE,iBAAkB,CAChBI,KAAQ,gCACRC,KAAQ,uCAGZhB,2BAA4B,CAC1Bc,sBAAuB,CACrBC,KAAQ,KACRC,KAAQ,MAEVP,cAAe,KACfnE,KAAM,OACNqE,iBAAkB,CAChBI,KAAQ,gCACRC,KAAQ,wCAKVG,EAAgB,IAAIC,IAAK,yBAA0BC,IAAIC,SAW3D,SAASC,EAAKC,EAAOC,GACnB,IAAIC,EAAQC,SAASC,YAAY,SAEjC,IAAK,IAAIC,KADTH,EAAMI,UAAUN,GAAO,GAAM,GACXC,EAChBC,EAAMG,GAASJ,EAAOI,GAExB1E,EAAI4E,cAAcL,GA6DpB,SAASlD,EAAOwD,GAAsC,IAA7BC,GAA6BnE,UAAAC,OAAA,QAAAmE,IAAApE,UAAA,GAAAA,UAAA,GAAlB,CAACmE,QAASE,QAArBF,QACvB5B,EAAQ2B,EACR1B,EAAU2B,EACVhC,GAAS,GAGX,SAASxB,IACP,OAAO8B,EAGT,SAAS7B,EAAkB0D,GACzB,OAAOA,IAAgBrC,EAGzB,SAASpB,EAAuByD,GAC9B,OAAOA,IAAgBrC,EAGzB,SAASnB,EAAiBwD,GACxB,OAAQA,GACN,KAAKrC,EACL,KAAKC,EACH,OAAO,EACT,QACE,OAAO,GAjlBS,SAqlBPlB,EArlBOuD,EAAAC,GAAA,OAAAC,EAAAnE,MAAAb,KAAAO,WAAA,SAAAyE,IAAA,OAAAA,EAAAC,EAAAC,mBAAAC,KAqlBtB,SAAAC,EAA8BP,EAAaQ,GAA3C,OAAAH,mBAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACUb,EADVU,EAAAE,KAAAF,EAAAG,KAESlD,EAFT,qBAGY,WAAY6C,EAHxB,CAAAE,EAAAE,KAAA,cAG4C,IAAIE,MAAM,8BAHtD,UAIU,YAAaN,GAAeA,EAAY3B,QAC1CT,EAAKT,sBAAsBkB,QAAU2B,EAAY3B,QAAQkC,cAEzD3C,EAAKT,sBAAsBkB,QAAUE,EAAaiC,oBAAoBR,EAAY1B,QAAQD,QAAQkC,cAEpG3C,EAAKT,sBAAsBmB,OAAS0B,EAAY1B,OATtD4B,EAAAC,KAAA,EAWc5B,EAAakC,QAAQlC,EAAa3B,KAAK,eAAgBgB,EAAKT,sBAAsBmB,SAASiC,eAAiB3C,EAAKT,sBAAsBkB,QAXrJ,CAAA6B,EAAAE,KAAA,eAYgB,IAAIE,MAAM,mCAZ1B,QAAAJ,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAec,IAAII,MAAM,mCAfxB,eAiBM3B,EAAK,sBAAuB,CAAEa,YAAarC,EAAuBkB,QAAST,EAAKT,sBAAsBkB,QAASC,OAAQV,EAAKT,sBAAsBmB,SAjBxJ4B,EAAAS,OAAA,UAkBa,GAlBb,eAAAT,EAAAS,OAAA,UAoBa,GApBb,yBAAAT,EAAAU,SAAAb,EAAA,mBArlBsBvE,MAAAb,KAAAO,WA6mBtB,SAASmB,EAAemD,GACtB,OAAQA,GACN,KAAKrC,EACH,MAAO,CAACkB,QAAUT,EAAKT,sBAAsBkB,QAASC,OAASV,EAAKT,sBAAsBmB,QAC5F,KAAKlB,EACH,MAAO,CAACiB,QAAUT,EAAKR,2BAA2BS,eACpD,KAAKX,EACH,MAAO,CAACmB,QAAUT,EAAKV,sBAAsBW,eAC/C,QACE,MAAM,IAAIyC,MAAM,wBAtnBA,SA0nBPrE,EA1nBO4E,EAAAC,GAAA,OAAAC,EAAAvF,MAAAb,KAAAO,WAAA,SAAA6F,IAAA,OAAAA,EAAAnB,EAAAC,mBAAAC,KA0nBtB,SAAAkB,EAAmCxB,EAAayB,GAAhD,IAAAC,EAAA,OAAArB,mBAAAI,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAAAe,EAAAd,GACUb,EADV2B,EAAAf,KAAAe,EAAAd,KAESlD,EAFT,wBAGU+D,EAAM3C,EAAa1E,SACvB+D,EAAKT,sBAAsBkB,QAAU6C,EAAI7C,QAAQkC,cACjD3C,EAAKT,sBAAsBmB,OAAS4C,EAAIE,WACxCzC,EAAK,sBAAuB,CAAEa,YAAarC,EAAuBkB,QAAST,EAAKT,sBAAsBkB,QAASC,OAAQV,EAAKT,sBAAsBmB,SANxJ6C,EAAAR,OAAA,UAOa,GAPb,cAAAQ,EAAAR,OAAA,UASa,GATb,wBAAAQ,EAAAP,SAAAI,OA1nBsBxF,MAAAb,KAAAO,WAAA,SAuoBPiB,EAvoBOkF,EAAAC,GAAA,OAAAC,EAAA/F,MAAAb,KAAAO,WAAA,SAAAqG,IAAA,OAAAA,EAAA3B,EAAAC,mBAAAC,KAuoBtB,SAAA0B,EAA0BhC,EAAaiC,GAAvC,OAAA5B,mBAAAI,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UACMlD,GAAyBsC,EAD/B,CAAAkC,EAAAtB,KAAA,eAAAsB,EAAAf,OAAA,UACmD,GADnD,UAEQ,aAAcc,EAFtB,CAAAC,EAAAtB,KAAA,cAEsC,IAAIE,MAAM,gCAFhD,UAGQ,SAAUmB,EAHlB,CAAAC,EAAAtB,KAAA,cAGkC,IAAIE,MAAM,4BAH5C,UAIEmB,EAAQE,SAAWF,EAAQE,SAASC,cACpCH,EAAQ/H,KAAO+H,EAAQ/H,KAAK6G,cACH,QAArBkB,EAAQE,SANd,CAAAD,EAAAtB,KAAA,eAMwC,IAAIE,MAAM,4BANlD,WAOuB,SAAjBmB,EAAQ/H,MAAoC,SAAjB+H,EAAQ/H,KAPzC,CAAAgI,EAAAtB,KAAA,eAOgE,IAAIE,MAAM,mCAP1E,QAAAoB,EAAArB,GAQUb,EARVkC,EAAAtB,KAAAsB,EAAArB,KASSlD,EATT,GAAAuE,EAAArB,KAaSjD,EAbT,2BAUMQ,EAAKT,sBAAsBzD,KAAO+H,EAAQ/H,KAC1CiF,EAAK,kBAAmB,CAAEa,YAAarC,EAAuBwE,SAAU,MAAOjI,KAAM+H,EAAQ/H,KAAMmI,IAAKjE,EAAKT,sBAAsBY,iBAAiB0D,EAAQ/H,QAXlKgI,EAAAf,OAAA,UAYa,GAZb,eAcM/C,EAAKR,2BAA2B1D,KAAO+H,EAAQ/H,KAC/CiF,EAAK,kBAAmB,CAAEa,YAAapC,EAA4BuE,SAAU,MAAOjI,KAAM+H,EAAQ/H,KAAMmI,IAAKjE,EAAKR,2BAA2BW,iBAAiB0D,EAAQ/H,QAf5KgI,EAAAf,OAAA,UAgBa,GAhBb,eAAAe,EAAAf,OAAA,UAkBa,GAlBb,yBAAAe,EAAAd,SAAAY,OAvoBsBhG,MAAAb,KAAAO,WA6pBtB,SAASoB,EAAWkD,GAClB,OAAQA,GACN,KAAKrC,EACH,MAAO,CAAEwE,SAAY,MAAOjI,KAAQkE,EAAKR,2BAA2B1D,KAAMmI,IAAOjE,EAAKR,2BAA2BW,iBAAiBH,EAAKR,2BAA2B1D,OACpK,KAAK0D,EACH,MAAO,CAAEuE,SAAY,MAAOjI,KAAQkE,EAAKT,sBAAsBzD,KAAMmI,IAAOjE,EAAKT,sBAAsBY,iBAAiBH,EAAKT,sBAAsBzD,OACrJ,KAAKwD,EACH,MAAO,CAAEpE,KAAQ8E,EAAKV,sBAAsBY,QAAS+D,IAAOjE,EAAKV,sBAAsBa,iBAAiBH,EAAKV,sBAAsBY,UACrI,QACE,MAAM,IAAIwC,MAAM,wBAItB,SAASlE,EAA8BoD,GACrC,OAAQA,GACN,KAAKrC,EACH,IAAKS,EAAKT,sBAAsBzD,KAAM,MAAM,IAAI4G,MAAM,8CACtD,OAAO1C,EAAKT,sBAAsBY,iBAAiBH,EAAKT,sBAAsBzD,MAChF,KAAK0D,EACH,IAAKQ,EAAKR,2BAA2B1D,KAAM,MAAM,IAAI4G,MAAM,8CAC3D,OAAO1C,EAAKR,2BAA2BW,iBAAiBH,EAAKR,2BAA2B1D,MAC1F,KAAKwD,EACH,OAAOU,EAAKV,sBAAsBa,iBAAiBH,EAAKV,sBAAsBY,SAChF,QACE,OAAO,MArrBS,SAyrBPvB,EAzrBOuF,EAAAC,GAAA,OAAAC,EAAAxG,MAAAb,KAAAO,WAAA,SAAA8G,IAAA,OAAAA,EAAApC,EAAAC,mBAAAC,KAyrBtB,SAAAmC,EAA8BzC,EAAa0C,GAA3C,IAAAC,EAAAC,EAAAC,EAAA,OAAAxC,mBAAAI,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAAAkC,EAAAjC,GACUb,EADV8C,EAAAlC,KAAAkC,EAAAjC,KAESlD,EAFT,EAAAmF,EAAAjC,KAGSjD,EAHT,EAAAkF,EAAAjC,KAKSnD,EALT,yBAAAoF,EAAA3B,OAAA,SAI4B,IAAfuB,GAJb,cAMYC,EAAoD,SAAvCvE,EAAKV,sBAAsBY,QAAqB,GAAK,QAClEsE,GAAO,IAAIG,MAAQC,cAP/BF,EAAAlC,KAAA,EAQgB9C,EARhB,UAAAgF,EAAA5B,GAAA4B,EAAAG,MAAAH,EAAA5B,GAAA,CAAA4B,EAAAlC,KAAA,SAAAkC,EAAA5B,IAQ8BhD,EAR9B,YAAA4E,EAAA5B,GAAA,CAAA4B,EAAAlC,KAAA,eAQ6C,IAAIE,MAAM,uCARvD,eAAAgC,EAAAlC,KAAA,GAS2B1C,EAAO,WAAAjC,OAAY0G,EAAZ,gCAAA1G,OAAqD2G,GAAO,CACpFM,QAAS,IAAIC,QAAQ,CACnBC,cAAA,UAAAnH,OAA2BgC,OAG9BoF,KAAK,SAAA3B,GAAG,OAAIA,EAAI4B,SALE,MAMZ,SAAAC,GACL,MAAMC,OAAOD,KAhBvB,YASYV,EATZC,EAAAG,UAkBqB,KAAeJ,IAA6B,IAAnBA,EAAOY,QAlBrD,CAAAX,EAAAlC,KAAA,gBAAAkC,EAAA3B,OAAA,SAkB2E,GAlB3E,eAAA2B,EAAA3B,OAAA,SAmBauB,EAAeG,EAAOY,SAnBnC,eAAAX,EAAA3B,OAAA,SAqBa,MArBb,yBAAA2B,EAAA1B,SAAAqB,OAzrBsBzG,MAAAb,KAAAO,WAAA,SAktBPsB,EAltBO0G,EAAAC,EAAAC,GAAA,OAAAC,EAAA7H,MAAAb,KAAAO,WAAA,SAAAmI,IAAA,OAAAA,EAAAzD,EAAAC,mBAAAC,KAktBtB,SAAAwD,EAA+B9D,EAAa+D,EAAWC,GAAvD,IAAAC,EAAAC,EAAAC,EAAAxB,EAAA,OAAAtC,mBAAAI,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,OAAAwD,EAAAvD,GACUb,EADVoE,EAAAxD,KAAAwD,EAAAvD,KAESlD,EAFT,EAAAyG,EAAAvD,KAGSjD,EAHT,EAAAwG,EAAAvD,KAMSnD,EANT,yBAAA0G,EAAAxD,KAAA,EAIwB3D,EAAS+C,EAAa+D,EAAWC,GAJzD,cAIUC,EAJVG,EAAAnB,KAAAmB,EAAAjD,OAAA,UAKc8C,EAAQ,KAAKI,QAAQ,IALnC,cAAAD,EAAAxD,KAAA,EAOwB1D,EAAgB8C,EAAa+D,EAAWC,GAPhE,WAOYE,EAPZE,EAAAnB,OAQgC,GAAdiB,EAAIvI,OARtB,CAAAyI,EAAAxD,KAAA,gBAAAwD,EAAAjD,OAAA,SAQ0C,GAR1C,eASYgD,EAASD,EAAII,IAAI,SAAArK,GAAC,SAAAgC,OAAOhC,EAAE,qBAAT,KAAAgC,OAAkC,IAAI8G,KAAK9I,EAAE,qBAAsB+I,iBACrFL,EAAoD,SAAvCvE,EAAKV,sBAAsBY,QAAqB,GAAK,SAC3D,IAAIyE,MAAQC,cAX/BoB,EAAAxD,KAAA,GAYgB9C,EAZhB,WAAAsG,EAAAlD,GAAAkD,EAAAnB,MAAAmB,EAAAlD,GAAA,CAAAkD,EAAAxD,KAAA,SAAAwD,EAAAlD,IAY8BhD,EAZ9B,YAAAkG,EAAAlD,GAAA,CAAAkD,EAAAxD,KAAA,eAY6C,IAAIE,MAAM,uCAZvD,eAAAsD,EAAAxD,KAAA,GAawB1C,EAAO,WAAAjC,OAAY0G,EAAZ,mCAAA1G,OAAwDkI,EAAOI,KAAK,MAAQ,CACjGrB,QAAS,IAAIC,QAAQ,CACnBC,cAAA,UAAAnH,OAA2BgC,OAG9BoF,KAAK,SAAA3B,GAAG,OAAIA,EAAI8C,SALD,MAMT,SAAAjB,GACL,MAAMC,OAAOD,KApBvB,eAaUU,EAbVG,EAAAnB,KAAAmB,EAAAjD,OAAA,UAsBcsD,KAAKC,MAAc,IAART,GAAe,KAAKI,QAAQ,IAtBrD,eAAAD,EAAAjD,OAAA,SAwBa,MAxBb,yBAAAiD,EAAAhD,SAAA0C,OAltBsB9H,MAAAb,KAAAO,WAAA,SA8uBPuB,EA9uBO0H,EAAAC,EAAAC,GAAA,OAAAC,EAAA9I,MAAAb,KAAAO,WAAA,SAAAoJ,IAAA,OAAAA,EAAA1E,EAAAC,mBAAAC,KA8uBtB,SAAAyE,EAAwB/E,EAAa+D,EAAWC,GAAhD,OAAA3D,mBAAAI,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACgBqE,EAAOjF,EAAa+D,EAAWC,GAAM,GADrD,cAAAgB,EAAA7D,OAAA,SAAA6D,EAAA/B,KAC4DgB,OAD5D,wBAAAe,EAAA5D,SAAA2D,OA9uBsB/I,MAAAb,KAAAO,WAAA,SAkvBPwB,EAlvBOgI,EAAAC,EAAAC,GAAA,OAAAC,EAAArJ,MAAAb,KAAAO,WAAA,SAAA2J,IAAA,OAAAA,EAAAjF,EAAAC,mBAAAC,KAkvBtB,SAAAgF,EAA+BtF,EAAa+D,EAAWC,GAAvD,OAAA3D,mBAAAI,KAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EACgBqE,EAAOjF,EAAa+D,EAAWC,GAAM,GADrD,cAAAuB,EAAApE,OAAA,SAAAoE,EAAAtC,KAC6DuC,cAD7D,wBAAAD,EAAAnE,SAAAkE,OAlvBsBtJ,MAAAb,KAAAO,WAAA,SAsvBPuJ,EAtvBOQ,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA7J,MAAAb,KAAAO,WAAA,SAAAmK,IAAA,OAAAA,EAAAzF,EAAAC,mBAAAC,KAsvBtB,SAAAwF,EAAsB9F,EAAa+D,EAAWC,EAAM+B,GAApD,IAAAC,EAAA3D,EAAA4D,EAAAC,EAAA,OAAA7F,mBAAAI,KAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,WACMoD,GAAUA,aAAgBjB,KADhC,CAAAoD,EAAAvF,KAAA,cAC6C,IAAIE,MAAM,sCADvD,UAEQ,YAAaiD,GAAeA,EAAUlF,QAF9C,CAAAsH,EAAAvF,KAAA,cAE6D,IAAIE,MAAM,mCAFvE,OAGMkF,EAAKjC,EAAUlF,QACfwD,EAAMzF,EAA8BoD,GAJ1CmG,EAAAtF,GAKUb,EALVmG,EAAAvF,KAAAuF,EAAAtF,KAMSlD,EANT,EAAAwI,EAAAtF,KAWSjD,EAXT,GAAAuI,EAAAtF,KAgBSnD,EAhBT,sBAOWU,EAAKT,sBAAsBzD,KAPtC,CAAAiM,EAAAvF,KAAA,eAOkD,IAAIE,MAAM,8CAP5D,WAQW1C,EAAKT,sBAAsBkB,QARtC,CAAAsH,EAAAvF,KAAA,eAQqD,IAAIE,MAAM,8CAR/D,eASUmF,EAAO7H,EAAKT,sBAAsBkB,QAT5CsH,EAAAhF,OAAA,uBAYW/C,EAAKR,2BAA2B1D,KAZ3C,CAAAiM,EAAAvF,KAAA,eAYuD,IAAIE,MAAM,8CAZjE,WAaW1C,EAAKR,2BAA2BS,cAb3C,CAAA8H,EAAAvF,KAAA,eAagE,IAAIE,MAAM,4CAb1E,eAcUmF,EAAO7H,EAAKR,2BAA2BS,cAdjD8H,EAAAhF,OAAA,uBAiBW/C,EAAKV,sBAAsBY,QAjBtC,CAAA6H,EAAAvF,KAAA,eAiBqD,IAAIE,MAAM,+BAjB/D,WAkBW1C,EAAKV,sBAAsBW,cAlBtC,CAAA8H,EAAAvF,KAAA,eAkB2D,IAAIE,MAAM,4CAlBrE,eAmBUmF,EAAO7H,EAAKV,sBAAsBW,cAnB5C8H,EAAAhF,OAAA,0BAsBY,IAAIL,MAAM,4BAtBtB,WAwBOuB,EAxBP,CAAA8D,EAAAvF,KAAA,eAwBkB,IAAIE,MAAM,+DAxB5B,eAyBMoF,EAAQ,GACRlC,IACFkC,EAAK,UAAAjK,OAAa+H,EAAKhB,gBA3B3BmD,EAAAvF,KAAA,GA6BY9C,EA7BZ,WAAAqI,EAAAjF,GAAAiF,EAAAlD,MAAAkD,EAAAjF,GAAA,CAAAiF,EAAAvF,KAAA,SAAAuF,EAAAjF,IA6B0BhD,EA7B1B,YAAAiI,EAAAjF,GAAA,CAAAiF,EAAAvF,KAAA,eA6ByC,IAAIE,MAAM,uCA7BnD,eAAAqF,EAAAvF,KAAA,GA8Be1C,EAAO,GAAAjC,OAAIoG,EAAJ,sBAAApG,OAA4BgK,EAA5B,KAAAhK,OAAoC+J,EAApC,gBAAA/J,OAAqD8J,EAAY,OAAS,SAA1E9J,OAAoFiK,GAAS,CAC7GhD,QAAS,IAAIC,QAAQ,CACnBC,cAAA,UAAAnH,OAA2BgC,OAG9BoF,KAAK,SAAA3B,GAAG,OAAIA,EAAI4B,SALN,MAMJ,SAAAC,GACL,MAAMC,OAAOD,KArCnB,eAAA4C,EAAAhF,OAAA,SAAAgF,EAAAlD,MAAA,yBAAAkD,EAAA/E,SAAA0E,OAtvBsB9J,MAAAb,KAAAO,WAAA,SAuzBPyB,EAvzBOiJ,GAAA,OAAAC,EAAArK,MAAAb,KAAAO,WAAA,SAAA2K,IAAA,OAAAA,EAAAjG,EAAAC,mBAAAC,KAuzBtB,SAAAgG,EAA0BtG,GAA1B,IAAAqC,EAAA4D,EAAAM,EAAAC,EAAA,OAAAnG,mBAAAI,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,OACMyB,EAAMzF,EAA8BoD,GAD1CyG,EAAA5F,GAEUb,EAFVyG,EAAA7F,KAAA6F,EAAA5F,KAGSlD,EAHT,EAAA8I,EAAA5F,KAQSjD,EART,GAAA6I,EAAA5F,KAaSnD,EAbT,sBAIWU,EAAKT,sBAAsBzD,KAJtC,CAAAuM,EAAA7F,KAAA,cAIkD,IAAIE,MAAM,8CAJ5D,UAKW1C,EAAKT,sBAAsBkB,QALtC,CAAA4H,EAAA7F,KAAA,cAKqD,IAAIE,MAAM,8CAL/D,cAMUmF,EAAO7H,EAAKT,sBAAsBkB,QAN5C4H,EAAAtF,OAAA,uBASW/C,EAAKR,2BAA2B1D,KAT3C,CAAAuM,EAAA7F,KAAA,eASuD,IAAIE,MAAM,8CATjE,WAUW1C,EAAKR,2BAA2BS,cAV3C,CAAAoI,EAAA7F,KAAA,eAUgE,IAAIE,MAAM,4CAV1E,eAWUmF,EAAO7H,EAAKR,2BAA2BS,cAXjDoI,EAAAtF,OAAA,uBAcW/C,EAAKV,sBAAsBY,QAdtC,CAAAmI,EAAA7F,KAAA,eAcqD,IAAIE,MAAM,+BAd/D,WAeW1C,EAAKV,sBAAsBW,cAftC,CAAAoI,EAAA7F,KAAA,eAe2D,IAAIE,MAAM,4CAfrE,eAgBUmF,EAAO7H,EAAKV,sBAAsBW,cAhB5CoI,EAAAtF,OAAA,0BAmBY,IAAIL,MAAM,4BAnBtB,WAqBOuB,EArBP,CAAAoE,EAAA7F,KAAA,eAqBkB,IAAIE,MAAM,+DArB5B,eAsBMyF,EAAU,yCAtBhBE,EAAA7F,KAAA,GAuBwBxD,EAAK4C,EAAauG,GAvB1C,eAuBMC,EAvBNC,EAAAxD,KAAAwD,EAAA7F,KAAA,GAwBY9C,EAxBZ,WAAA2I,EAAAvF,GAAAuF,EAAAxD,MAAAwD,EAAAvF,GAAA,CAAAuF,EAAA7F,KAAA,SAAA6F,EAAAvF,IAwB0BhD,EAxB1B,YAAAuI,EAAAvF,GAAA,CAAAuF,EAAA7F,KAAA,eAwByC,IAAIE,MAAM,uCAxBnD,eAAA2F,EAAA7F,KAAA,GAyBe1C,EAAO,GAAAjC,OAAIoG,EAAJ,uBAA8B,CAChDqE,OAAQ,OACRxD,QAAS,CACPyD,eAAgB,kCAChBvD,cAAA,UAAAnH,OAA2BgC,IAE7B2I,KAAMC,KAAKC,UAAU,CACnBN,UAAWO,KAAKP,GAChBD,QAASQ,KAAKR,GACd1H,QAASoH,MAGV5C,KAAK,SAACR,GACL,OAAqB,KAAjBA,EAAOmE,SAbF,MAmBJ,SAAAzD,GACL,MAAMC,OAAOD,KA7CnB,eAAAkD,EAAAtF,OAAA,SAAAsF,EAAAxD,MAAA,yBAAAwD,EAAArF,SAAAkF,OAvzBsBtK,MAAAb,KAAAO,WAAA,SAw2BP0B,EAx2BO6J,EAAAC,GAAA,OAAAC,EAAAnL,MAAAb,KAAAO,WAAA,SAAAyL,IAAA,OAAAA,EAAA/G,EAAAC,mBAAAC,KAw2BtB,SAAA8G,EAAoBpH,EAAauG,GAAjC,OAAAlG,mBAAAI,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,OAAAyG,EAAAxG,GACUb,EADVqH,EAAAzG,KAAAyG,EAAAxG,KAESlD,EAFT,EAAA0J,EAAAxG,KAKSjD,EALT,EAAAyJ,EAAAxG,KASSnD,EATT,sBAGWU,EAAKT,sBAAsBmB,OAHtC,CAAAuI,EAAAzG,KAAA,cAGoD,IAAIE,MAAJ,4BAAA7E,OAAsC0B,EAAtC,aAHpD,cAAA0J,EAAAlG,OAAA,SAIapC,EAAa3B,KAAKmJ,EAASnI,EAAKT,sBAAsBmB,QAAQ0H,WAJ3E,UAMWpI,EAAKR,2BAA2BS,cAN3C,CAAAgJ,EAAAzG,KAAA,cAMgE,IAAIE,MAAJ,YAAA7E,OAAsB2B,EAAtB,gBANhE,cAOMuB,EAAK,gBAAiB,CAACa,YAAapC,IAP1CyJ,EAAAzG,KAAA,GAQoBlI,OAAO4O,KAAKrI,IAAIsI,SAASnK,KAAKmJ,EAASnI,EAAKR,2BAA2BS,cAAe,IAR1G,eAAAgJ,EAAAlG,OAAA,SAAAkG,EAAApE,MAAA,WAUW7E,EAAKV,sBAAsBW,cAVtC,CAAAgJ,EAAAzG,KAAA,eAU2D,IAAIE,MAAJ,YAAA7E,OAAsByB,EAAtB,gBAV3D,eAWMyB,EAAK,gBAAiB,CAACa,YAAatC,IAX1C2J,EAAAzG,KAAA,GAYoBlI,OAAO4O,KAAKrI,IAAIsI,SAASnK,KAAKmJ,EAASnI,EAAKV,sBAAsBW,cAAe,IAZrG,eAAAgJ,EAAAlG,OAAA,SAAAkG,EAAApE,MAAA,eAAAoE,EAAAlG,OAAA,SAca,MAdb,yBAAAkG,EAAAjG,SAAAgG,OAx2BsBpL,MAAAb,KAAAO,WAAA,SA03BP2B,EA13BOmK,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA5L,MAAAb,KAAAO,WAAA,SAAAkM,IAAA,OAAAA,EAAAxH,EAAAC,mBAAAC,KA03BtB,SAAAuH,EAAiC7H,EAAa8H,EAAQ9B,EAAIvE,GAA1D,IAAAwE,EAAAM,EAAAC,EAAAuB,EAAA,OAAA1H,mBAAAI,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,OAAAoH,EAAAnH,GACUb,EADVgI,EAAApH,KAAAoH,EAAAnH,KAESlD,EAFT,EAAAqK,EAAAnH,KAOSjD,EAPT,EAAAoK,EAAAnH,KAYSnD,EAZT,sBAGWU,EAAKT,sBAAsBzD,KAHtC,CAAA8N,EAAApH,KAAA,cAGkD,IAAIE,MAAM,8CAH5D,UAIW1C,EAAKT,sBAAsBkB,QAJtC,CAAAmJ,EAAApH,KAAA,cAIqD,IAAIE,MAAM,8CAJ/D,cAKUmF,EAAO7H,EAAKT,sBAAsBkB,QAL5CmJ,EAAA7G,OAAA,sBAQW/C,EAAKR,2BAA2B1D,KAR3C,CAAA8N,EAAApH,KAAA,eAQuD,IAAIE,MAAM,8CARjE,WASW1C,EAAKR,2BAA2BS,cAT3C,CAAA2J,EAAApH,KAAA,eASgE,IAAIE,MAAM,4CAT1E,eAUUmF,EAAO7H,EAAKR,2BAA2BS,cAVjD2J,EAAA7G,OAAA,uBAaW/C,EAAKV,sBAAsBY,QAbtC,CAAA0J,EAAApH,KAAA,eAaqD,IAAIE,MAAM,+BAb/D,WAcW1C,EAAKV,sBAAsBW,cAdtC,CAAA2J,EAAApH,KAAA,eAc2D,IAAIE,MAAM,4CAdrE,eAeUmF,EAAO7H,EAAKV,sBAAsBW,cAf5C2J,EAAA7G,OAAA,0BAkBY,IAAIL,MAAM,4BAlBtB,QAAAkH,EAAA9G,GAoBUlB,EApBVgI,EAAApH,KAAAoH,EAAA9G,KAqBSvD,EArBT,GAAAqK,EAAA9G,KAsBStD,EAtBT,GAAAoK,EAAA9G,KAsCSxD,EAtCT,uBAuBoB,GAAVoK,EAvBV,CAAAE,EAAApH,KAAA,cAwBY,YAAaa,GAAWA,EAAQ8E,SAAW,cAAe9E,GAAWA,EAAQ+E,WAxBzF,CAAAwB,EAAApH,KAAA,SAyBc2F,EAAU9E,EAAQ8E,QAClBC,EAAY/E,EAAQ+E,UA1BlCwB,EAAApH,KAAA,wBA4Bc2F,EA5Bd,6CAAAtK,QA4BqE,IAAI8G,MAAOkF,kBA5BhFD,EAAApH,KAAA,GA6BgCxD,EAAK4C,EAAauG,GA7BlD,QA6BcC,EA7BdwB,EAAA/E,KAAA,eAAA+E,EAAApH,KAAA,GA+BcsH,GAA4BlI,EAAaiG,EAAMO,EAAWD,GA/BxE,QAAAyB,EAAApH,KAAA,wBAiCYmH,EAAeI,KACnB/J,EAAKT,sBAAsBe,sBAAsBN,EAAKT,sBAAsBzD,MAAM4N,EAAQ7B,EAAMD,GAlCxGgC,EAAApH,KAAA,GAmCcmH,EAnCd,eAAAC,EAAA7G,OAAA,2BAuCMhC,EAAK,gBAAiB,CAACa,YAAatC,IAvC1CsK,EAAApH,KAAA,GAwCa,IAAI7C,QAAQ,SAACC,EAASoK,GAC3Bd,KAAKrI,IAAIoJ,gBAAgB,CAAEpC,KAAMA,EAAMD,GAAIA,EAAIhM,MAAO8N,IACrDQ,GAAG,eAAgB,SAAUC,EAAoBC,GAChDxK,MAEDsK,GAAG,QAAS,SAACG,GACZL,EAAOK,OA9CjB,eAAAT,EAAA7G,OAAA,0BAmDY,IAAIL,MAAM,4BAnDtB,eAAAkH,EAAA7G,OAAA,UAqDS,GArDT,yBAAA6G,EAAA5G,SAAAyG,OA13BsB7L,MAAAb,KAAAO,YAq+BtB,WACE,IAAIgN,EAAQnJ,SAASoJ,cAAc,OACnCD,EAAME,aAAa,KAAK,sBACxBF,EAAMG,MAAMC,QAAQ,OACpBJ,EAAMK,UAAN,gQAMA,IAAIF,EAAQtJ,SAASoJ,cAAc,SACnCE,EAAME,UAAN,umCA8Ca,SAATC,IACEzJ,SAASqH,MACXrH,SAASqH,KAAKqC,YAAYP,GAC1BnJ,SAASqH,KAAKqC,YAAYJ,GA8B9BK,GAAM,GAAAjN,OAAImC,EAAKT,sBAAsBY,iBAAiBI,KAAhD,gBAAoE,WACxEP,EAAKT,sBAAsBe,sBAAsBC,KAAOwK,mBACxD/K,EAAKR,2BAA2Bc,sBAAsBC,KAAOwK,oBAC5D5J,SAASqH,MAGZsC,GAAM,GAAAjN,OAAImC,EAAKT,sBAAsBY,iBAAiBK,KAAhD,gBAAoE,WACxER,EAAKT,sBAAsBe,sBAAsBE,KAAOuK,mBACxD/K,EAAKR,2BAA2Bc,sBAAsBE,KAAOuK,oBAC5D5J,SAASqH,OApCRwC,WAAWJ,EAAQ,KAGvBA,GA1jBFK,GAyBA,WACE,IAAK3Q,OAAO4Q,SAAU,OAGtBlJ,EAAAC,mBAAAC,KAAC,SAAAiJ,IAAA,OAAAlJ,mBAAAI,KAAA,SAAA+I,GAAA,cAAAA,EAAA7I,KAAA6I,EAAA5I,MAAA,cAAA4I,EAAA7I,KAAA,EAAA6I,EAAA5I,KAAA,EAESlI,OAAO4Q,SAASlN,SAFzB,OAGG1D,OAAO4O,KAAO,IAAItI,IAAKtG,OAAO4Q,UAHjCE,EAAA5I,KAAA,eAAA4I,EAAA7I,KAAA,EAAA6I,EAAA3I,GAAA2I,EAAA,uBAAAA,EAAA5I,KAAA,GAMO6I,IANP,QAQCC,YAAWtJ,EAAAC,mBAAAC,KAAC,SAAAqJ,IAAA,OAAAtJ,mBAAAI,KAAA,SAAAmJ,GAAA,cAAAA,EAAAjJ,KAAAiJ,EAAAhJ,MAAA,cAAAgJ,EAAAhJ,KAAA,EACJ6I,IADI,wBAAAG,EAAAxI,SAAAuI,MAETlM,GAVJ,yBAAA+L,EAAApI,SAAAmI,EAAA,gBAADnJ,GAaA,IAAIqJ,GAAcI,EAAAzJ,EAAAC,mBAAAC,KAAG,SAAAwJ,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7J,mBAAAI,KAAA,SAAA0J,GAAA,cAAAA,EAAAxJ,KAAAwJ,EAAAvJ,MAAA,cAAAuJ,EAAAxJ,KAAA,EAAAwJ,EAAAvJ,KAAA,EAEWlI,OAAO4O,KAAKrI,IAAImL,cAF3B,cAEbL,EAFaI,EAAAlH,KAGb+G,EAAkBD,GAAmBA,EAAgBpO,OAAS,EAAKoO,EAAgB,GAAK,KAH3EI,EAAAvJ,KAAA,EAIWlI,OAAO4O,KAAKrI,IAAIoL,IAAIC,iBAJ/B,OAIbL,EAJaE,EAAAlH,KAAAkH,EAAAvJ,KAAA,iBAAAuJ,EAAAxJ,KAAA,GAAAwJ,EAAAtJ,GAAAsJ,EAAA,iBAMfF,IAAmB7L,EAAKV,sBAAsBY,UAChDF,EAAKV,sBAAsBY,QAAU2L,EACrC9K,EAAK,kBAAkB,CAACa,YAAatC,EAAuBpE,KAAK2Q,EAAgB5H,IAAKjE,EAAKV,sBAAsBa,iBAAiB0L,MAEhID,IAAmB5L,EAAKV,sBAAsBW,gBAC5C2L,IAEuB,GADF7L,EAAaoM,UAAU,SAAAC,GAAC,OAAIA,IAAM9M,KAC7BS,EAAasM,KAAK/M,IAErB,GADNS,EAAaoM,UAAU,SAAAC,GAAC,OAAIA,IAAM5M,KACzBO,EAAasM,KAAK7M,MAE1C8M,EAAmBvM,EAAaoM,UAAU,SAAAC,GAAC,OAAIA,IAAM9M,MACjC,GAAGS,EAAawM,OAAOD,EAAkB,IACjEA,EAAmBvM,EAAaoM,UAAU,SAAAC,GAAC,OAAIA,IAAM5M,MAC7B,GAAGO,EAAawM,OAAOD,EAAkB,IAEnEtM,EAAKV,sBAAsBW,cAAgB2L,EAC3C5L,EAAKR,2BAA2BS,cAAgB2L,EAChD7K,EAAK,iBAAkB,CAAEa,YAAatC,EAAuBkN,YAAaZ,IAC1E7K,EAAK,iBAAkB,CAAEa,YAAapC,EAA4BgN,YAAaZ,IAC3EA,IACF7K,EAAK,sBAAuB,CAAEa,YAAatC,EAAuBmB,QAASmL,IAC3E7K,EAAK,sBAAuB,CAAEa,YAAapC,EAA4BiB,QAASmL,MA5BjE,yBAAAG,EAAA/I,SAAA0I,EAAA,kBAAH,kBAAAD,EAAA7N,MAAAb,KAAAO,aAAA,IAAAmO,EAzCpBgB,GAocA,IAAI7M,EAAU,KACVoK,GAAS,KAGb,SAASD,KAEP,OADA2C,QAAQC,QAAQ/M,EAAS,+EAClB,IAAID,QAAQ,SAACiN,EAAIC,GACtBjN,EAAUgN,EACV5C,GAAS6C,IAWb,SAASC,GAAgB7L,EAAQ8L,GAC/B,IAAIzC,EAAQnJ,SAAS6L,eAAe,sBACpCC,KACA3C,EAAMG,MAAMC,QAAQ,OACpBgC,QAAQC,OAAO/M,EAAS,4DACpBmN,EAAS/C,GAAO/I,GACfrB,EAAQqB,GACbrB,EAAU,KACVoK,GAAS,KAWX,SAASiD,KACP9L,SAAS6L,eAAe,2BAA2BvC,MAAMC,QAAQ,OAz9B7C,SA49BPZ,GA59BOoD,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAA1P,MAAAb,KAAAO,WAAA,SAAAgQ,KAAA,OAAAA,GAAAtL,EAAAC,mBAAAC,KA49BtB,SAAAqL,EAA2C3L,EAAaiG,EAAMO,EAAWD,GAAzE,IAAAlE,EAAAuJ,EAAA,OAAAvL,mBAAAI,KAAA,SAAAoL,GAAA,cAAAA,EAAAlL,KAAAkL,EAAAjL,MAAA,cACEyK,KACIhJ,EAAMzF,EAA8BoD,IACpC4L,EAAQrM,SAAS6L,eAAe,4BAC9BxC,aAAa,MAAnB,GAAA3M,OAA6BoG,EAA7B,yBAAApG,OAAwDgK,EAAxD,eAAAhK,OAA0EuK,EAA1E,aAAAvK,OAA+FsK,IAC/FqF,EAAM/C,MAAMC,QAAQ,QALtB+C,EAAAjL,KAAA,EA5BcrB,SAAS6L,eAAe,sBAC9BvC,MAAMC,QAAQ,QACbX,KA0BT,wBAAA0D,EAAAzK,SAAAuK,OA59BsB3P,MAAAb,KAAAO,WA+iCtB,SAASwN,GAAO4C,EAAKC,EAAoBC,GAKvC,IAAIC,EAAY1M,SAASoJ,cAAc,UACvCsD,EAAUC,IAAMJ,EAEhBG,EAAUE,OAASJ,EACnBE,EAAUG,mBAAqBL,EAE/BC,EAAS/C,YAAYgD,GAiBvB,OA3HAvT,OAAO2T,iBAAiB,UAAW,SAAC9I,GAC9BA,EAAEnF,MAAyB,iBAAjBmF,EAAEnF,KAAKkB,MACnB4L,GAAgB3H,EAAEnF,KAAKkO,QACd/I,EAAEnF,MAAyB,oBAAjBmF,EAAEnF,KAAKkB,OAC1B4L,GAAgB3H,EAAEnF,KAAKkO,QAAQ,KAEhC,GAoFH5T,OAAO6G,SAAS8M,iBAAiB,kBAAmB,SAAC9I,GACnD2H,GAAgB,cAAc,KAgCzB/S,EAAK4C,IA3kCD,GA8kCEA,4CCpsCf,IAAAwR,EAGAA,EAAA,WACA,OAAApR,KADA,GAIA,IAEAoR,KAAA,IAAAC,SAAA,iBACC,MAAAjJ,GAED,iBAAA7K,SAAA6T,EAAA7T,QAOAJ,EAAAD,QAAAkU","file":"ledgers.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"web3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"__oh$__\", [\"web3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"__oh$__\"] = factory(require(\"web3\"));\n\telse\n\t\troot[\"__oh$__\"] = factory(root[\"Web3\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import Web3 from 'web3';\r\n\r\n//     ledgers.js \r\n//     https://ledger.overhide.io\r\n//     (c) 2021 Overhide LLC, Wyoming, USA\r\n//     ledgers.js may be freely distributed under the MIT license.\r\n\r\n/**\r\n * @namespace oh$\r\n * @description \r\n * \r\n * #### REFERENCES\r\n * \r\n * Library code: https://github.com/overhide/ledgers.js/blob/master/dist/ledgers.js.\r\n *\r\n * Repository for this library is https://github.com/overhide/ledgers.js.\r\n * \r\n * The repository contains a demo app of this library working in conjunction with the *overhide* Ethereum remuneration\r\n * provider (Rinkeby testnet -- https://rinkeby.ethereum.overhide.io) and the *overhide-ledger* (test environment -- https://test.ledger.overhide.io)\r\n * \r\n * #### ABOUT\r\n * \r\n * JavaScript library to be used in-browser and interrogate *overhide* remuneration providers as to validity\r\n * of ledger credentials and transactions involving these credentials.\r\n * \r\n * The goal of the library and the *overhide* remuneration providers is to ease using of all types of ledgers for\r\n * authentication (I am who I say) and authorization (paid access tiers).\r\n * \r\n * The library leverages injected currency wallets where it can, and exposes functions to work with *loose* currencies \r\n * (without wallets) where it cannot.\r\n * \r\n * The library exports the `oh$` object for use as a module when bundling.\r\n * \r\n * ```\r\n * import oh$ from \"ledgers.js\";\r\n * oh$.enable(token);\r\n * oh$.addEventListener('onWalletChange', (e) => {...});\r\n * ```\r\n * \r\n * > APIs abstracted by *ledgers.js* require a bearer-token.  The `token` (above) is passed in to `enable` the rest of the library's\r\n * > functionality.  `oh$.enable(..)` can be called every so often with a refreshed token.\r\n * >\r\n * >  A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n * >\r\n * > To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n * \r\n * The library can be loaded straight into your HTML (along with pre-requisite `web3.min.js`) and accessed by its `oh$` property from the browser's `window` object:\r\n * \r\n * ```\r\n * <script src=\"https://cdnjs.cloudflare.com/ajax/libs/web3/1.3.4/web3.min.js\" integrity=\"sha512-TTGImODeszogiro9DUvleC9NJVnxO6M0+69nbM3YE9SYcVe4wZp2XYpELtcikuFZO9vjXNPyeoHAhS5DHzX1ZQ==\" crossorigin=\"anonymous\"></script>\r\n * <script src=\"./dist/ledgers.js\"></script>\r\n * <script>\r\n *   oh$.enable(token);\r\n *   oh$.addEventListener('onWalletChange', (e) => {...});\r\n * </script>\r\n * ```\r\n * \r\n * #### IMPARTERS\r\n * \r\n * The library works with a concept of *imprater* tags.  Wallets impart credentials, signatures, and transactions.  For\r\n * *loose change*--where no wallet exists--the library can be interrogated as to which entities should be set by the \r\n * user (can* functions); causing the entities to be imparted back to the user in a common code flow.  \r\n * \r\n * The imparter tags are a simple naming convention.  For example if multiple Ethereum wallet APIs were imparting data \r\n * they  would be individually tagged with a prefix \"eth\" and a dashed suffix.  No suffix indicates a *loose change*\r\n * imparter:\r\n * \r\n * - eth-web3\r\n * - eth-?\r\n * \r\n * Similarly for *overhide-ledger*, the prefix is \"ohledger\", the suffix won't be attached on the *loose change* version \r\n * and will be suffixed on the *web3* walleted version:\r\n * \r\n * - ohledger\r\n * - ohledger-web3\r\n * \r\n * The following sections cover special notes on each imparter.  The library adheres to these notes.\r\n * \r\n * ##### eth-web3\r\n * \r\n * Ethereum addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Ethereum secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Ethereum networks names are:\r\n * \r\n * * main\r\n * * kovan\r\n * * rinkeyby\r\n * * ropsten\r\n * \r\n * The denomination for amounts is the Wei\r\n * \r\n * ##### ohledger, ohledger-web3\r\n * \r\n * Addresses and secret keys use Ethereum format.\r\n * \r\n * Addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Network tuples consist of a 'currency' as a three letter ISO fiat currency code and a 'mode'.  The supported\r\n * 'currency' names are:\r\n * \r\n * * 'USD'\r\n * \r\n * The denominations are:\r\n * \r\n * | Currency | denomination |\r\n * | --- | --- |\r\n * | USD | cents |\r\n * \r\n * Note: at this point only USD are supported.  If there is a need, and *overhide-ledger* instances in currencies\r\n * other than USD come online, we'll revisit this.\r\n *\r\n * An 'ohledger' mode is on of 'prod' or 'test'\r\n * \r\n */\r\nconst oh$ = (function() {\r\n\r\n  var root = typeof self == 'object' && self.self === self && self ||\r\n    typeof global == 'object' && global.global === global && global ||\r\n    this ||\r\n    {};\r\n\r\n  root.oh$ = new class extends EventTarget {\r\n    /**\r\n     * @event onWalletChange\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..,isPresent:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *isPresent* - if wallet is present for imparter\r\n     *\r\n     * @description\r\n     *   Event called when wallets' state changes.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletChange', (e) => console.log(`wallet for ${e.imparterTag} is available:${e.isPresent}`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onWalletPopup\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the pop-up\r\n     *\r\n     * @description\r\n     *   Event called when wallet is expected to popup.  Useful in case user wants to react to popup in UI.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletPopup', (e) => console.log(`wallet for ${e.imparterTag} popped`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onCredentialsUpdate\r\n     * @description\r\n     *   Event called when an credentials change for one of the tracked imparters.\r\n     * \r\n     *   Only called when credentials are valid as per imparter: ready to be used for signing, transacting.\r\n     *\r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onCredentialsUpdate', (e) => {\r\n     *     if (e.imparterTag === 'eth-web3') console.log(`new address for ${e.imparterTag} is:${e.address}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     * \r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,address:..}` |\r\n     *  > | ohledger | `{imparterTag:..,address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,address:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *address* - ledger public address of credential set for imparter\r\n     *  >\r\n     *  > *secret* - ledger PKI private secret for credential set for imparter\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @event onNetworkChange\r\n     * @description\r\n     *   Event called when the network changes for a particular imparter tag.\r\n     * \r\n     *   For example for \"eth\" the network could changed from \"main\" to \"rinkeby\".  \r\n     * \r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onNetworkChange', (e) => {\r\n     *     if (e.imparterTag === 'eth-web3') console.log(`new network selected for ${e.imparterTag} is:${e.name}`);\r\n     *     if (e.imparterTag === /ohledger/.test(e.imparterTag)) console.log(`working in currency: ${e.currency}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new credentials object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,name:('main'|'rinkeby'|'kovan').., uri:..}` |\r\n     *  > | ohledger | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *name* - of network\r\n     *  >\r\n     *  > *currency* - represented by network\r\n     *  >\r\n     *  > *mode* - production or test network\r\n     *  >\r\n     *  > *uri* - remuneration API URI for network\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function enable\r\n     * @description\r\n     *   Enable `oh$` by instrumenting with token for ledger access.\r\n     * \r\n     *   `oh$` calls may stall while waiting for this call to complete successfully.\r\n     * \r\n     *   A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n     * \r\n     *   To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n     * @param {string} token\r\n     */\r\n    enable = enable;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getImparterTags\r\n     * @description\r\n     *   Retrieves all imparter tags injected by wallets and statically available from the library.\r\n     * @returns {Array} of strings: the imparter tags available\r\n     */\r\n    getImparterTags = getImparterTags;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canSetCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials set by the user: or does the wallet control it\r\n     *   exclusively.\r\n     * \r\n     *   Only the following imparter(s) will return 'true':\r\n     * \r\n     *   - ohledger\r\n     * \r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials set.\r\n     */\r\n    canSetCredentials = canSetCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canGenerateCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials generated by the user: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials generated.\r\n     */\r\n    canGenerateCredentials = canGenerateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canChangeNetwork\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have network changed by the user via oh$: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *   - ohledger-web3\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have networks changed via oh$.\r\n     */\r\n    canChangeNetwork = canChangeNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function generateCredentials\r\n     * @description\r\n     *   For imparters that can have credentials generated, generates them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     * @param {string} imparterTag\r\n     * @param {Object} options - imparter specific generation options, if any.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | N/A |\r\n     *  > | ohledger | null |\r\n     *  > | ohledger-web3 | N/A |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n\r\n     */\r\n    generateCredentials = generateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setCredentials\r\n     * @description\r\n     *   For imparters that can have credentials set, sets them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} credentials - credentials object of imparter specific parameters to set\r\n     * \r\n     *  > The credentials objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | |\r\n     *  > | ohledger | `{address:..,secret:..}` | `address` is optional, if not set will be extracted from `secret` |\r\n     *  > | ohledger-web3 | N/A | |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     */\r\n    setCredentials = setCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setNetwork\r\n     * @description\r\n     *   For imparters that can have networks changed via oh$, changes it.  \r\n     * \r\n     *   Fires [onNetworkChange](#eventonnetworkchange) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} details - network details object of imparter specific parameters to set.\r\n     * \r\n     *  > The network details objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | network details object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | N/A |\r\n     *  > | ohledger | `{currency:'USD', mode:'prod'|'test'}` |\r\n     *  > | ohledger-web3 | `{currency:'USD', mode:'prod'|'test'}` |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onNetworkChange](#eventonnetworkchange) event against `oh$`\r\n     */\r\n    setNetwork = setNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getOverhideRemunerationAPIUri\r\n     * @description\r\n     *   Based on current network set returns the *overhide* remuneration API URI configured in the library.\r\n     * @param {string} imparterTag\r\n     * @returns {string} the URI.\r\n     */\r\n    getOverhideRemunerationAPIUri = getOverhideRemunerationAPIUri;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getCredentials\r\n     * @description\r\n     *   Retrieves current credentials for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current credentials, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     */\r\n    getCredentials = getCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getNetwork\r\n     * @description\r\n     *   Retrieves current network for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current network, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | network details object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{name:('main'|'rinkeby'|'kovan').., uri:..}` |\r\n     *  > | ohledger | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     */\r\n    getNetwork = getNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getFromDollars\r\n     * @description\r\n     *   Retrieve a converted amount in imparter specific denomination from a provided dollar amount.\r\n     * @param {string} imparterTag\r\n     * @param {number} dollarAmount - the dollar amount.\r\n     * @returns {Promise} with the value in imparter specific currency at the present time (based on recent exchange rate).\r\n     */\r\n     getFromDollars = getFromDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTallyDollars\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range--converted to a US dollar amount.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the tally value in US dollars: all transactions are exchanged to USD at an approximate exchange rate\r\n     *   close to the transactions' time.\r\n     */\r\n     getTallyDollars = getTallyDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTally\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the tally value in imparter specific currency\r\n     */\r\n    getTally = getTally;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTransactions\r\n     * @description\r\n     *   Retrieve transactions on the imparter's ledger, perhaps within a date range, from credentials set against \r\n     *   imparter to a recipient\r\n     * @param {string} imparterTag\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *\r\n     * @returns {Promise} with the transactions: `[{\"transaction-value\":..,\"transaction-date\":..},..]`\r\n     */\r\n    getTransactions = getTransactions;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function isOnLedger\r\n     * @description\r\n     *   Determine if current credentials have some transaction on the imparter's ledger: transaction can be to anyone.\r\n     * \r\n     *   Intent is to validate beyond just a valid address.  To validate the address has been used.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @returns {Promise} with 'true' or 'false'; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    isOnLedger = isOnLedger;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function sign\r\n     * @description\r\n     *   Sign using the provided message using the credentials set against the specific imparter.\r\n     * \r\n     *   Note: wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {string} message - to sign\r\n     * @returns {Promise} with the signature; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    sign = sign;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function createTransaction\r\n     * @description\r\n     *   Create a transaction on the imparter's ledger.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`; wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * @param {string} imparterTag\r\n     * @param {number} amount\r\n     * @param {string} to - address of recipient\r\n     * \r\n     *  > $0 (*amount*) transactions against *ohledger* or *ohledger-web* *imparters* use the current credential \r\n     *  > as the *to* address, not the specified *to* address.\r\n     *  \r\n     * @param {Object} options - other options required for the specific imparter.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  > \r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | null |\r\n     *  > | ohledger | {message:.., signature:..} |\r\n     *  > | ohledger-web3 | {message:.., signature:..} |\r\n     *  > \r\n     *  > If *message* and *signature* are provided they are used instead of oh$ asking for wallet to resign message.\r\n     *\r\n     * @returns {Promise} of a 'true' for success or an Error; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    createTransaction = createTransaction;\r\n  }();\r\n\r\n  const WALLET_CHECK_INTERVAL_MS = 500;\r\n\r\n  const ETH_WEB3_IMPARTER_TAG = 'eth-web3';\r\n  const OHLEDGER_IMPARTER_TAG = 'ohledger'\r\n  const OHLEDGER_WEB3_IMPARTER_TAG = 'ohledger-web3'\r\n\r\n  var doEnable = null;\r\n  const isEnabled = new Promise((resolve) => doEnable = resolve);\r\n  var token = null;\r\n  var __fetch = null;\r\n  var imparterTags = [OHLEDGER_IMPARTER_TAG];\r\n\r\n  var data = {\r\n    ETH_WEB3_IMPARTER_TAG: {\r\n      walletAddress: null,\r\n      network: null,\r\n      remuneration_uri: {\r\n        'main':'https://ethereum.overhide.io',\r\n        'rinkeby':'https://rinkeby.ethereum.overhide.io'\r\n      }\r\n    },\r\n    OHLEDGER_IMPARTER_TAG: {\r\n      oh_ledger_transact_fn: {\r\n        'prod': null,\r\n        'test': null\r\n      },\r\n      address: null,\r\n      secret: null,\r\n      mode: 'test',\r\n      remuneration_uri: {\r\n        'prod': 'https://ledger.overhide.io/v1',\r\n        'test': 'https://test.ledger.overhide.io/v1'\r\n      }\r\n    },\r\n    OHLEDGER_WEB3_IMPARTER_TAG: {\r\n      oh_ledger_transact_fn: {\r\n        'prod': null,\r\n        'test': null\r\n      },\r\n      walletAddress: null,\r\n      mode: 'test',\r\n      remuneration_uri: {\r\n        'prod': 'https://ledger.overhide.io/v1',\r\n        'test': 'https://test.ledger.overhide.io/v1'\r\n      }\r\n    }\r\n  }\r\n\r\n  var eth_accounts = (new Web3('http://localhost:8545')).eth.accounts;\r\n\r\n  createPopup();\r\n  detectWeb3Wallet();\r\n\r\n  /**\r\n   * Function to fire events.\r\n   * \r\n   * @param {string} which - event name to fire\r\n   * @param {Object} params - to copy to event\r\n   */\r\n  function fire(which, params) {\r\n    let event = document.createEvent(\"Event\");\r\n    event.initEvent(which, true, true);\r\n    for (var param in params) {\r\n      event[param] = params[param];\r\n    }\r\n    oh$.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Setup window.web3 to be the wallet's if available or offline if not (just for signing).\r\n   * \r\n   * Sets up a timer to check for wallet being logged in and address changes.\r\n   * \r\n   * @ignore\r\n   */\r\n  function detectWeb3Wallet() {    \r\n    if (!window.ethereum) return;\r\n \r\n    // Modern dapp browsers...\r\n    (async () => {\r\n      try {\r\n        await window.ethereum.enable();\r\n        window.web3 = new Web3(window.ethereum);\r\n      } catch (e) {/*noop*/ }\r\n\r\n      await detectWalletCb();\r\n\r\n      setInterval(async function () {\r\n        await detectWalletCb();\r\n      }, WALLET_CHECK_INTERVAL_MS);\r\n    })();\r\n\r\n    var detectWalletCb = async () => {\r\n      try {\r\n        var currentAccounts = await window.web3.eth.getAccounts();\r\n        var currentAddress = (currentAccounts && currentAccounts.length > 0) ? currentAccounts[0] : null;\r\n        var currentNetwork = (await window.web3.eth.net.getNetworkType());\r\n      } catch (e) {/*noop*/}\r\n      if (currentNetwork !== data.ETH_WEB3_IMPARTER_TAG.network) {\r\n        data.ETH_WEB3_IMPARTER_TAG.network = currentNetwork;\r\n        fire('onNetworkChange',{imparterTag: ETH_WEB3_IMPARTER_TAG, name:currentNetwork, uri: data.ETH_WEB3_IMPARTER_TAG.remuneration_uri[currentNetwork]});\r\n      }\r\n      if (currentAddress !== data.ETH_WEB3_IMPARTER_TAG.walletAddress) {\r\n        if (currentAddress) { /* add imparters */\r\n          let imparterTagIndex = imparterTags.findIndex(v => v === ETH_WEB3_IMPARTER_TAG);\r\n          if (imparterTagIndex == -1) imparterTags.push(ETH_WEB3_IMPARTER_TAG);\r\n          imparterTagIndex = imparterTags.findIndex(v => v === OHLEDGER_WEB3_IMPARTER_TAG);\r\n          if (imparterTagIndex == -1) imparterTags.push(OHLEDGER_WEB3_IMPARTER_TAG);\r\n        } else { /* remove imparters */\r\n          let imparterTagIndex = imparterTags.findIndex(v => v === ETH_WEB3_IMPARTER_TAG);\r\n          if (imparterTagIndex > -1) imparterTags.splice(imparterTagIndex, 1);\r\n          imparterTagIndex = imparterTags.findIndex(v => v === OHLEDGER_WEB3_IMPARTER_TAG);\r\n          if (imparterTagIndex > -1) imparterTags.splice(imparterTagIndex, 1);\r\n        } \r\n        data.ETH_WEB3_IMPARTER_TAG.walletAddress = currentAddress;\r\n        data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress = currentAddress;\r\n        fire('onWalletChange', { imparterTag: ETH_WEB3_IMPARTER_TAG, isPresent: !!currentAddress });\r\n        fire('onWalletChange', { imparterTag: OHLEDGER_WEB3_IMPARTER_TAG, isPresent: !!currentAddress });\r\n        if (currentAddress) {\r\n          fire('onCredentialsUpdate', { imparterTag: ETH_WEB3_IMPARTER_TAG, address: currentAddress });\r\n          fire('onCredentialsUpdate', { imparterTag: OHLEDGER_WEB3_IMPARTER_TAG, address: currentAddress });\r\n        }\r\n      }\r\n    }\r\n  } \r\n\r\n  function enable(_token, {fetcher} = {fetcher: fetch}) {\r\n    token = _token;\r\n    __fetch = fetcher;\r\n    doEnable(true);\r\n  }\r\n\r\n  function getImparterTags() {\r\n    return imparterTags;\r\n  }\r\n\r\n  function canSetCredentials(imparterTag) {\r\n    return imparterTag === OHLEDGER_IMPARTER_TAG;\r\n  }\r\n\r\n  function canGenerateCredentials(imparterTag) {\r\n    return imparterTag === OHLEDGER_IMPARTER_TAG;\r\n  }\r\n\r\n  function canChangeNetwork(imparterTag) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  async function setCredentials(imparterTag, credentials) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n        if (!('secret' in credentials)) throw new Error(\"'secret' must be passed in\");\r\n        if ('address' in credentials && credentials.address) {\r\n          data.OHLEDGER_IMPARTER_TAG.address = credentials.address.toLowerCase();\r\n        } else {\r\n          data.OHLEDGER_IMPARTER_TAG.address = eth_accounts.privateKeyToAccount(credentials.secret).address.toLowerCase();\r\n        }\r\n        data.OHLEDGER_IMPARTER_TAG.secret = credentials.secret;\r\n        try {\r\n          if (!(eth_accounts.recover(eth_accounts.sign('test message', data.OHLEDGER_IMPARTER_TAG.secret)).toLowerCase() == data.OHLEDGER_IMPARTER_TAG.address)) {\r\n            throw new Error(\"'secret' not valid for 'address\");\r\n          }\r\n        } catch (err) {\r\n          throw new Error(\"'secret' not valid for 'address\");\r\n        }        \r\n        fire('onCredentialsUpdate', { imparterTag: OHLEDGER_IMPARTER_TAG, address: data.OHLEDGER_IMPARTER_TAG.address, secret: data.OHLEDGER_IMPARTER_TAG.secret});\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function getCredentials(imparterTag) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:        \r\n        return {\"address\":data.OHLEDGER_IMPARTER_TAG.address, \"secret\":data.OHLEDGER_IMPARTER_TAG.secret};\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        return {\"address\":data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress};\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        return {\"address\":data.ETH_WEB3_IMPARTER_TAG.walletAddress};\r\n      default:\r\n        throw new Error(\"invalid imparterTag\");\r\n    }\r\n  }\r\n\r\n  async function generateCredentials(imparterTag, options) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n        let res = eth_accounts.create();\r\n        data.OHLEDGER_IMPARTER_TAG.address = res.address.toLowerCase();\r\n        data.OHLEDGER_IMPARTER_TAG.secret = res.privateKey;\r\n        fire('onCredentialsUpdate', { imparterTag: OHLEDGER_IMPARTER_TAG, address: data.OHLEDGER_IMPARTER_TAG.address, secret: data.OHLEDGER_IMPARTER_TAG.secret});\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  async function setNetwork(imparterTag, details) {\r\n    if (ETH_WEB3_IMPARTER_TAG == imparterTag) return false;\r\n    if (!('currency' in details)) throw new Error(\"'currency' must be passed in\");\r\n    if (!('mode' in details)) throw new Error(\"'mode' must be passed in\");\r\n    details.currency = details.currency.toUpperCase();\r\n    details.mode = details.mode.toLowerCase();\r\n    if (details.currency !== 'USD') throw new Error(\"'currency' must be 'USD'\");\r\n    if (details.mode !== 'prod' && details.mode !== 'test') throw new Error(\"'mode' must be 'prod' or 'test'\");\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n        data.OHLEDGER_IMPARTER_TAG.mode = details.mode;\r\n        fire('onNetworkChange', { imparterTag: OHLEDGER_IMPARTER_TAG, currency: 'USD', mode: details.mode, uri: data.OHLEDGER_IMPARTER_TAG.remuneration_uri[details.mode]});\r\n        return true;\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        data.OHLEDGER_WEB3_IMPARTER_TAG.mode = details.mode;\r\n        fire('onNetworkChange', { imparterTag: OHLEDGER_WEB3_IMPARTER_TAG, currency: 'USD', mode: details.mode, uri: data.OHLEDGER_WEB3_IMPARTER_TAG.remuneration_uri[details.mode] });\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function getNetwork(imparterTag) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:        \r\n        return { \"currency\": \"USD\", \"mode\": data.OHLEDGER_WEB3_IMPARTER_TAG.mode, \"uri\": data.OHLEDGER_WEB3_IMPARTER_TAG.remuneration_uri[data.OHLEDGER_WEB3_IMPARTER_TAG.mode]};\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        return { \"currency\": \"USD\", \"mode\": data.OHLEDGER_IMPARTER_TAG.mode, \"uri\": data.OHLEDGER_IMPARTER_TAG.remuneration_uri[data.OHLEDGER_IMPARTER_TAG.mode]};\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        return { \"name\": data.ETH_WEB3_IMPARTER_TAG.network, \"uri\": data.ETH_WEB3_IMPARTER_TAG.remuneration_uri[data.ETH_WEB3_IMPARTER_TAG.network]};\r\n      default:\r\n        throw new Error(\"invalid imparterTag\");\r\n    }\r\n  }\r\n\r\n  function getOverhideRemunerationAPIUri(imparterTag) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:        \r\n        if (!data.OHLEDGER_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        return data.OHLEDGER_IMPARTER_TAG.remuneration_uri[data.OHLEDGER_IMPARTER_TAG.mode];\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        return data.OHLEDGER_WEB3_IMPARTER_TAG.remuneration_uri[data.OHLEDGER_WEB3_IMPARTER_TAG.mode];\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        return data.ETH_WEB3_IMPARTER_TAG.remuneration_uri[data.ETH_WEB3_IMPARTER_TAG.network];      \r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  async function getFromDollars(imparterTag, dollarAmount) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:        \r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        return dollarAmount * 100;\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        const hostPrefix = data.ETH_WEB3_IMPARTER_TAG.network === 'main' ? '' : 'test.';\r\n        const now = (new Date()).toISOString();\r\n        if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n        const result = await __fetch(`https://${hostPrefix}rates.overhide.io/rates/eth/${now}`, {\r\n            headers: new Headers({\r\n              'Authorization': `Bearer ${token}`\r\n            })\r\n          })\r\n          .then(res => res.json())\r\n          .catch(e => {\r\n            throw String(e)\r\n          });\r\n        if (!result || ! 'minrate' in result || result.minrate === 0) return 0;\r\n        return dollarAmount / result.minrate;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  async function getTallyDollars(imparterTag, recipient, date) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:        \r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        var tally = await getTally(imparterTag, recipient, date);\r\n        return (tally / 100).toFixed(2);\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        const txs = await getTransactions(imparterTag, recipient, date);\r\n        if (!txs || txs.length == 0) return 0;\r\n        const values = txs.map(t => `${t['transaction-value']}@${(new Date(t['transaction-date'])).toISOString()}`);        \r\n        const hostPrefix = data.ETH_WEB3_IMPARTER_TAG.network === 'main' ? '' : 'test.';\r\n        const now = (new Date()).toISOString();\r\n        if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n        var tally = await __fetch(`https://${hostPrefix}rates.overhide.io/tallymax/wei/${values.join(',')}`, {\r\n            headers: new Headers({\r\n              'Authorization': `Bearer ${token}`\r\n            })\r\n          })\r\n          .then(res => res.text())\r\n          .catch(e => {\r\n            throw String(e)\r\n          });\r\n        return (Math.round(tally * 100) / 100).toFixed(2);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  async function getTally(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, true)).tally;\r\n  }\r\n\r\n  async function getTransactions(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, false)).transactions;\r\n  }\r\n\r\n  async function getTxs(imparterTag, recipient, date, tallyOnly) {\r\n    if (date && !(date instanceof Date)) throw new Error(\"'date' must be a Date is passed in\");\r\n    if (!('address' in recipient) || !recipient.address) throw new Error(\"'address' required in recipient\");\r\n    let to = recipient.address;\r\n    let uri = getOverhideRemunerationAPIUri(imparterTag);\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        if (!data.OHLEDGER_IMPARTER_TAG.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n        var from = data.OHLEDGER_IMPARTER_TAG.address;\r\n        break;\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n        var from = data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress;\r\n        break;\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        if (!data.ETH_WEB3_IMPARTER_TAG.network) throw new Error(\"no network for imparter tag\");\r\n        if (!data.ETH_WEB3_IMPARTER_TAG.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n        var from = data.ETH_WEB3_IMPARTER_TAG.walletAddress;\r\n        break;\r\n      default:\r\n        throw new Error('unsupported imparter tag');\r\n    }\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    let since = '';\r\n    if (date) {\r\n      since = `&since=${date.toISOString()}`;\r\n    }\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n    return await __fetch(`${uri}/get-transactions/${from}/${to}?tally-only=${tallyOnly ? 'true' : 'false'}${since}`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${token}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  function raiseEventClick(imparterTag, triggerFor) {\r\n    window.parent.document.dispatchEvent(new CustomEvent('oh$-event', {detail: JSON.stringify({\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor,\r\n      click: true\r\n    })}));\r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  function raiseEvent(imparterTag, triggerFor, data) {\r\n    window.parent.document.dispatchEvent(new CustomEvent('oh$-event', {detail: JSON.stringify({\r\n      ...data,\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor\r\n    })}));    \r\n  }\r\n\r\n  async function isOnLedger(imparterTag) {\r\n    let uri = getOverhideRemunerationAPIUri(imparterTag);\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        if (!data.OHLEDGER_IMPARTER_TAG.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n        var from = data.OHLEDGER_IMPARTER_TAG.address;\r\n        break;\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n        var from = data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress;\r\n        break;\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        if (!data.ETH_WEB3_IMPARTER_TAG.network) throw new Error(\"no network for imparter tag\");\r\n        if (!data.ETH_WEB3_IMPARTER_TAG.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n        var from = data.ETH_WEB3_IMPARTER_TAG.walletAddress;\r\n        break;\r\n      default:\r\n        throw new Error('unsupported imparter tag');\r\n    }\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    let message = 'verify ownership of address by signing';\r\n    let signature = await sign(imparterTag, message);\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n    return await __fetch(`${uri}/is-signature-valid`, {\r\n      method: \"POST\",\r\n      headers: { \r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        signature: btoa(signature),\r\n        message: btoa(message),\r\n        address: from\r\n      })\r\n    })\r\n      .then((result) => {\r\n        if (result.status == 200) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n  }\r\n\r\n  async function sign(imparterTag, message) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_IMPARTER_TAG.secret) throw new Error(`credentials for imparter ${OHLEDGER_IMPARTER_TAG} not set`);\r\n        return eth_accounts.sign(message, data.OHLEDGER_IMPARTER_TAG.secret).signature;\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress) throw new Error(`imparter ${OHLEDGER_WEB3_IMPARTER_TAG} not active`);\r\n        fire('onWalletPopup', {imparterTag: OHLEDGER_WEB3_IMPARTER_TAG});\r\n        return (await window.web3.eth.personal.sign(message, data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress, ''));\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        if (!data.ETH_WEB3_IMPARTER_TAG.walletAddress) throw new Error(`imparter ${ETH_WEB3_IMPARTER_TAG} not active`);\r\n        fire('onWalletPopup', {imparterTag: ETH_WEB3_IMPARTER_TAG});\r\n        return (await window.web3.eth.personal.sign(message, data.ETH_WEB3_IMPARTER_TAG.walletAddress, ''));\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  async function createTransaction(imparterTag, amount, to, options) {\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        if (!data.OHLEDGER_IMPARTER_TAG.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n        var from = data.OHLEDGER_IMPARTER_TAG.address;\r\n        break;\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n        if (!data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n        var from = data.OHLEDGER_WEB3_IMPARTER_TAG.walletAddress;\r\n        break;\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        if (!data.ETH_WEB3_IMPARTER_TAG.network) throw new Error(\"no network for imparter tag\");\r\n        if (!data.ETH_WEB3_IMPARTER_TAG.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n        var from = data.ETH_WEB3_IMPARTER_TAG.walletAddress;\r\n        break;\r\n      default:\r\n        throw new Error('unsupported imparter tag');\r\n    }\r\n    switch (imparterTag) {\r\n      case OHLEDGER_IMPARTER_TAG:\r\n      case OHLEDGER_WEB3_IMPARTER_TAG:\r\n        if (amount == 0) {\r\n          if ('message' in options && options.message && 'signature' in options && options.signature) {\r\n            var message = options.message;\r\n            var signature = options.signature;\r\n          } else {\r\n            var message = `verify ownership of address by signing on ${new Date().toLocaleString()}`;\r\n            var signature = await sign(imparterTag, message);\r\n          }\r\n          await showOhLedgerGratisIframeUri(imparterTag, from, signature, message);\r\n        } else {\r\n          let eventPromise = setupNewPromise();\r\n          data.OHLEDGER_IMPARTER_TAG.oh_ledger_transact_fn[data.OHLEDGER_IMPARTER_TAG.mode](amount, from, to);\r\n          await eventPromise;\r\n        }\r\n        break;\r\n      case ETH_WEB3_IMPARTER_TAG:\r\n        fire('onWalletPopup', {imparterTag: ETH_WEB3_IMPARTER_TAG});\r\n        await (new Promise((resolve, reject) => {\r\n          web3.eth.sendTransaction({ from: from, to: to, value: amount })\r\n          .on('confirmation', function (confirmationNumber, receipt) {\r\n            resolve();\r\n          })\r\n          .on('error', (error) => {\r\n            reject(error);\r\n          }); \r\n        }));\r\n        break;\r\n      default:\r\n        throw new Error('unsupported imparter tag');\r\n    }\r\n    return true;\r\n  }\r\n\r\n  var resolve = null;\r\n  var reject = null;\r\n\r\n  // promise used for popups and resolutions via oh-ledger-* messages.\r\n  function setupNewPromise() {\r\n    console.assert(!resolve, 'oh-popup promise being set but already set when calling setupNewPromise(..)');\r\n    return new Promise((rs, rj) => {\r\n      resolve = rs;\r\n      reject = rj;\r\n    });    \r\n  }\r\n\r\n  // make popup visible to be hidden with makePopupHidden\r\n  function makePopupVisible() {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    popup.style.display='block';\r\n    return setupNewPromise();\r\n  }\r\n\r\n  function makePopupHidden(params, isError) {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    hideAllPopupContents();\r\n    popup.style.display='none';\r\n    console.assert(resolve, 'oh-popup promise not set yet calling makePopupHidden(..)');\r\n    if (isError) reject(params)\r\n    else resolve(params);\r\n    resolve = null;\r\n    reject = null;\r\n  }\r\n\r\n  window.addEventListener('message', (e) => {\r\n    if (e.data && e.data.event === 'oh-ledger-ok') {\r\n      makePopupHidden(e.data.detail);\r\n    } else if (e.data && e.data.event === 'oh-ledger-error') {\r\n      makePopupHidden(e.data.detail, true);\r\n    }\r\n  }, false);\r\n\r\n  function hideAllPopupContents() {\r\n    document.getElementById('oh-ledger-gratis-iframe').style.display='none';\r\n  }\r\n\r\n  async function showOhLedgerGratisIframeUri(imparterTag, from, signature, message) {\r\n    hideAllPopupContents();\r\n    let uri = getOverhideRemunerationAPIUri(imparterTag);\r\n    var frame = document.getElementById('oh-ledger-gratis-iframe');\r\n    frame.setAttribute('src', `${uri}/gratis.html?address=${from}&signature=${signature}&message=${message}`);\r\n    frame.style.display='block';    \r\n    await makePopupVisible();\r\n  }\r\n\r\n  function createPopup() {\r\n    var popup = document.createElement('div');\r\n    popup.setAttribute('id','oh-popup-container');\r\n    popup.style.display='none';\r\n    popup.innerHTML = `\r\n      <div>\r\n        <a href=\"#\" title=\"Close\" id=\"oh-popup-close\" onclick=\"window.parent.document.dispatchEvent(new CustomEvent('oh$-popup-close',{})); return false;\">X</a>\r\n        <iframe id=\"oh-ledger-gratis-iframe\"></iframe>\r\n      </div>\r\n    `;\r\n    var style = document.createElement('style');\r\n    style.innerHTML =`\r\n      #oh-popup-container {\r\n          position: fixed;\r\n          font-family: arial, \"lucida console\", sans-serif;\r\n          top: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: rgba(0, 0, 0, 0.8);\r\n          z-index: 999;\r\n          opacity:1;\r\n          pointer-events: auto;\r\n      }\r\n      #oh-popup-container > div {\r\n          width: 80vw;\r\n          height: 75vh;\r\n          position: relative;\r\n          top: 15vh;\r\n          margin: auto auto;\r\n          padding: 5px 5px 5px 5px;\r\n          background: white;\r\n      }\r\n      #oh-popup-close {\r\n          background: grey;\r\n          color: white;\r\n          line-height: 25px;\r\n          position: absolute;\r\n          right: 2px;\r\n          text-align: center;\r\n          top: 2px;\r\n          width: 24px;\r\n          text-decoration: none;\r\n          font-weight: bold;\r\n      }\r\n      #oh-popup-close:hover {\r\n          background: black;\r\n      }\r\n\r\n      #oh-ledger-gratis-iframe {\r\n        display: none;\r\n        border: 0;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `;\r\n    var attach = () => {\r\n      if (document.body) {\r\n        document.body.appendChild(popup);\r\n        document.body.appendChild(style);\r\n        loadOhLedgerTransactFns();\r\n      } else {\r\n        setTimeout(attach, 100);\r\n      };\r\n    };\r\n    attach();\r\n  }\r\n\r\n  window.document.addEventListener('oh$-popup-close', (e) => {\r\n    makePopupHidden('user close', true);\r\n  });\r\n\r\n  // https://stackoverflow.com/a/31374433\r\n  function loadJS(url, implementationCode, location) {\r\n    //url is URL of external file, implementationCode is the code\r\n    //to be called from the file, location is the location to \r\n    //insert the <script> element\r\n\r\n    var scriptTag = document.createElement('script');\r\n    scriptTag.src = url;\r\n\r\n    scriptTag.onload = implementationCode;\r\n    scriptTag.onreadystatechange = implementationCode;\r\n\r\n    location.appendChild(scriptTag);\r\n  };\r\n\r\n  function loadOhLedgerTransactFns() {\r\n    // load prod ohledger transact fn\r\n    loadJS(`${data.OHLEDGER_IMPARTER_TAG.remuneration_uri.prod}/transact.js`, () => {\r\n      data.OHLEDGER_IMPARTER_TAG.oh_ledger_transact_fn.prod = oh_ledger_transact;\r\n      data.OHLEDGER_WEB3_IMPARTER_TAG.oh_ledger_transact_fn.prod = oh_ledger_transact;\r\n    }, document.body);\r\n\r\n    // load test ohledger transact fn\r\n    loadJS(`${data.OHLEDGER_IMPARTER_TAG.remuneration_uri.test}/transact.js`, () => {\r\n      data.OHLEDGER_IMPARTER_TAG.oh_ledger_transact_fn.test = oh_ledger_transact;\r\n      data.OHLEDGER_WEB3_IMPARTER_TAG.oh_ledger_transact_fn.test = oh_ledger_transact;\r\n    }, document.body);\r\n  }\r\n\r\n  return root.oh$;\r\n})();\r\n\r\nexport default oh$;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}