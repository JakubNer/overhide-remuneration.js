{"version":3,"sources":["webpack://__oh$__/webpack/universalModuleDefinition","webpack://__oh$__/webpack/bootstrap","webpack://__oh$__/./src/fns/imparter_fns.js","webpack://__oh$__/./src/fns/ohledger_fns.js","webpack://__oh$__/./src/imparters/eth-web3.js","webpack://__oh$__/./src/imparters/ohledger-web3.js","webpack://__oh$__/./src/imparters/btc-manual.js","webpack://__oh$__/./src/imparters/ohledger.js","webpack://__oh$__/./src/imparters/ohledger-social.js","webpack://__oh$__/external {\"commonjs\":\"web3\",\"commonjs2\":\"web3\",\"amd\":\"web3\",\"root\":\"Web3\"}","webpack://__oh$__/./src/fns/dom_fns.js","webpack://__oh$__/./src/wallets/web3_wallet.js","webpack://__oh$__/./src/wallets/overhide_wallet.js","webpack://__oh$__/./src/ledgers.js","webpack://__oh$__/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","imparter_fns","recipient","date","Date","Error","address","_callee","uri","from","to","tallyOnly","tallyDollars","token","__fetch","since","dollarsQuery","regeneratorRuntime","wrap","_context","prev","next","concat","toISOString","headers","Headers","Authorization","then","res","json","e","String","abrupt","sent","stop","_callee2","signature","message","_context2","method","Content-Type","body","JSON","stringify","btoa","result","status","ohledger_fns","details","currency","toUpperCase","toLowerCase","amount","signFn","showGratisFn","ohLedgerTransactFn","options","toLocaleString","eth_web3","web3_wallet","getToken","fire","_this","this","_classCallCheck","_defineProperty","main","rinkeby","eth_accounts","networkChangeDelegates","push","network","onNetworkChange","imparterTag","tag","remuneration_uri","credentials","walletAddress","dollarAmount","hostPrefix","now","length","minrate","getTxs_check_details","getOverhideRemunerationAPIUri","getTxs_retrieve","_callee3","_context3","sign","isSignatureValid_call","_callee4","_context4","web3","eth","personal","_callee5","_context5","Promise","resolve","reject","sendTransaction","on","confirmationNumber","receipt","error","ohledger_web3","overhide_wallet","setNetwork_check_details","createTransaction","showOhLedgerGratisIframeUri","oh_ledger_transact_fn","btc_manual","domFns","prod","test","addEventListener","data","event","detail","makePopupHidden","base64Message","hideAllPopupContents","setFrame","url","t0","atob","makePopupVisible","t1","ohledger","privateKeyToAccount","secret","recover","err","privateKey","ohledger_social","social","provider","_callee6","karnet","popupPromise","_this2","_context6","open","height","width","_ref","_asyncToGenerator","mark","resultValue","text","_x8","apply","arguments","_callee7","_this3","_context7","dom_fns","createPopup","triggerFor","parent","postMessage","click","_objectSpread","console","assert","rs","rj","src","widthEm","undefined","heightEm","frame","document","getElementById","setAttribute","style","display","container","setupNewPromise","params","isError","popup","createElement","innerHTML","attach","appendChild","setTimeout","addTag","removeTag","Web3","accounts","detectWeb3Wallet","ethereum","enable","detectWalletCb","setInterval","_ref3","currentAccounts","currentAddress","currentNetwork","getAccounts","net","getNetworkType","forEach","isPresent","loadOhLedgerTransactFns","implementationCode","location","scriptTag","onload","onreadystatechange","loadJS","fn","oh_ledger_transact","oh$","self","_typeof","global","_EventTarget","_inherits","_class2","_wrapNativeSuper","EventTarget","_super","_createSuper","_len","args","Array","_key","_assertThisInitialized","getImparterTags","canSetCredentials","canGenerateCredentials","canChangeNetwork","generateCredentials","setCredentials","setNetwork","getCredentials","getNetwork","getFromDollars","getTallyDollars","getTally","getTransactions","isOnLedger","doEnable","isEnabled","imparterTags","which","createEvent","param","initEvent","dispatchEvent","web3Wallet","findIndex","v","imparterTagIndex","splice","overhideWallet","imparters","_token","fetcher","fetch","_x","_x2","_setCredentials","_x3","_x4","_generateCredentials","_x5","_x6","_setNetwork","_x7","_getFromDollars","_x9","_x10","_x11","_getTallyDollars","getTxs","_x12","_x13","_x14","_getTally","_x15","_x16","_x17","_getTransactions","_x18","_x19","_x20","_x21","_x22","_getTxs","_callee8","_context8","_x23","_isOnLedger","_callee9","_context9","_x24","_x25","_sign","_callee10","_context10","_x26","_x27","_x28","_x29","_createTransaction","_callee11","_context11","init","g","Function"],"mappings":"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","file":"ledgers.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"web3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"__oh$__\", [\"web3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"__oh$__\"] = factory(require(\"web3\"));\n\telse\n\t\troot[\"__oh$__\"] = factory(root[\"Web3\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","class imparter_fns {\r\n  static getTxs_check_details(recipient, date) {\r\n    if (date && !(date instanceof Date)) throw new Error(\"'date' must be a Date is passed in\");\r\n    if (!('address' in recipient) || !recipient.address) throw new Error(\"'address' required in recipient\");  }\r\n\r\n  static async getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, token, __fetch) {\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    let since = '';\r\n    if (date) {\r\n      since = `&since=${date.toISOString()}`;\r\n    }\r\n    let dollarsQuery = '';\r\n    if (tallyDollars) {\r\n      dollarsQuery = `&tally-dollars=true`\r\n    }\r\n    return await __fetch(`${uri}/get-transactions/${from}/${to}?tally-only=${tallyOnly ? 'true' : 'false'}${dollarsQuery}${since}&include-refunds=true`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${token}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });    \r\n  }\r\n\r\n  static async isSignatureValid_call(uri, signature, message, from, token, __fetch) {\r\n    return await __fetch(`${uri}/is-signature-valid`, {\r\n      method: \"POST\",\r\n      headers: { \r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        signature: btoa(signature),\r\n        message: btoa(message),\r\n        address: from\r\n      })\r\n    })\r\n      .then((result) => {\r\n        if (result.status == 200) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n  }\r\n}\r\n\r\nexport default imparter_fns;","class ohledger_fns {\r\n  static setNetwork_check_details(details) {\r\n    if (!('currency' in details)) throw new Error(\"'currency' must be passed in\");\r\n    if (!('mode' in details)) throw new Error(\"'mode' must be passed in\");\r\n    details.currency = details.currency.toUpperCase();\r\n    details.mode = details.mode.toLowerCase();\r\n    if (details.currency !== 'USD') throw new Error(\"'currency' must be 'USD'\");\r\n    if (details.mode !== 'prod' && details.mode !== 'test') throw new Error(\"'mode' must be 'prod' or 'test'\");    \r\n  }\r\n\r\n  static async createTransaction(amount, from, to, signFn, showGratisFn, ohLedgerTransactFn, options) {\r\n    if (amount == 0) {\r\n      if ('message' in options && options.message && 'signature' in options && options.signature) {\r\n        var message = options.message;\r\n        var signature = options.signature;\r\n      } else {\r\n        var message = `verify ownership of address by signing on ${new Date().toLocaleString()}`;\r\n        var signature = await signFn(message);\r\n      }\r\n      await showGratisFn(from, signature, message);\r\n    } else {\r\n      await ohLedgerTransactFn(amount, from, to);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ohledger_fns;","import imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass eth_web3 {\r\n  static tag = 'eth-web3';\r\n\r\n  remuneration_uri = {\r\n    'main':'https://ethereum.overhide.io',\r\n    'rinkeby':'https://rinkeby.ethereum.overhide.io'\r\n  };\r\n\r\n  constructor(web3_wallet, getToken, __fetch, fire) {\r\n    this.web3_wallet = web3_wallet;\r\n    this.eth_accounts = web3_wallet.eth_accounts;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n\r\n    web3_wallet.networkChangeDelegates.push((network) => this.onNetworkChange(network));\r\n  }\r\n\r\n  onNetworkChange(network) {\r\n    this.fire('onNetworkChange',{imparterTag: eth_web3.tag, name: network, mode: network == 'main' ? 'prod' : 'test', uri: this.remuneration_uri[network]});\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return false;\r\n  }\r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }    \r\n\r\n  canChangeNetwork() {\r\n    return false;\r\n  }   \r\n\r\n  setCredentials(credentials) {\r\n    return false;\r\n  }\r\n\r\n  getCredentials() {\r\n    return {\"address\":this.web3_wallet.walletAddress};\r\n  }    \r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }  \r\n\r\n  setNetwork(details) {\r\n    return false;\r\n  }\r\n\r\n  getNetwork() {\r\n    return { \"name\": this.web3_wallet.network, \"mode\": this.web3_wallet.network == 'main' ? 'prod' : 'test', \"uri\": this.remuneration_uri[this.web3_wallet.network]};\r\n  }  \r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    return this.remuneration_uri[this.web3_wallet.network];      \r\n  }  \r\n\r\n  async getFromDollars(dollarAmount) {\r\n    const hostPrefix = this.web3_wallet.network === 'main' ? '' : 'test.';\r\n    const now = (new Date()).toISOString();\r\n    const result = await this.__fetch(`https://${hostPrefix}rates.overhide.io/rates/wei/${now}`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${this.getToken()}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n    if (!result || result.length === 0 || ! 'minrate' in result[0] || result[0].minrate === 0) return 0;\r\n    return dollarAmount / result[0].minrate;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.web3_wallet.network) throw new Error(\"network must be set in wallet\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    var from = this.web3_wallet.walletAddress;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }  \r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.web3_wallet.network) throw new Error(\"no network for imparter tag\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.web3_wallet.walletAddress) throw new Error(`imparter ${eth_web3.tag} not active`);\r\n    this.fire('onWalletPopup', {imparterTag: eth_web3.tag});\r\n    return (await window.web3.eth.personal.sign(message, this.web3_wallet.walletAddress, ''));\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.web3_wallet.network) throw new Error(\"no network for imparter tag\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    this.fire('onWalletPopup', {imparterTag: eth_web3.tag});\r\n    await (new Promise((resolve, reject) => {\r\n      window.web3.eth.sendTransaction({ from: from, to: to, value: amount })\r\n      .on('confirmation', function (confirmationNumber, receipt) {\r\n        resolve();\r\n      })\r\n      .on('error', (error) => {\r\n        reject(error);\r\n      }); \r\n    }));\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default eth_web3;","import ohledger_fns from '../fns/ohledger_fns.js';\r\nimport imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass ohledger_web3 {\r\n  static tag = 'ohledger-web3';\r\n\r\n  mode = 'test';\r\n\r\n  constructor(overhide_wallet, web3_wallet, getToken, __fetch, fire) {\r\n    this.web3_wallet = web3_wallet;\r\n    this.overhide_wallet = overhide_wallet;\r\n    this.__fetch = __fetch;\r\n    this.getToken = getToken;\r\n    this.fire = fire;\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return false;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }    \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n  \r\n  setCredentials(credentials) {\r\n    return false;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\": this.web3_wallet.walletAddress};\r\n  }  \r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    ohledger_fns.setNetwork_check_details(details);\r\n\r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: ohledger_web3.tag, currency: 'USD', mode: details.mode, uri: this.overhide_wallet.remuneration_uri[details.mode] });\r\n    return true;\r\n  }\r\n\r\n  getNetwork() {\r\n    return { \"currency\": \"USD\", \"mode\": this.mode, \"uri\": this.overhide_wallet.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.overhide_wallet.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    return dollarAmount * 100;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    var from = this.web3_wallet.walletAddress;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }  \r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.web3_wallet.walletAddress) throw new Error(`imparter ${ohledger_web3.tag} not active`);\r\n    this.fire('onWalletPopup', {imparterTag: ohledger_web3.tag});\r\n    return (await window.web3.eth.personal.sign(message, this.web3_wallet.walletAddress, ''));\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    await ohledger_fns.createTransaction(\r\n      amount, \r\n      from,\r\n      to,\r\n      (message) => this.sign(message),\r\n      (from, signature, message) => this.overhide_wallet.showOhLedgerGratisIframeUri(uri, from, signature, message), \r\n      this.overhide_wallet.oh_ledger_transact_fn[this.mode], \r\n      options);\r\n\r\n    return true;\r\n  }    \r\n}\r\n\r\nexport default ohledger_web3;","import imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass btc_manual {\r\n  static tag = 'btc-manual';\r\n\r\n  remuneration_uri = {\r\n    'prod':'https://bitcoin.overhide.io',\r\n    'test':'https://test.bitcoin.overhide.io'\r\n  };\r\n\r\n  url = 'https://overhide.github.io/ledgers.js/src/frames';\r\n  address = null;\r\n  mode = 'test';\r\n\r\n  constructor(domFns, getToken, __fetch, fire) {\r\n    this.domFns = domFns;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n\r\n    window.addEventListener('message', (e) => {\r\n      if (!e.data || !e.data.event) return;\r\n      switch(e.data.event) {\r\n        case 'oh$-popup-signature':\r\n          if ('detail' in e.data && e.data.detail && 'signature' in e.data.detail) {\r\n            this.domFns.makePopupHidden(e.data.detail.signature, false);\r\n          } else {\r\n            this.domFns.makePopupHidden(`no signature`, true);      \r\n          }          \r\n          break;\r\n      }\r\n    });    \r\n  }\r\n\r\n  canSetCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }  \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n\r\n  setCredentials(credentials) {\r\n    if (!('address' in credentials)) throw new Error(\"'address' must be passed in\");\r\n    switch(this.mode) {\r\n      case 'bitcoin_testnet':\r\n        if (!/(tb(0([ac-hj-np-z02-9]{39}|[ac-hj-np-z02-9]{59})|1[ac-hj-np-z02-9]{8,87})|[mn2][a-km-zA-HJ-NP-Z1-9]{25,39})/.test(credentials.address)) {\r\n          throw new Error(`invalid bitcoin_testnet address: ${credentials.address}`);\r\n        }\r\n        break;\r\n      case 'bitcoin':\r\n        if (!/(bc(0([ac-hj-np-z02-9]{39}|[ac-hj-np-z02-9]{59})|1[ac-hj-np-z02-9]{8,87})|[13][a-km-zA-HJ-NP-Z1-9]{25,35})/.test(credentials.address)) {\r\n          throw new Error(`invalid bitcoin address: ${credentials.address}`);\r\n        }\r\n        break;\r\n    }\r\n    this.address = credentials.address;\r\n    this.fire('onCredentialsUpdate', { imparterTag: btc_manual.tag, address: this.address});\r\n    return true;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\":this.address};\r\n  }\r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    if (!('mode' in details)) throw new Error(\"'mode' must be passed in\");\r\n    details.mode = details.mode.toLowerCase();\r\n    if (details.mode !== 'prod' && details.mode !== 'test') throw new Error(\"'mode' must be 'prod' or 'test'\");    \r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: btc_manual.tag, mode: details.mode, uri: this.remuneration_uri[details.mode]});\r\n    return true;\r\n  }  \r\n\r\n  getNetwork() {\r\n    return { \"mode\": this.mode, \"uri\": this.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    const hostPrefix = this.mode === 'main' ? '' : 'test.';\r\n    const now = (new Date()).toISOString();\r\n    const result = await this.__fetch(`https://${hostPrefix}rates.overhide.io/rates/sat/${now}`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${this.getToken()}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n    if (!result || result.length === 0 || ! 'minrate' in result[0] || result[0].minrate === 0) return 0;\r\n    return dollarAmount / result[0].minrate;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.address) throw new Error(`credentials for imparter ${btc_manual.tag} not set`);\r\n\r\n    this.domFns.hideAllPopupContents();\r\n    const base64Message = btoa(message);\r\n    this.domFns.setFrame(`${this.url}/btc_manual_sign.html?address=${this.address}&message=${base64Message}&token=${this.getToken()}&isTest=${this.mode == 'test'}`);\r\n    return atob(await this.domFns.makePopupVisible());\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    this.domFns.hideAllPopupContents();\r\n    this.domFns.setFrame(`${this.url}/btc_manual_createTransaction.html?from=${this.address}&to=${to}&value=${amount}&isTest=${this.mode == 'test'}`);\r\n    await this.domFns.makePopupVisible();\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default btc_manual;","import ohledger_fns from '../fns/ohledger_fns.js';\r\nimport imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass ohledger {\r\n  static tag = 'ohledger';\r\n\r\n  address = null;\r\n  secret = null;\r\n  mode = 'test';\r\n\r\n  constructor(overhide_wallet, web3_wallet, getToken, __fetch, fire) {\r\n    this.overhide_wallet = overhide_wallet;\r\n    this.eth_accounts = web3_wallet.eth_accounts;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n\r\n  setCredentials(credentials) {\r\n    if (!('secret' in credentials)) throw new Error(\"'secret' must be passed in\");\r\n    if ('address' in credentials && credentials.address) {\r\n      this.address = credentials.address.toLowerCase();\r\n    } else {\r\n      this.address = this.eth_accounts.privateKeyToAccount(credentials.secret).address.toLowerCase();\r\n    }\r\n    this.secret = credentials.secret;\r\n    try {\r\n      if (!(this.eth_accounts.recover(this.eth_accounts.sign('test message', this.secret)).toLowerCase() == this.address)) {\r\n        throw new Error(\"'secret' not valid for 'address\");\r\n      }\r\n    } catch (err) {\r\n      throw new Error(\"'secret' not valid for 'address\");\r\n    }        \r\n    this.fire('onCredentialsUpdate', { imparterTag: ohledger.tag, address: this.address, secret: this.secret});\r\n    return true;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\":this.address, \"secret\":this.secret};\r\n  }\r\n\r\n  generateCredentials(options) {\r\n    const res = this.eth_accounts.create();\r\n    this.address = res.address.toLowerCase();\r\n    this.secret = res.privateKey;\r\n    this.fire('onCredentialsUpdate', { imparterTag: ohledger.tag, address: this.address, secret: this.secret});\r\n    return true;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    ohledger_fns.setNetwork_check_details(details);\r\n\r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: ohledger.tag, currency: 'USD', mode: details.mode, uri: this.overhide_wallet.remuneration_uri[details.mode]});\r\n    return true;\r\n  }  \r\n\r\n  getNetwork() {\r\n    return { \"currency\": \"USD\", \"mode\": this.mode, \"uri\": this.overhide_wallet.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.overhide_wallet.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    return dollarAmount * 100;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.secret) throw new Error(`credentials for imparter ${ohledger.tag} not set`);\r\n    return this.eth_accounts.sign(message, this.secret).signature;\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    await ohledger_fns.createTransaction(\r\n      amount, \r\n      from,\r\n      to,\r\n      (message) => this.sign(message),\r\n      (from, signature, message) => this.overhide_wallet.showOhLedgerGratisIframeUri(uri, from, signature, message), \r\n      this.overhide_wallet.oh_ledger_transact_fn[this.mode], \r\n      options);\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default ohledger;","import ohledger_fns from '../fns/ohledger_fns.js';\r\nimport imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass ohledger_social {\r\n  static tag = 'ohledger-social';\r\n\r\n  address = null;\r\n  mode = 'test';\r\n  social = null;\r\n\r\n  constructor(domFns, overhide_wallet, web3_wallet, getToken, __fetch, fire) {\r\n    this.domFns = domFns;\r\n    this.overhide_wallet = overhide_wallet;\r\n    this.eth_accounts = web3_wallet.eth_accounts;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n\r\n    window.addEventListener('message', (e) => {\r\n      if (!e.data || !e.data.event) return;\r\n      switch(e.data.event) {\r\n        case 'oh$-login-success':\r\n          this.domFns.makePopupHidden('login success', false);          \r\n          break;\r\n        case 'oh$-login-failed':\r\n          this.domFns.makePopupHidden('login failure', true);\r\n          break;\r\n        case 'oh$-logout-success':\r\n          this.domFns.makePopupHidden('logout', false);\r\n          break;\r\n      }\r\n    });    \r\n  }\r\n\r\n  canSetCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }  \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n\r\n  async setCredentials(credentials) {\r\n    if (!credentials) {\r\n      if (!this.social) throw new Error(\"Not logged in\");    \r\n      this.domFns.hideAllPopupContents();\r\n      this.domFns.setFrame(`https://overhide.b2clogin.com/overhide.onmicrosoft.com/B2C_1_${this.social}/oauth2/v2.0/logout?redirect_uri=http%3A%2F%2Fsocial.overhide.io%2Flogout`);\r\n      await this.domFns.makePopupVisible();  \r\n      this.address = null;\r\n    } else if ('provider' in credentials) {\r\n      this.social = credentials.provider;\r\n      await this.sign(`setting credentials on ${new Date()}`);      \r\n    } else {\r\n      throw new Error(\"Incorrect credentials options.\");\r\n    }\r\n    this.fire('onCredentialsUpdate', { imparterTag: ohledger_social.tag, address: this.address });\r\n    return true;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\":this.address};\r\n  }\r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    ohledger_fns.setNetwork_check_details(details);\r\n\r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: ohledger_social.tag, currency: 'USD', mode: details.mode, uri: this.overhide_wallet.remuneration_uri[details.mode]});\r\n    return true;\r\n  }  \r\n\r\n  getNetwork() {\r\n    return { \"currency\": \"USD\", \"mode\": this.mode, \"uri\": this.overhide_wallet.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.overhide_wallet.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    return dollarAmount * 100;\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly, tallyDollars) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, tallyDollars, date, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    try {\r\n      const res = this.eth_accounts.create();\r\n      const karnet = res.privateKey;\r\n      this.domFns.hideAllPopupContents();\r\n      this.domFns.setFrame(`https://social.overhide.io/pending`, 30, 10);\r\n      const popupPromise = this.domFns.makePopupVisible();     \r\n      window.open(\r\n        `https://overhide.b2clogin.com/overhide.onmicrosoft.com/B2C_1_${this.social}/oauth2/v2.0/authorize?client_id=aa71ffc7-2884-4045-898f-7db3a177c1a1&response_type=code&redirect_uri=https%3A%2F%2Fsocial.overhide.io%2Fredirect/${this.social}&response_mode=query&scope=aa71ffc7-2884-4045-898f-7db3a177c1a1&state=${karnet}`,\r\n        '_blank',\r\n        {height: 300, width: 300}\r\n      );\r\n      await popupPromise;\r\n      return await this.__fetch(`https://social.overhide.io/sign?karnet=${karnet}&message=${btoa(message)}`, {\r\n        method: \"GET\",\r\n        headers: { \r\n          'Content-Type': 'application/json; charset=utf-8',\r\n          'Authorization': `Bearer ${this.getToken()}`\r\n        }})\r\n      .then(async (result) => {\r\n        if (result.status == 200) {\r\n          const resultValue = await result.json();\r\n          this.address = resultValue.address;\r\n          return atob(resultValue.signature);\r\n        } else {\r\n          throw new Error(await result.text());\r\n        }\r\n      });\r\n    } catch(e) {\r\n      throw String(e)\r\n    }  \r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    await ohledger_fns.createTransaction(\r\n      amount, \r\n      from,\r\n      to,\r\n      (message) => this.sign(message),\r\n      (from, signature, message) => this.overhide_wallet.showOhLedgerGratisIframeUri(uri, from, signature, message), \r\n      this.overhide_wallet.oh_ledger_transact_fn[this.mode], \r\n      options);\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default ohledger_social;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","// A modal to display iframes and forms on behalf of the library.\r\nclass dom_fns {\r\n  resolve = null;\r\n  reject = null;\r\n\r\n  constructor() {\r\n    window.addEventListener('message', (e) => {\r\n      if (!e.data || !e.data.event) return;\r\n      switch(e.data.event) {\r\n        case 'oh$-popup-close':\r\n          this.makePopupHidden('user close', true);\r\n          break;\r\n      }\r\n    });    \r\n  }\r\n\r\n  // initialize this after all dependencies wired up\r\n  init() {\r\n    this.createPopup();\r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  raiseEventClick(imparterTag, triggerFor) {\r\n    window.parent.postMessage({event: 'oh$-event', detail: JSON.stringify({\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor,\r\n      click: true\r\n    })});\r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  raiseEvent(imparterTag, triggerFor, data) {\r\n    window.parent.postMessage({event: 'oh$-event', detail: JSON.stringify({\r\n      ...data,\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor\r\n    })});    \r\n  }\r\n\r\n  // promise used for popups and resolutions via oh-ledger-* messages.\r\n  setupNewPromise() {\r\n    console.assert(!this.resolve, 'oh-popup promise being set but already set when calling setupNewPromise(..)');\r\n    return new Promise((rs, rj) => {\r\n      this.resolve = rs;\r\n      this.reject = rj;\r\n    });    \r\n  }\r\n\r\n  // Setup the iframe source\r\n  setFrame(src, widthEm=80, heightEm=60) {\r\n    const frame = document.getElementById('oh-ledger-iframe');\r\n    frame.setAttribute('src', src);\r\n    frame.style.display='block';    \r\n    const container = document.getElementById('oh-popup-container-div');\r\n    container.style.width=`${widthEm}em`;\r\n    container.style.height=`${heightEm}em`;\r\n  }\r\n\r\n  // make popup visible to be hidden with makePopupHidden\r\n  makePopupVisible() {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    popup.style.display='block';\r\n    return this.setupNewPromise();\r\n  }\r\n\r\n  makePopupHidden(params, isError) {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    this.hideAllPopupContents();\r\n    popup.style.display='none';\r\n    console.assert(this.resolve, 'oh-popup promise not set yet calling makePopupHidden(..)');\r\n    if (isError) this.reject(params)\r\n    else this.resolve(params);\r\n    this.resolve = null;\r\n    this.reject = null;\r\n  }\r\n\r\n  hideAllPopupContents() {\r\n    document.getElementById('oh-ledger-iframe').style.display='none';\r\n  }\r\n\r\n  createPopup() {\r\n    var popup = document.createElement('div');\r\n    popup.setAttribute('id','oh-popup-container');\r\n    popup.style.display='none';\r\n    popup.innerHTML = `\r\n      <div id=\"oh-popup-container-div\">\r\n        <a href=\"#\" title=\"Close\" id=\"oh-popup-close\" onclick=\"window.parent.postMessage({event: 'oh$-popup-close'}); return false;\">X</a>\r\n        <iframe id=\"oh-ledger-iframe\"></iframe>\r\n      </div>\r\n    `;\r\n    var style = document.createElement('style');\r\n    style.innerHTML =`\r\n      #oh-popup-container {\r\n          position: fixed;\r\n          font-family: arial, \"lucida console\", sans-serif;\r\n          top: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: rgba(0, 0, 0, 0.8);\r\n          z-index: 999;\r\n          opacity:1;\r\n          pointer-events: auto;\r\n      }\r\n      #oh-popup-container-div {\r\n          max-width: 80vw;\r\n          max-height: 75vh;\r\n          position: relative;\r\n          top: 15vh;\r\n          margin: auto auto;\r\n          padding: 5px 5px 5px 5px;\r\n          background: white;\r\n      }\r\n      #oh-popup-close {\r\n          background: grey;\r\n          color: white;\r\n          line-height: 25px;\r\n          position: absolute;\r\n          right: 2px;\r\n          text-align: center;\r\n          top: 2px;\r\n          width: 24px;\r\n          text-decoration: none;\r\n          font-weight: bold;\r\n      }\r\n      #oh-popup-close:hover {\r\n          background: black;\r\n      }\r\n\r\n      #oh-ledger-iframe {\r\n        display: none;\r\n        border: 0;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `;\r\n    var attach = () => {\r\n      if (document.body) {\r\n        document.body.appendChild(popup);\r\n        document.body.appendChild(style);\r\n      } else {\r\n        setTimeout(attach, 100);\r\n      };\r\n    };\r\n    attach();\r\n  }  \r\n}\r\n\r\nexport default dom_fns;","import Web3 from 'web3';\r\nimport eth_web3 from '../imparters/eth-web3.js';\r\nimport ohledger_web3 from '../imparters/ohledger-web3.js';\r\n\r\nconst WALLET_CHECK_INTERVAL_MS = 500;\r\n\r\nclass web3_wallet {\r\n  eth_accounts = (new Web3('http://localhost:8545')).eth.accounts;\r\n  walletAddress = null;\r\n  network = null;\r\n\r\n  networkChangeDelegates = [];\r\n\r\n  constructor(addTag, removeTag, fire) {\r\n    this.addTag = addTag;\r\n    this.removeTag = removeTag;\r\n    this.fire = fire;\r\n  }\r\n\r\n  // initialize this after all dependencies wired up\r\n  init() {\r\n    this.detectWeb3Wallet();\r\n  }\r\n\r\n  /**\r\n   * Setup window.web3 to be the wallet's if available or offline if not (just for signing).\r\n   * \r\n   * Sets up a timer to check for wallet being logged in and address changes.\r\n   * \r\n   * @ignore\r\n   */\r\n  detectWeb3Wallet() {    \r\n    if (!window.ethereum) return;\r\n \r\n    // Modern dapp browsers...\r\n    (async () => {\r\n      try {\r\n        await window.ethereum.enable();\r\n        window.web3 = new Web3(window.ethereum);\r\n      } catch (e) {/*noop*/ }\r\n\r\n      await detectWalletCb();\r\n\r\n      setInterval(async function () {\r\n        await detectWalletCb();\r\n      }, WALLET_CHECK_INTERVAL_MS);\r\n    })();\r\n\r\n    var detectWalletCb = async () => {\r\n      try {\r\n        var currentAccounts = await window.web3.eth.getAccounts();\r\n        var currentAddress = (currentAccounts && currentAccounts.length > 0) ? currentAccounts[0] : null;\r\n        var currentNetwork = (await window.web3.eth.net.getNetworkType());\r\n      } catch (e) {/*noop*/}\r\n      if (currentNetwork !== this.network) {\r\n        this.network = currentNetwork;\r\n        this.networkChangeDelegates.forEach(d => d(this.network));        \r\n      }\r\n      if (currentAddress !== this.walletAddress) {\r\n        if (currentAddress) { /* add imparters */\r\n          this.addTag(eth_web3.tag);\r\n          this.addTag(ohledger_web3.tag);\r\n        } else { /* remove imparters */\r\n          this.removeTag(eth_web3.tag);\r\n          this.removeTag(ohledger_web3.tag);\r\n        } \r\n        this.walletAddress = currentAddress;\r\n        this.fire('onWalletChange', { imparterTag: eth_web3.tag, isPresent: !!currentAddress });\r\n        this.fire('onWalletChange', { imparterTag: ohledger_web3.tag, isPresent: !!currentAddress });\r\n        if (currentAddress) {\r\n          this.fire('onCredentialsUpdate', { imparterTag: eth_web3.tag, address: currentAddress });\r\n          this.fire('onCredentialsUpdate', { imparterTag: ohledger_web3.tag, address: currentAddress });\r\n        }\r\n      }\r\n    }\r\n  } \r\n}\r\n\r\nexport default web3_wallet;","class overhide_wallet {\r\n  oh_ledger_transact_fn = {\r\n    'prod': null,\r\n    'test': null\r\n  };\r\n\r\n  remuneration_uri = {\r\n    'prod': 'https://ledger.overhide.io/v1',\r\n    'test': 'https://test.ledger.overhide.io/v1'\r\n  }\r\n\r\n  constructor(domFns) {\r\n    this.domFns = domFns;\r\n\r\n    window.addEventListener('message', (e) => {\r\n      if (e.data && e.data.event === 'oh-ledger-ok') {\r\n        this.domFns.makePopupHidden(e.data.detail);\r\n      } else if (e.data && e.data.event === 'oh-ledger-error') {\r\n        this.domFns.makePopupHidden(e.data.detail, true);\r\n      }\r\n    }, false);\r\n  }\r\n\r\n  // initialize this after all dependencies wired up\r\n  init() {\r\n    this.attach();\r\n  }\r\n  \r\n  attach = () => {\r\n    if (document.body) {\r\n      this.loadOhLedgerTransactFns();\r\n    } else {\r\n      setTimeout(this.attach, 100);\r\n    };\r\n  };\r\n\r\n  async showOhLedgerGratisIframeUri(uri, from, signature, message) {\r\n    this.domFns.hideAllPopupContents();\r\n    this.domFns.setFrame(`${uri}/gratis.html?address=${from}&signature=${signature}&message=${message}`);\r\n    await this.domFns.makePopupVisible();\r\n  }\r\n\r\n  // https://stackoverflow.com/a/31374433\r\n  loadJS(url, implementationCode, location) {\r\n    //url is URL of external file, implementationCode is the code\r\n    //to be called from the file, location is the location to \r\n    //insert the <script> element\r\n\r\n    var scriptTag = document.createElement('script');\r\n    scriptTag.src = url;\r\n\r\n    scriptTag.onload = implementationCode;\r\n    scriptTag.onreadystatechange = implementationCode;\r\n\r\n    location.appendChild(scriptTag);\r\n  };\r\n\r\n  loadOhLedgerTransactFns() {\r\n    // load prod ohledger transact fn\r\n    this.loadJS(`${this.remuneration_uri.prod}/transact.js`, () => {\r\n      const fn = oh_ledger_transact;\r\n      this.oh_ledger_transact_fn.prod = (...args) => { fn(...args); return this.domFns.setupNewPromise(); }\r\n    }, document.body);\r\n\r\n    // load test ohledger transact fn\r\n    this.loadJS(`${this.remuneration_uri.test}/transact.js`, () => {\r\n      const fn = oh_ledger_transact;\r\n      this.oh_ledger_transact_fn.test = (...args) => { fn(...args); return this.domFns.setupNewPromise(); }\r\n    }, document.body);\r\n  }\r\n}\r\n\r\nexport default overhide_wallet;","import dom_fns from './fns/dom_fns';\r\nimport eth_web3 from './imparters/eth-web3.js';\r\nimport btc_manual from './imparters/btc-manual.js';\r\nimport ohledger_web3 from './imparters/ohledger-web3.js';\r\nimport ohledger from './imparters/ohledger.js';\r\nimport ohledger_social from './imparters/ohledger-social.js';\r\nimport web3_wallet from './wallets/web3_wallet.js';\r\nimport overhide_wallet from './wallets/overhide_wallet.js';\r\n\r\n//     ledgers.js \r\n//     https://ledger.overhide.io\r\n//     (c) 2021 Overhide LLC, Wyoming, USA\r\n//     ledgers.js may be freely distributed under the MIT license.\r\n\r\n/**\r\n * @namespace oh$\r\n * @description \r\n * \r\n * ### REFERENCES\r\n * \r\n * Library code: https://github.com/overhide/ledgers.js/blob/master/dist/ledgers.js.\r\n *\r\n * Repository for this library is https://github.com/overhide/ledgers.js.\r\n * \r\n * The above repository contains a demo app of this library working in conjunction with:\r\n * \r\n * - the *overhide* Ethereum remuneration provider (Rinkeby testnet -- https://rinkeby.ethereum.overhide.io) \r\n * - the *overhide-ledger* (test environment -- https://test.ledger.overhide.io)\r\n * - the *overhide* Bitcoin remuneration provider (testnet -- https://test.bitcoin.overhide.io) \r\n * \r\n * ### ABOUT\r\n * \r\n * JavaScript library to be used in-browser and interrogate *overhide* remuneration providers as to validity\r\n * of ledger credentials and transactions involving these credentials.\r\n * \r\n * The goal of the library and the *overhide* remuneration providers is to ease using of all types of ledgers for\r\n * authentication (I am who I say) and authorization (paid access tiers).\r\n * \r\n * The library leverages injected currency wallets where it can, and exposes functions to work with *loose* currencies \r\n * (without wallets) where it cannot.\r\n * \r\n * The library exports the `oh$` object for use as a module when bundling.\r\n * \r\n * > ---\r\n * > ```\r\n * > import oh$ from \"ledgers.js\";\r\n * > oh$.enable(token);\r\n * > oh$.addEventListener('onWalletChange', (e) => {...});\r\n * > ```\r\n * > ---\r\n * \r\n * > APIs abstracted by *ledgers.js* require a bearer-token.  The `token` (above) is passed in to `enable` the rest of the library's\r\n * > functionality.  `oh$.enable(..)` can be called every so often with a refreshed token.\r\n * >\r\n * >  A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n * >\r\n * > To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n * \r\n * The library can be loaded straight into your HTML (along with pre-requisite `web3.min.js`) and accessed by its `oh$` property from the browser's `window` object:\r\n * \r\n * > ---\r\n * > ```\r\n * > <script \r\n * >    src=\"https://cdnjs.cloudflare.com/ajax/libs/web3/1.3.4/web3.min.js\" \r\n * >    integrity=\"sha512-TTGImODeszogiro9DUvleC9NJVnxO6M0+69nbM3YE9SYcVe4wZp2XYpELtcikuFZO9vjXNPyeoHAhS5DHzX1ZQ==\" \r\n * >    crossorigin=\"anonymous\"></script>\r\n * > <script src=\"./dist/ledgers.js\"></script>\r\n * > <script>\r\n * >   oh$.enable(token);\r\n * >   oh$.addEventListener('onWalletChange', (e) => {...});\r\n * > </script>\r\n * > ```\r\n * > ---\r\n * \r\n * ### IMPARTERS\r\n * \r\n * The library works with a concept of *imprater* tags.  Wallets impart credentials, signatures, and transactions.  For\r\n * *loose change*--where no wallet exists--the library can be interrogated as to which entities should be set by the \r\n * user (can* functions); causing the entities to be imparted back to the user in a common code flow.  \r\n * \r\n * The imparter tags are a simple naming convention.  For example if multiple Ethereum wallet APIs were imparting data \r\n * they  would be individually tagged with a prefix \"eth\" and a dashed suffix.  No suffix indicates a *loose change*\r\n * imparter:\r\n * \r\n * - eth-web3\r\n * - eth-?\r\n * \r\n * Similarly for *overhide-ledger*, the prefix is \"ohledger\", the suffix won't be attached on the *loose change* version \r\n * and will be suffixed on the *web3* walleted version:\r\n * \r\n * - ohledger\r\n * - ohledger-web3\r\n * - ohledger-social\r\n * \r\n * The *ohledger-social* imparter is to use the *overhide-ledger* with credentials stored online behind a Microsoft or\r\n * Google social login.  The *overhide-ledger* credentials are not transferred to the client.  They sit in the cloud and\r\n * are used once a social provider allows it.\r\n * \r\n * Thus far Bitcoin is only supported in manual mode (no Bitcoin wallet injection into target site):\r\n * \r\n * - btc-manual\r\n * \r\n * The following sections cover special notes on each imparter.  The library adheres to these notes.\r\n * \r\n * #### eth-web3\r\n * \r\n * > Ethereum addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * > \r\n * > Ethereum secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * > \r\n * > Ethereum networks names/modes are:\r\n * >\r\n * >> | name | mode | notes |\r\n * >> | --- | --- | --- |\r\n * >> | main | prod | |\r\n * >> | rinkeyby | test | |\r\n * >> | kovan | test | not supported |\r\n * >> | ropsten | test | not supported |\r\n * >> | goerli | test | not supported |\r\n * >\r\n * > The denomination for amounts is the Wei\r\n * \r\n * #### ohledger, ohledger-web3, ohledger-social\r\n * \r\n * > Addresses and secret keys use Ethereum format.\r\n * >\r\n * > Addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * > \r\n * > Secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * >\r\n * > Network tuples consist of a 'currency' as a three letter ISO fiat currency code and a 'mode'.  The supported\r\n * > 'currency' names are:\r\n * > \r\n * > * 'USD'\r\n * > \r\n * > The denominations are:\r\n * > \r\n * >> | Currency | denomination |\r\n * >> | --- | --- |\r\n * >> | USD | cents |\r\n * > \r\n * > Note: at this point only USD are supported.  If there is a need, and *overhide-ledger* instances in currencies\r\n * > other than USD come online, we'll revisit this.\r\n * >\r\n * > An 'ohledger' mode is one of 'prod' or 'test'\r\n * \r\n * #### btc-manual\r\n * \r\n * > Addresses use Bitcoin format.\r\n * > \r\n * > Bitcoin network modes are:\r\n * > \r\n * > * prod -- for mainnet\r\n * > * test -- for testnet\r\n * > \r\n * > The denomination for amounts is the Satoshi.\r\n * \r\n */\r\nconst oh$ = (function() {\r\n\r\n  var root = typeof self == 'object' && self.self === self && self ||\r\n    typeof global == 'object' && global.global === global && global ||\r\n    this ||\r\n    {};\r\n\r\n  root.oh$ = new class extends EventTarget {\r\n    /**\r\n     * @event onWalletChange\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..,isPresent:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *isPresent* - if wallet is present for imparter\r\n     *\r\n     * @description\r\n     *   Event called when wallets' state changes.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletChange', (e) => console.log(`wallet for ${e.imparterTag} is available:${e.isPresent}`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onWalletPopup\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the pop-up\r\n     *\r\n     * @description\r\n     *   Event called when wallet is expected to popup.  Useful in case user wants to react to popup in UI.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletPopup', (e) => console.log(`wallet for ${e.imparterTag} popped`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onCredentialsUpdate\r\n     * @description\r\n     *   Event called when an credentials change for one of the tracked imparters.\r\n     * \r\n     *   Only called when credentials are valid as per imparter: ready to be used for signing, transacting.\r\n     *\r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onCredentialsUpdate', (e) => {\r\n     *     console.log(`new address for ${e.imparterTag} is:${e.address}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     * \r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,address:..}` |\r\n     *  > | ohledger | `{imparterTag:..,address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,address:..}` |\r\n     *  > | ohledger-social | `{imparterTag:..,address:..}` |\r\n     *  > | btc-manual | `{imparterTag:..,address:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *address* - ledger public address of credential set for imparter\r\n     *  >\r\n     *  > *secret* - ledger PKI private secret for credential set for imparter\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @event onNetworkChange\r\n     * @description\r\n     *   Event called when the network changes for a particular imparter tag.\r\n     * \r\n     *   For example for \"eth\" the network could changed from \"main\" to \"rinkeby\".  \r\n     * \r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onNetworkChange', (e) => {\r\n     *     if (e.imparterTag === 'eth-web3') console.log(`new network selected for ${e.imparterTag} is:${e.name}`);\r\n     *     if (e.imparterTag === /ohledger/.test(e.imparterTag)) console.log(`working in currency: ${e.currency}`);\r\n     *     if (e.imparterTag === 'btc-manual') console.log(`new network mode selected for ${e.imparterTag} is:${e.name}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new credentials object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,name:('main'|'rinkeby'|'kovan')..,mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | btc-manual | `{imparterTag:..,mode:('prod'|'test'), uri:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *name* - of network\r\n     *  >\r\n     *  > *currency* - represented by network\r\n     *  >\r\n     *  > *mode* - production or test network\r\n     *  >\r\n     *  > *uri* - remuneration API URI for network\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function enable\r\n     * @description\r\n     *   Enable `oh$` by instrumenting with token for ledger access.\r\n     * \r\n     *   `oh$` calls may stall while waiting for this call to complete successfully.\r\n     * \r\n     *   A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n     * \r\n     *   To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n     * @param {string} token\r\n     */\r\n    enable = enable;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getImparterTags\r\n     * @description\r\n     *   Retrieves all imparter tags injected by wallets and statically available from the library.\r\n     * @returns {Array} of strings: the imparter tags available\r\n     */\r\n    getImparterTags = getImparterTags;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canSetCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials set by the user: or does the wallet control it\r\n     *   exclusively.\r\n     * \r\n     *   Only the following imparter(s) will return 'true':\r\n     * \r\n     *   - ohledger\r\n     *   - btc-manual\r\n     * \r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials set.\r\n     */\r\n    canSetCredentials = canSetCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canGenerateCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials generated by the user: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials generated.\r\n     */\r\n    canGenerateCredentials = canGenerateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canChangeNetwork\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have network changed by the user via oh$: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *   - ohledger-web3\r\n     *   - btc-manual\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have networks changed via oh$.\r\n     */\r\n    canChangeNetwork = canChangeNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function generateCredentials\r\n     * @description\r\n     *   For imparters that can have credentials generated, generates them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     * @param {string} imparterTag\r\n     * @param {Object} options - imparter specific generation options, if any.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | not supported |\r\n     *  > | ohledger | null | |\r\n     *  > | ohledger-web3 | N/A | not supported |\r\n     *  > | btc-manual | N/A | not supported |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n\r\n     */\r\n    generateCredentials = generateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setCredentials\r\n     * @description\r\n     *   For imparters that can have credentials set, sets them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} credentials - credentials object of imparter specific parameters to set\r\n     * \r\n     *  > The credentials objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | not suppoted |\r\n     *  > | ohledger | `{address:..,secret:..}` | `address` is optional, if not set will be extracted from `secret` |\r\n     *  > | ohledger-web3 | N/A | not supported |\r\n     *  > | ohledger-social | `{provider:..}` | `provider` is one of 'google' or 'microsoft'; if null, log-out |\r\n     *  > | btc-manual | `{address:..}` | |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     */\r\n    setCredentials = setCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setNetwork\r\n     * @description\r\n     *   For imparters that can have networks changed via oh$, changes it.  \r\n     * \r\n     *   Fires [onNetworkChange](#eventonnetworkchange) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} details - network details object of imparter specific parameters to set.\r\n     * \r\n     *  > The network details objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | network details object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | not supported, change in wallet |\r\n     *  > | ohledger | `{currency:'USD', mode:'prod'|'test'}` | |\r\n     *  > | ohledger-web3 | `{currency:'USD', mode:'prod'|'test'}` | |\r\n     *  > | btc-manual | `{mode:'prod'|'test'}` | |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onNetworkChange](#eventonnetworkchange) event against `oh$`\r\n     */\r\n    setNetwork = setNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getOverhideRemunerationAPIUri\r\n     * @description\r\n     *   Based on current network set returns the *overhide* remuneration API URI configured in the library.\r\n     * @param {string} imparterTag\r\n     * @returns {string} the URI.\r\n     */\r\n    getOverhideRemunerationAPIUri = getOverhideRemunerationAPIUri;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getCredentials\r\n     * @description\r\n     *   Retrieves current credentials for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current credentials, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | ohledger-social | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     */\r\n    getCredentials = getCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getNetwork\r\n     * @description\r\n     *   Retrieves current network for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current network, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | network details object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{name:('main'|'rinkeby'|'kovan').., mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | btc-manual | `{mode:('prod'|'test'), uri:..}` |\r\n     */\r\n    getNetwork = getNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getFromDollars\r\n     * @description\r\n     *   Retrieve a (highest) converted amount in imparter specific denomination from a provided dollar amount at a very recent exchange rate.\r\n     * @param {string} imparterTag\r\n     * @param {number} dollarAmount - the dollar amount.\r\n     * @returns {Promise} with the value in imparter specific currency at the present time (based on recent exchange rate).\r\n     */\r\n     getFromDollars = getFromDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTallyDollars\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range--converted to a US dollar amount.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the `{'tally':.., 'as-of':..}` object, whereby the 'tally' value is in US dollars: all transactions \r\n     *   are exchanged to USD at an approximate (highest) exchange rate close to the transactions' time.  The 'as-of' timestamp \r\n     *   is that of the call (pass this to back-end to retrieve cached values at better API call rates).\r\n     */\r\n     getTallyDollars = getTallyDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTally\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the `{'tally':.., 'as-of':..}` object, whereby the tally value is in imparter specific currency.\r\n     *   The 'as-of' timestamp is that of the call (pass this to back-end to retrieve cached values at better API call rates).\r\n     */\r\n    getTally = getTally;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTransactions\r\n     * @description\r\n     *   Retrieve transactions on the imparter's ledger, perhaps within a date range, from credentials set against \r\n     *   imparter to a recipient\r\n     * @param {string} imparterTag\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *  > | btc-manual | `{address:..}` |\r\n     *\r\n     * @returns {Promise} with the `{'transactions': [{\"transaction-value\":..,\"transaction-date\":..},..], 'as-of':..}` object, \r\n     *   whereby 'transactions' is the list of transactions and 'as-of' is the timestamp of the call.\r\n     */\r\n    getTransactions = getTransactions;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function isOnLedger\r\n     * @description\r\n     *   Determine if current credentials have some transaction on the imparter's ledger: transaction can be to anyone.\r\n     * \r\n     *   Intent is to validate beyond just a valid address.  To validate the address has been used.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @returns {Promise} with 'true' or 'false'; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    isOnLedger = isOnLedger;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function sign\r\n     * @description\r\n     *   Sign using the provided message using the credentials set against the specific imparter.\r\n     * \r\n     *   Note: wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {string} message - to sign\r\n     * @returns {Promise} with the signature; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    sign = sign;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function createTransaction\r\n     * @description\r\n     *   Create a transaction on the imparter's ledger.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`; wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * @param {string} imparterTag\r\n     * @param {number} amount\r\n     * @param {string} to - address of recipient\r\n     * \r\n     *  > $0 (*amount*) transactions against *ohledger* or *ohledger-web* *imparters* use the current credential \r\n     *  > as the *to* address, not the specified *to* address.\r\n     *  \r\n     * @param {Object} options - other options required for the specific imparter.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  > \r\n     *  > | imparter tag | credentials object | \r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | null |\r\n     *  > | ohledger | {message:.., signature:..} |\r\n     *  > | ohledger-web3 | {message:.., signature:..} |\r\n     *  > | ohledger-social | {message:.., signature:..} |\r\n     *  > | btc-manual | null |\r\n     *  > \r\n     *  > If *message* and *signature* are provided they are used instead of oh$ asking for wallet to resign message.\r\n     *\r\n     * @returns {Promise} of a 'true' for success or an Error; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    createTransaction = createTransaction;\r\n  }();\r\n\r\n  var doEnable = null;\r\n  const isEnabled = new Promise((resolve) => doEnable = resolve);\r\n  var token = null;\r\n  var __fetch = null;\r\n  var imparterTags = [ohledger.tag, ohledger_social.tag, btc_manual.tag];\r\n\r\n  /**\r\n   * Function to fire events.\r\n   * \r\n   * @param {string} which - event name to fire\r\n   * @param {Object} params - to copy to event\r\n   */\r\n  function fire(which, params) {\r\n    let event = document.createEvent(\"Event\");\r\n    event.initEvent(which, true, true);\r\n    for (var param in params) {\r\n      event[param] = params[param];\r\n    }\r\n    oh$.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * @param {string} tag -- to add to `imparterTags` if not in `imparterTags`\r\n   */\r\n  function addTag(tag) {\r\n    let imparterTagIndex = imparterTags.findIndex(v => v === tag);\r\n    if (imparterTagIndex == -1) imparterTags.push(tag);\r\n  }\r\n\r\n  /**\r\n   * @param {string} tag -- to remove from `imparterTags` if in `imparterTags`\r\n   */\r\n   function removeTag(tag) {\r\n    let imparterTagIndex = imparterTags.findIndex(v => v === tag);\r\n    if (imparterTagIndex > -1) imparterTags.splice(imparterTagIndex, 1);\r\n  }\r\n\r\n  const domFns = new dom_fns();\r\n  const web3Wallet = new web3_wallet(\r\n      (tag) => addTag(tag), \r\n      (tag) => removeTag(tag),\r\n      (which, params) => fire(which, params));\r\n  const overhideWallet = new overhide_wallet(domFns);\r\n\r\n  const imparters = {};\r\n  imparters[eth_web3.tag] = new eth_web3(\r\n    web3Wallet, \r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params));\r\n  imparters[btc_manual.tag] = new btc_manual(\r\n    domFns,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params));\r\n  imparters[ohledger_web3.tag] = new ohledger_web3(\r\n    overhideWallet,\r\n    web3Wallet,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params)\r\n  );\r\n  imparters[ohledger.tag] = new ohledger(\r\n    overhideWallet,\r\n    web3Wallet,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params)\r\n  );\r\n  imparters[ohledger_social.tag] = new ohledger_social(\r\n    domFns,\r\n    overhideWallet,\r\n    web3Wallet,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params)\r\n  );\r\n\r\n  domFns.init();\r\n  web3Wallet.init();\r\n  overhideWallet.init();\r\n\r\n  function enable(_token, {fetcher} = {fetcher: fetch}) {\r\n    token = _token;\r\n    __fetch = fetcher;\r\n    doEnable(true);\r\n  }\r\n\r\n  function getImparterTags() {\r\n    return imparterTags;\r\n  }\r\n\r\n  function canSetCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canSetCredentials();\r\n  }\r\n\r\n  function canGenerateCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canGenerateCredentials();\r\n  }\r\n\r\n  function canChangeNetwork(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canChangeNetwork();\r\n  }\r\n\r\n  async function setCredentials(imparterTag, credentials) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].setCredentials(credentials);\r\n  }\r\n\r\n  function getCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getCredentials();\r\n  }\r\n\r\n  async function generateCredentials(imparterTag, options) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].generateCredentials(options);\r\n  }\r\n\r\n  async function setNetwork(imparterTag, details) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].setNetwork(details);\r\n  }\r\n\r\n  function getNetwork(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getNetwork();    \r\n  }\r\n\r\n  function getOverhideRemunerationAPIUri(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getOverhideRemunerationAPIUri();    \r\n  }\r\n\r\n  async function getFromDollars(imparterTag, dollarAmount) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].getFromDollars(dollarAmount);\r\n  }\r\n\r\n  async function getTallyDollars(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, true, true));\r\n  }\r\n\r\n  async function getTally(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, true, false));\r\n  }\r\n\r\n  async function getTransactions(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, false, false));\r\n  }\r\n\r\n  async function getTxs(imparterTag, recipient, date, tallyOnly, tallyDollars) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].getTxs(recipient, date, tallyOnly, tallyDollars);\r\n  }\r\n\r\n  async function isOnLedger(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].isOnLedger();\r\n  }\r\n\r\n  async function sign(imparterTag, message) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].sign(message);\r\n  }\r\n\r\n  async function createTransaction(imparterTag, amount, to, options) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].createTransaction(amount, to, options);\r\n  }\r\n\r\n  return root.oh$;\r\n})();\r\n\r\nexport default oh$;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}