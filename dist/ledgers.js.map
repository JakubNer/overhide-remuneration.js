{"version":3,"sources":["webpack://__oh$__/webpack/universalModuleDefinition","webpack://__oh$__/webpack/bootstrap","webpack://__oh$__/./src/fns/imparter_fns.js","webpack://__oh$__/./src/imparters/eth-web3.js","webpack://__oh$__/./src/imparters/ohledger-web3.js","webpack://__oh$__/./src/fns/ohledger_fns.js","webpack://__oh$__/./src/imparters/ohledger.js","webpack://__oh$__/external {\"commonjs\":\"web3\",\"commonjs2\":\"web3\",\"amd\":\"web3\",\"root\":\"Web3\"}","webpack://__oh$__/./src/wallets/web3_wallet.js","webpack://__oh$__/./src/wallets/overhide_wallet.js","webpack://__oh$__/./src/ledgers.js","webpack://__oh$__/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","imparter_fns","recipient","date","Date","Error","address","_callee","uri","from","to","tallyOnly","token","__fetch","since","regeneratorRuntime","wrap","_context","prev","next","concat","toISOString","headers","Headers","Authorization","then","res","json","e","String","abrupt","sent","stop","_callee2","signature","message","_context2","method","Content-Type","body","JSON","stringify","btoa","result","status","eth_web3","web3_wallet","getToken","fire","_this","this","_classCallCheck","_defineProperty","main","rinkeby","eth_accounts","networkChangeDelegates","push","network","onNetworkChange","imparterTag","tag","remuneration_uri","credentials","walletAddress","options","details","dollarAmount","hostPrefix","now","length","minrate","txs","values","tally","getTxs","transactions","map","join","text","Math","round","toFixed","_callee3","_context3","getTxs_check_details","getOverhideRemunerationAPIUri","getTxs_retrieve","_callee4","_context4","sign","isSignatureValid_call","_callee5","_context5","web3","eth","personal","_callee6","amount","_context6","Promise","resolve","reject","sendTransaction","on","confirmationNumber","receipt","error","ohledger_web3","overhide_wallet","ohledger_fns","setNetwork_check_details","currency","createTransaction","showOhLedgerGratisIframeUri","oh_ledger_transact_fn","toUpperCase","toLowerCase","signFn","showGratisFn","ohLedgerTransactFn","toLocaleString","ohledger","privateKeyToAccount","secret","recover","err","privateKey","addTag","removeTag","Web3","accounts","ethereum","_asyncToGenerator","mark","enable","t0","detectWalletCb","setInterval","_ref3","currentAccounts","currentAddress","currentNetwork","getAccounts","net","getNetworkType","forEach","isPresent","apply","arguments","prod","test","addEventListener","data","event","makePopupHidden","detail","document","triggerFor","parent","dispatchEvent","CustomEvent","click","_objectSpread","_this2","console","assert","rs","rj","getElementById","style","display","setupNewPromise","params","isError","popup","hideAllPopupContents","frame","setAttribute","makePopupVisible","_this3","createElement","innerHTML","attach","appendChild","loadOhLedgerTransactFns","setTimeout","url","implementationCode","location","scriptTag","src","onload","onreadystatechange","_this4","loadJS","oh_ledger_transact","oh$","self","_typeof","global","_EventTarget","_inherits","_class2","_wrapNativeSuper","EventTarget","_super","_createSuper","_len","args","Array","_key","_assertThisInitialized","getImparterTags","canSetCredentials","canGenerateCredentials","canChangeNetwork","generateCredentials","setCredentials","setNetwork","getCredentials","getNetwork","getFromDollars","getTallyDollars","getTally","getTransactions","isOnLedger","doEnable","isEnabled","imparterTags","which","createEvent","param","initEvent","web3Wallet","findIndex","v","imparterTagIndex","splice","overhideWallet","imparters","_token","fetcher","undefined","fetch","_x","_x2","_setCredentials","_x3","_x4","_generateCredentials","_x5","_x6","_setNetwork","_x7","_x8","_getFromDollars","_x9","_x10","_x11","_getTallyDollars","_x12","_x13","_x14","_getTally","_x15","_x16","_x17","_getTransactions","_callee7","_context7","_x18","_x19","_x20","_x21","_getTxs","_callee8","_context8","_x22","_isOnLedger","_callee9","_context9","_x23","_x24","_sign","_callee10","_context10","_x25","_x26","_x27","_x28","_createTransaction","_callee11","_context11","createPopup","detectWeb3Wallet","g","Function"],"mappings":"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","file":"ledgers.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"web3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"__oh$__\", [\"web3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"__oh$__\"] = factory(require(\"web3\"));\n\telse\n\t\troot[\"__oh$__\"] = factory(root[\"Web3\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","class imparter_fns {\r\n  static getTxs_check_details(recipient, date) {\r\n    if (date && !(date instanceof Date)) throw new Error(\"'date' must be a Date is passed in\");\r\n    if (!('address' in recipient) || !recipient.address) throw new Error(\"'address' required in recipient\");  }\r\n\r\n  static async getTxs_retrieve(uri, from, to, tallyOnly, date, token, __fetch) {\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    let since = '';\r\n    if (date) {\r\n      since = `&since=${date.toISOString()}`;\r\n    }\r\n    return await __fetch(`${uri}/get-transactions/${from}/${to}?tally-only=${tallyOnly ? 'true' : 'false'}${since}&include-refunds=true`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${token}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });    \r\n  }\r\n\r\n  static async isSignatureValid_call(uri, signature, message, from, token, __fetch) {\r\n    return await __fetch(`${uri}/is-signature-valid`, {\r\n      method: \"POST\",\r\n      headers: { \r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        signature: btoa(signature),\r\n        message: btoa(message),\r\n        address: from\r\n      })\r\n    })\r\n      .then((result) => {\r\n        if (result.status == 200) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n  }\r\n}\r\n\r\nexport default imparter_fns;","import imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass eth_web3 {\r\n  static tag = 'eth-web3';\r\n\r\n  remuneration_uri = {\r\n    'main':'https://ethereum.overhide.io',\r\n    'rinkeby':'https://rinkeby.ethereum.overhide.io'\r\n  };\r\n\r\n  constructor(web3_wallet, getToken, __fetch, fire) {\r\n    this.web3_wallet = web3_wallet;\r\n    this.eth_accounts = web3_wallet.eth_accounts;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n\r\n    web3_wallet.networkChangeDelegates.push((network) => this.onNetworkChange(network));\r\n  }\r\n\r\n  onNetworkChange(network) {\r\n    this.fire('onNetworkChange',{imparterTag: eth_web3.tag, name: network, uri: this.remuneration_uri[network]});\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return false;\r\n  }\r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }    \r\n\r\n  canChangeNetwork() {\r\n    return false;\r\n  }   \r\n\r\n  setCredentials(credentials) {\r\n    return false;\r\n  }\r\n\r\n  getCredentials() {\r\n    return {\"address\":this.web3_wallet.walletAddress};\r\n  }    \r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }  \r\n\r\n  setNetwork(details) {\r\n    return false;\r\n  }\r\n\r\n  getNetwork() {\r\n    return { \"name\": this.web3_wallet.network, \"uri\": this.remuneration_uri[this.web3_wallet.network]};\r\n  }  \r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    return this.remuneration_uri[this.web3_wallet.network];      \r\n  }  \r\n\r\n  async getFromDollars(dollarAmount) {\r\n    const hostPrefix = this.web3_wallet.network === 'main' ? '' : 'test.';\r\n    const now = (new Date()).toISOString();\r\n    const result = await this.__fetch(`https://${hostPrefix}rates.overhide.io/rates/wei/${now}`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${this.getToken()}`\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n    if (!result || result.length === 0 || ! 'minrate' in result[0] || result[0].minrate === 0) return 0;\r\n    return dollarAmount / result[0].minrate;\r\n  }\r\n\r\n  async getTallyDollars(recipient, date) {\r\n    const txs = (await this.getTxs(recipient, date, false)).transactions;\r\n    if (!txs || txs.length == 0) return 0;\r\n    const values = txs.map(t => `${t['transaction-value']}@${(new Date(t['transaction-date'])).toISOString()}`);        \r\n    const hostPrefix = this.web3_wallet.network === 'main' ? '' : 'test.';\r\n    const now = (new Date()).toISOString();\r\n    var tally = await this.__fetch(`https://${hostPrefix}rates.overhide.io/tallymax/wei/${values.join(',')}`, {\r\n        headers: new Headers({\r\n          'Authorization': `Bearer ${this.getToken()}`\r\n        })\r\n      })\r\n      .then(res => res.text())\r\n      .catch(e => {\r\n        throw String(e)\r\n      });\r\n    return (Math.round(tally * 100) / 100).toFixed(2);\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.web3_wallet.network) throw new Error(\"network must be set in wallet\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    var from = this.web3_wallet.walletAddress;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, date, this.getToken(), this.__fetch);\r\n  }  \r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.web3_wallet.network) throw new Error(\"no network for imparter tag\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.web3_wallet.walletAddress) throw new Error(`imparter ${eth_web3.tag} not active`);\r\n    this.fire('onWalletPopup', {imparterTag: eth_web3.tag});\r\n    return (await window.web3.eth.personal.sign(message, this.web3_wallet.walletAddress, ''));\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.web3_wallet.network) throw new Error(\"no network for imparter tag\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    this.fire('onWalletPopup', {imparterTag: eth_web3.tag});\r\n    await (new Promise((resolve, reject) => {\r\n      window.web3.eth.sendTransaction({ from: from, to: to, value: amount })\r\n      .on('confirmation', function (confirmationNumber, receipt) {\r\n        resolve();\r\n      })\r\n      .on('error', (error) => {\r\n        reject(error);\r\n      }); \r\n    }));\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default eth_web3;","import ohledger_fns from '../fns/ohledger_fns.js';\r\nimport imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass ohledger_web3 {\r\n  static tag = 'ohledger-web3';\r\n\r\n  mode = 'test';\r\n\r\n  constructor(overhide_wallet, web3_wallet, getToken, __fetch, fire) {\r\n    this.web3_wallet = web3_wallet;\r\n    this.overhide_wallet = overhide_wallet;\r\n    this.__fetch = __fetch;\r\n    this.getToken = getToken;\r\n    this.fire = fire;\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return false;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return false;\r\n  }    \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n  \r\n  setCredentials(credentials) {\r\n    return false;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\": this.web3_wallet.walletAddress};\r\n  }  \r\n\r\n  generateCredentials(options) {\r\n    return false;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    ohledger_fns.setNetwork_check_details(details);\r\n\r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: ohledger_web3.tag, currency: 'USD', mode: details.mode, uri: this.overhide_wallet.remuneration_uri[details.mode] });\r\n    return true;\r\n  }\r\n\r\n  getNetwork() {\r\n    return { \"currency\": \"USD\", \"mode\": this.mode, \"uri\": this.overhide_wallet.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.overhide_wallet.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    return dollarAmount * 100;\r\n  }\r\n\r\n  async getTallyDollars(recipient, date) {\r\n    var tally = (await this.getTxs(recipient, date, true)).tally;\r\n    return (tally / 100).toFixed(2);\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    var from = this.web3_wallet.walletAddress;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, date, this.getToken(), this.__fetch);\r\n  }  \r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.web3_wallet.walletAddress) throw new Error(`imparter ${ohledger_web3.tag} not active`);\r\n    this.fire('onWalletPopup', {imparterTag: ohledger_web3.tag});\r\n    return (await window.web3.eth.personal.sign(message, this.web3_wallet.walletAddress, ''));\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.web3_wallet.walletAddress) throw new Error(\"from 'walletAddress' not set: use wallet\");\r\n    const from = this.web3_wallet.walletAddress;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    await ohledger_fns.createTransaction(\r\n      amount, \r\n      from,\r\n      to,\r\n      (message) => this.sign(message),\r\n      (from, signature, message) => this.overhide_wallet.showOhLedgerGratisIframeUri(uri, from, signature, message), \r\n      this.overhide_wallet.oh_ledger_transact_fn[this.mode], \r\n      options);\r\n\r\n    return true;\r\n  }    \r\n}\r\n\r\nexport default ohledger_web3;","class ohledger_fns {\r\n  static setNetwork_check_details(details) {\r\n    if (!('currency' in details)) throw new Error(\"'currency' must be passed in\");\r\n    if (!('mode' in details)) throw new Error(\"'mode' must be passed in\");\r\n    details.currency = details.currency.toUpperCase();\r\n    details.mode = details.mode.toLowerCase();\r\n    if (details.currency !== 'USD') throw new Error(\"'currency' must be 'USD'\");\r\n    if (details.mode !== 'prod' && details.mode !== 'test') throw new Error(\"'mode' must be 'prod' or 'test'\");    \r\n  }\r\n\r\n  static async createTransaction(amount, from, to, signFn, showGratisFn, ohLedgerTransactFn, options) {\r\n    if (amount == 0) {\r\n      if ('message' in options && options.message && 'signature' in options && options.signature) {\r\n        var message = options.message;\r\n        var signature = options.signature;\r\n      } else {\r\n        var message = `verify ownership of address by signing on ${new Date().toLocaleString()}`;\r\n        var signature = await signFn(message);\r\n      }\r\n      await showGratisFn(from, signature, message);\r\n    } else {\r\n      await ohLedgerTransactFn(amount, from, to);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ohledger_fns;","import ohledger_fns from '../fns/ohledger_fns.js';\r\nimport imparter_fns from '../fns/imparter_fns.js';\r\n\r\nclass ohledger {\r\n  static tag = 'ohledger';\r\n\r\n  address = null;\r\n  secret = null;\r\n  mode = 'test';\r\n\r\n  constructor(overhide_wallet, web3_wallet, getToken, __fetch, fire) {\r\n    this.overhide_wallet = overhide_wallet;\r\n    this.eth_accounts = web3_wallet.eth_accounts;\r\n    this.getToken = getToken;\r\n    this.__fetch = __fetch;\r\n    this.fire = fire;\r\n  }\r\n\r\n  canSetCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canGenerateCredentials() {\r\n    return true;\r\n  }  \r\n\r\n  canChangeNetwork() {\r\n    return true;\r\n  }  \r\n\r\n  setCredentials(credentials) {\r\n    if (!('secret' in credentials)) throw new Error(\"'secret' must be passed in\");\r\n    if ('address' in credentials && credentials.address) {\r\n      this.address = credentials.address.toLowerCase();\r\n    } else {\r\n      this.address = this.eth_accounts.privateKeyToAccount(credentials.secret).address.toLowerCase();\r\n    }\r\n    this.secret = credentials.secret;\r\n    try {\r\n      if (!(this.eth_accounts.recover(this.eth_accounts.sign('test message', this.secret)).toLowerCase() == this.address)) {\r\n        throw new Error(\"'secret' not valid for 'address\");\r\n      }\r\n    } catch (err) {\r\n      throw new Error(\"'secret' not valid for 'address\");\r\n    }        \r\n    this.fire('onCredentialsUpdate', { imparterTag: ohledger.tag, address: this.address, secret: this.secret});\r\n    return true;\r\n  }  \r\n\r\n  getCredentials() {\r\n    return {\"address\":this.address, \"secret\":this.secret};\r\n  }\r\n\r\n  generateCredentials(options) {\r\n    const res = this.eth_accounts.create();\r\n    this.address = res.address.toLowerCase();\r\n    this.secret = res.privateKey;\r\n    this.fire('onCredentialsUpdate', { imparterTag: ohledger.tag, address: this.address, secret: this.secret});\r\n    return true;\r\n  }\r\n\r\n  setNetwork(details) {\r\n    ohledger_fns.setNetwork_check_details(details);\r\n\r\n    this.mode = details.mode;\r\n    this.fire('onNetworkChange', { imparterTag: ohledger.tag, currency: 'USD', mode: details.mode, uri: this.overhide_wallet.remuneration_uri[details.mode]});\r\n    return true;\r\n  }  \r\n\r\n  getNetwork() {\r\n    return { \"currency\": \"USD\", \"mode\": this.mode, \"uri\": this.overhide_wallet.remuneration_uri[this.mode]};\r\n  }\r\n\r\n  getOverhideRemunerationAPIUri() {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    return this.overhide_wallet.remuneration_uri[this.mode];\r\n  }\r\n\r\n  async getFromDollars(dollarAmount) {\r\n    return dollarAmount * 100;\r\n  }\r\n\r\n  async getTallyDollars(recipient, date) {\r\n    var tally = (await this.getTxs(recipient, date, true)).tally;\r\n    return (tally / 100).toFixed(2);\r\n  }\r\n\r\n  async getTxs(recipient, date, tallyOnly) {\r\n    imparter_fns.getTxs_check_details(recipient, date);\r\n\r\n    const to = recipient.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n\r\n    return await imparter_fns.getTxs_retrieve(uri, from, to, tallyOnly, date, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async isOnLedger() {\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    if (!uri) throw new Error('no uri for request, unsupported network selected in wallet?');\r\n    const message = 'verify ownership of address by signing';\r\n    const signature = await this.sign(message);\r\n\r\n    return await imparter_fns.isSignatureValid_call(uri, signature, message, from, this.getToken(), this.__fetch);\r\n  }\r\n\r\n  async sign(message) {\r\n    if (!this.secret) throw new Error(`credentials for imparter ${ohledger.tag} not set`);\r\n    return this.eth_accounts.sign(message, this.secret).signature;\r\n  }\r\n\r\n  async createTransaction(amount, to, options) {\r\n    if (!this.mode) throw new Error(\"network 'mode' must be set, use setNetwork\");\r\n    if (!this.address) throw new Error(\"from 'address' not set: use setCredentials\");\r\n    const from = this.address;\r\n    const uri = this.getOverhideRemunerationAPIUri();\r\n\r\n    await ohledger_fns.createTransaction(\r\n      amount, \r\n      from,\r\n      to,\r\n      (message) => this.sign(message),\r\n      (from, signature, message) => this.overhide_wallet.showOhLedgerGratisIframeUri(uri, from, signature, message), \r\n      this.overhide_wallet.oh_ledger_transact_fn[this.mode], \r\n      options);\r\n\r\n    return true;\r\n  }  \r\n}\r\n\r\nexport default ohledger;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import Web3 from 'web3';\r\nimport eth_web3 from '../imparters/eth-web3.js';\r\nimport ohledger_web3 from '../imparters/ohledger-web3.js';\r\n\r\nconst WALLET_CHECK_INTERVAL_MS = 500;\r\n\r\nclass web3_wallet {\r\n  eth_accounts = (new Web3('http://localhost:8545')).eth.accounts;\r\n  walletAddress = null;\r\n  network = null;\r\n\r\n  networkChangeDelegates = [];\r\n\r\n  constructor(addTag, removeTag, fire) {\r\n    this.addTag = addTag;\r\n    this.removeTag = removeTag;\r\n    this.fire = fire;\r\n  }\r\n\r\n  /**\r\n   * Setup window.web3 to be the wallet's if available or offline if not (just for signing).\r\n   * \r\n   * Sets up a timer to check for wallet being logged in and address changes.\r\n   * \r\n   * @ignore\r\n   */\r\n  detectWeb3Wallet() {    \r\n    if (!window.ethereum) return;\r\n \r\n    // Modern dapp browsers...\r\n    (async () => {\r\n      try {\r\n        await window.ethereum.enable();\r\n        window.web3 = new Web3(window.ethereum);\r\n      } catch (e) {/*noop*/ }\r\n\r\n      await detectWalletCb();\r\n\r\n      setInterval(async function () {\r\n        await detectWalletCb();\r\n      }, WALLET_CHECK_INTERVAL_MS);\r\n    })();\r\n\r\n    var detectWalletCb = async () => {\r\n      try {\r\n        var currentAccounts = await window.web3.eth.getAccounts();\r\n        var currentAddress = (currentAccounts && currentAccounts.length > 0) ? currentAccounts[0] : null;\r\n        var currentNetwork = (await window.web3.eth.net.getNetworkType());\r\n      } catch (e) {/*noop*/}\r\n      if (currentNetwork !== this.network) {\r\n        this.network = currentNetwork;\r\n        this.networkChangeDelegates.forEach(d => d(this.network));        \r\n      }\r\n      if (currentAddress !== this.walletAddress) {\r\n        if (currentAddress) { /* add imparters */\r\n          this.addTag(eth_web3.tag);\r\n          this.addTag(ohledger_web3.tag);\r\n        } else { /* remove imparters */\r\n          this.removeTag(eth_web3.tag);\r\n          this.removeTag(ohledger_web3.tag);\r\n        } \r\n        this.walletAddress = currentAddress;\r\n        this.fire('onWalletChange', { imparterTag: eth_web3.tag, isPresent: !!currentAddress });\r\n        this.fire('onWalletChange', { imparterTag: ohledger_web3.tag, isPresent: !!currentAddress });\r\n        if (currentAddress) {\r\n          this.fire('onCredentialsUpdate', { imparterTag: eth_web3.tag, address: currentAddress });\r\n          this.fire('onCredentialsUpdate', { imparterTag: ohledger_web3.tag, address: currentAddress });\r\n        }\r\n      }\r\n    }\r\n  } \r\n}\r\n\r\nexport default web3_wallet;","class overhide_wallet {\r\n  resolve = null;\r\n  reject = null;\r\n\r\n  oh_ledger_transact_fn = {\r\n    'prod': null,\r\n    'test': null\r\n  };\r\n\r\n  remuneration_uri = {\r\n    'prod': 'https://ledger.overhide.io/v1',\r\n    'test': 'https://test.ledger.overhide.io/v1'\r\n  }\r\n\r\n  constructor() {\r\n    window.addEventListener('message', (e) => {\r\n      if (e.data && e.data.event === 'oh-ledger-ok') {\r\n        this.makePopupHidden(e.data.detail);\r\n      } else if (e.data && e.data.event === 'oh-ledger-error') {\r\n        this.makePopupHidden(e.data.detail, true);\r\n      }\r\n    }, false);\r\n\r\n    window.document.addEventListener('oh$-popup-close', (e) => {\r\n      this.makePopupHidden('user close', true);\r\n    });    \r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  raiseEventClick(imparterTag, triggerFor) {\r\n    window.parent.document.dispatchEvent(new CustomEvent('oh$-event', {detail: JSON.stringify({\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor,\r\n      click: true\r\n    })}));\r\n  }\r\n\r\n  // raise oh$-event\r\n  // @param {string} imparterTag\r\n  // @param {string} triggerFor \r\n  // @param {Object} data - to stringify and sent as event.details.\r\n  raiseEvent(imparterTag, triggerFor, data) {\r\n    window.parent.document.dispatchEvent(new CustomEvent('oh$-event', {detail: JSON.stringify({\r\n      ...data,\r\n      imparterTag: imparterTag,\r\n      triggerFor: triggerFor\r\n    })}));    \r\n  }\r\n\r\n  // promise used for popups and resolutions via oh-ledger-* messages.\r\n  setupNewPromise() {\r\n    console.assert(!this.resolve, 'oh-popup promise being set but already set when calling setupNewPromise(..)');\r\n    return new Promise((rs, rj) => {\r\n      this.resolve = rs;\r\n      this.reject = rj;\r\n    });    \r\n  }\r\n\r\n  // make popup visible to be hidden with makePopupHidden\r\n  makePopupVisible() {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    popup.style.display='block';\r\n    return this.setupNewPromise();\r\n  }\r\n\r\n  makePopupHidden(params, isError) {\r\n    var popup = document.getElementById('oh-popup-container');\r\n    this.hideAllPopupContents();\r\n    popup.style.display='none';\r\n    console.assert(this.resolve, 'oh-popup promise not set yet calling makePopupHidden(..)');\r\n    if (isError) this.reject(params)\r\n    else this.resolve(params);\r\n    this.resolve = null;\r\n    this.reject = null;\r\n  }\r\n\r\n  hideAllPopupContents() {\r\n    document.getElementById('oh-ledger-gratis-iframe').style.display='none';\r\n  }\r\n\r\n  async showOhLedgerGratisIframeUri(uri, from, signature, message) {\r\n    this.hideAllPopupContents();\r\n    var frame = document.getElementById('oh-ledger-gratis-iframe');\r\n    frame.setAttribute('src', `${uri}/gratis.html?address=${from}&signature=${signature}&message=${message}`);\r\n    frame.style.display='block';    \r\n    await this.makePopupVisible();\r\n  }\r\n\r\n  createPopup() {\r\n    var popup = document.createElement('div');\r\n    popup.setAttribute('id','oh-popup-container');\r\n    popup.style.display='none';\r\n    popup.innerHTML = `\r\n      <div>\r\n        <a href=\"#\" title=\"Close\" id=\"oh-popup-close\" onclick=\"window.parent.document.dispatchEvent(new CustomEvent('oh$-popup-close',{})); return false;\">X</a>\r\n        <iframe id=\"oh-ledger-gratis-iframe\"></iframe>\r\n      </div>\r\n    `;\r\n    var style = document.createElement('style');\r\n    style.innerHTML =`\r\n      #oh-popup-container {\r\n          position: fixed;\r\n          font-family: arial, \"lucida console\", sans-serif;\r\n          top: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          background: rgba(0, 0, 0, 0.8);\r\n          z-index: 999;\r\n          opacity:1;\r\n          pointer-events: auto;\r\n      }\r\n      #oh-popup-container > div {\r\n          width: 80vw;\r\n          height: 75vh;\r\n          position: relative;\r\n          top: 15vh;\r\n          margin: auto auto;\r\n          padding: 5px 5px 5px 5px;\r\n          background: white;\r\n      }\r\n      #oh-popup-close {\r\n          background: grey;\r\n          color: white;\r\n          line-height: 25px;\r\n          position: absolute;\r\n          right: 2px;\r\n          text-align: center;\r\n          top: 2px;\r\n          width: 24px;\r\n          text-decoration: none;\r\n          font-weight: bold;\r\n      }\r\n      #oh-popup-close:hover {\r\n          background: black;\r\n      }\r\n\r\n      #oh-ledger-gratis-iframe {\r\n        display: none;\r\n        border: 0;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `;\r\n    var attach = () => {\r\n      if (document.body) {\r\n        document.body.appendChild(popup);\r\n        document.body.appendChild(style);\r\n        this.loadOhLedgerTransactFns();\r\n      } else {\r\n        setTimeout(attach, 100);\r\n      };\r\n    };\r\n    attach();\r\n  }\r\n\r\n  // https://stackoverflow.com/a/31374433\r\n  loadJS(url, implementationCode, location) {\r\n    //url is URL of external file, implementationCode is the code\r\n    //to be called from the file, location is the location to \r\n    //insert the <script> element\r\n\r\n    var scriptTag = document.createElement('script');\r\n    scriptTag.src = url;\r\n\r\n    scriptTag.onload = implementationCode;\r\n    scriptTag.onreadystatechange = implementationCode;\r\n\r\n    location.appendChild(scriptTag);\r\n  };\r\n\r\n  loadOhLedgerTransactFns() {\r\n    // load prod ohledger transact fn\r\n    this.loadJS(`${this.remuneration_uri.prod}/transact.js`, () => {\r\n      this.oh_ledger_transact_fn.prod = (...args) => { oh_ledger_transact(...args); return this.setupNewPromise(); }\r\n    }, document.body);\r\n\r\n    // load test ohledger transact fn\r\n    this.loadJS(`${this.remuneration_uri.test}/transact.js`, () => {\r\n      this.oh_ledger_transact_fn.test = (...args) => { oh_ledger_transact(...args); return this.setupNewPromise(); }\r\n    }, document.body);\r\n  }\r\n}\r\n\r\nexport default overhide_wallet;","import eth_web3 from './imparters/eth-web3.js';\r\nimport ohledger_web3 from './imparters/ohledger-web3.js';\r\nimport ohledger from './imparters/ohledger.js';\r\nimport web3_wallet from './wallets/web3_wallet.js';\r\nimport overhide_wallet from './wallets/overhide_wallet.js';\r\n\r\n//     ledgers.js \r\n//     https://ledger.overhide.io\r\n//     (c) 2021 Overhide LLC, Wyoming, USA\r\n//     ledgers.js may be freely distributed under the MIT license.\r\n\r\n/**\r\n * @namespace oh$\r\n * @description \r\n * \r\n * #### REFERENCES\r\n * \r\n * Library code: https://github.com/overhide/ledgers.js/blob/master/dist/ledgers.js.\r\n *\r\n * Repository for this library is https://github.com/overhide/ledgers.js.\r\n * \r\n * The repository contains a demo app of this library working in conjunction with the *overhide* Ethereum remuneration\r\n * provider (Rinkeby testnet -- https://rinkeby.ethereum.overhide.io) and the *overhide-ledger* (test environment -- https://test.ledger.overhide.io)\r\n * \r\n * #### ABOUT\r\n * \r\n * JavaScript library to be used in-browser and interrogate *overhide* remuneration providers as to validity\r\n * of ledger credentials and transactions involving these credentials.\r\n * \r\n * The goal of the library and the *overhide* remuneration providers is to ease using of all types of ledgers for\r\n * authentication (I am who I say) and authorization (paid access tiers).\r\n * \r\n * The library leverages injected currency wallets where it can, and exposes functions to work with *loose* currencies \r\n * (without wallets) where it cannot.\r\n * \r\n * The library exports the `oh$` object for use as a module when bundling.\r\n * \r\n * ```\r\n * import oh$ from \"ledgers.js\";\r\n * oh$.enable(token);\r\n * oh$.addEventListener('onWalletChange', (e) => {...});\r\n * ```\r\n * \r\n * > APIs abstracted by *ledgers.js* require a bearer-token.  The `token` (above) is passed in to `enable` the rest of the library's\r\n * > functionality.  `oh$.enable(..)` can be called every so often with a refreshed token.\r\n * >\r\n * >  A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n * >\r\n * > To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n * \r\n * The library can be loaded straight into your HTML (along with pre-requisite `web3.min.js`) and accessed by its `oh$` property from the browser's `window` object:\r\n * \r\n * ```\r\n * <script src=\"https://cdnjs.cloudflare.com/ajax/libs/web3/1.3.4/web3.min.js\" integrity=\"sha512-TTGImODeszogiro9DUvleC9NJVnxO6M0+69nbM3YE9SYcVe4wZp2XYpELtcikuFZO9vjXNPyeoHAhS5DHzX1ZQ==\" crossorigin=\"anonymous\"></script>\r\n * <script src=\"./dist/ledgers.js\"></script>\r\n * <script>\r\n *   oh$.enable(token);\r\n *   oh$.addEventListener('onWalletChange', (e) => {...});\r\n * </script>\r\n * ```\r\n * \r\n * #### IMPARTERS\r\n * \r\n * The library works with a concept of *imprater* tags.  Wallets impart credentials, signatures, and transactions.  For\r\n * *loose change*--where no wallet exists--the library can be interrogated as to which entities should be set by the \r\n * user (can* functions); causing the entities to be imparted back to the user in a common code flow.  \r\n * \r\n * The imparter tags are a simple naming convention.  For example if multiple Ethereum wallet APIs were imparting data \r\n * they  would be individually tagged with a prefix \"eth\" and a dashed suffix.  No suffix indicates a *loose change*\r\n * imparter:\r\n * \r\n * - eth-web3\r\n * - eth-?\r\n * \r\n * Similarly for *overhide-ledger*, the prefix is \"ohledger\", the suffix won't be attached on the *loose change* version \r\n * and will be suffixed on the *web3* walleted version:\r\n * \r\n * - ohledger\r\n * - ohledger-web3\r\n * \r\n * The following sections cover special notes on each imparter.  The library adheres to these notes.\r\n * \r\n * ##### eth-web3\r\n * \r\n * Ethereum addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Ethereum secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Ethereum networks names are:\r\n * \r\n * * main\r\n * * kovan\r\n * * rinkeyby\r\n * * ropsten\r\n * \r\n * The denomination for amounts is the Wei\r\n * \r\n * ##### ohledger, ohledger-web3\r\n * \r\n * Addresses and secret keys use Ethereum format.\r\n * \r\n * Addresses are 20 bytes: 42 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Secret keys for signing addresses are 32 bytes: 66 character 'hex' strings prefixed with '0x'.\r\n * \r\n * Network tuples consist of a 'currency' as a three letter ISO fiat currency code and a 'mode'.  The supported\r\n * 'currency' names are:\r\n * \r\n * * 'USD'\r\n * \r\n * The denominations are:\r\n * \r\n * | Currency | denomination |\r\n * | --- | --- |\r\n * | USD | cents |\r\n * \r\n * Note: at this point only USD are supported.  If there is a need, and *overhide-ledger* instances in currencies\r\n * other than USD come online, we'll revisit this.\r\n *\r\n * An 'ohledger' mode is on of 'prod' or 'test'\r\n * \r\n */\r\nconst oh$ = (function() {\r\n\r\n  var root = typeof self == 'object' && self.self === self && self ||\r\n    typeof global == 'object' && global.global === global && global ||\r\n    this ||\r\n    {};\r\n\r\n  root.oh$ = new class extends EventTarget {\r\n    /**\r\n     * @event onWalletChange\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..,isPresent:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *isPresent* - if wallet is present for imparter\r\n     *\r\n     * @description\r\n     *   Event called when wallets' state changes.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletChange', (e) => console.log(`wallet for ${e.imparterTag} is available:${e.isPresent}`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onWalletPopup\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | * | `{imparterTag:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the pop-up\r\n     *\r\n     * @description\r\n     *   Event called when wallet is expected to popup.  Useful in case user wants to react to popup in UI.\r\n     * \r\n     *   In user code:\r\n     * \r\n     *   ```\r\n     *   oh$.addEventListener('onWalletPopup', (e) => console.log(`wallet for ${e.imparterTag} popped`));\r\n     *   ```\r\n     */\r\n\r\n    /**\r\n     * @event onCredentialsUpdate\r\n     * @description\r\n     *   Event called when an credentials change for one of the tracked imparters.\r\n     * \r\n     *   Only called when credentials are valid as per imparter: ready to be used for signing, transacting.\r\n     *\r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onCredentialsUpdate', (e) => {\r\n     *     if (e.imparterTag === 'eth-web3') console.log(`new address for ${e.imparterTag} is:${e.address}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     * \r\n     *  > The new event object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,address:..}` |\r\n     *  > | ohledger | `{imparterTag:..,address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,address:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *address* - ledger public address of credential set for imparter\r\n     *  >\r\n     *  > *secret* - ledger PKI private secret for credential set for imparter\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @event onNetworkChange\r\n     * @description\r\n     *   Event called when the network changes for a particular imparter tag.\r\n     * \r\n     *   For example for \"eth\" the network could changed from \"main\" to \"rinkeby\".  \r\n     * \r\n     *   In user code:\r\n     *\r\n     *   ```\r\n     *   oh$.addEventListener('onNetworkChange', (e) => {\r\n     *     if (e.imparterTag === 'eth-web3') console.log(`new network selected for ${e.imparterTag} is:${e.name}`);\r\n     *     if (e.imparterTag === /ohledger/.test(e.imparterTag)) console.log(`working in currency: ${e.currency}`);\r\n     *     return;\r\n     *   });\r\n     *   ```\r\n     * @param {Object} event object - the event object passed in will have additional attributes\r\n     *\r\n     *  > The new credentials object will conform to the following:\r\n     *  >\r\n     *  > | imparter tag | event object attributes |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{imparterTag:..,name:('main'|'rinkeby'|'kovan').., uri:..}` |\r\n     *  > | ohledger | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{imparterTag:..,currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  >\r\n     *  > *imparterTag* - causing the event\r\n     *  >\r\n     *  > *name* - of network\r\n     *  >\r\n     *  > *currency* - represented by network\r\n     *  >\r\n     *  > *mode* - production or test network\r\n     *  >\r\n     *  > *uri* - remuneration API URI for network\r\n     *\r\n     */\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function enable\r\n     * @description\r\n     *   Enable `oh$` by instrumenting with token for ledger access.\r\n     * \r\n     *   `oh$` calls may stall while waiting for this call to complete successfully.\r\n     * \r\n     *   A token can be retrieved with a `GET /token` call (see https://token.overhide.io/swagger.html).\r\n     * \r\n     *   To retrieve tokens please first register for your own API key at https://token.overhide.io/register.\r\n     * @param {string} token\r\n     */\r\n    enable = enable;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getImparterTags\r\n     * @description\r\n     *   Retrieves all imparter tags injected by wallets and statically available from the library.\r\n     * @returns {Array} of strings: the imparter tags available\r\n     */\r\n    getImparterTags = getImparterTags;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canSetCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials set by the user: or does the wallet control it\r\n     *   exclusively.\r\n     * \r\n     *   Only the following imparter(s) will return 'true':\r\n     * \r\n     *   - ohledger\r\n     * \r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials set.\r\n     */\r\n    canSetCredentials = canSetCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canGenerateCredentials\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have credentials generated by the user: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have credentials generated.\r\n     */\r\n    canGenerateCredentials = canGenerateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function canChangeNetwork\r\n     * @description\r\n     *   Interrogate whether the imparter tag can have network changed by the user via oh$: or does the wallet control it\r\n     *   exclusively.\r\n     *\r\n     *   Only the following imparter(s) will return 'true':\r\n     *\r\n     *   - ohledger\r\n     *   - ohledger-web3\r\n     *\r\n     * @param {string} imparterTag\r\n     * @returns {boolean} 'true' if particular imparter tag can have networks changed via oh$.\r\n     */\r\n    canChangeNetwork = canChangeNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function generateCredentials\r\n     * @description\r\n     *   For imparters that can have credentials generated, generates them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     * @param {string} imparterTag\r\n     * @param {Object} options - imparter specific generation options, if any.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | N/A |\r\n     *  > | ohledger | null |\r\n     *  > | ohledger-web3 | N/A |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n\r\n     */\r\n    generateCredentials = generateCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setCredentials\r\n     * @description\r\n     *   For imparters that can have credentials set, sets them.  \r\n     * \r\n     *   Fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} credentials - credentials object of imparter specific parameters to set\r\n     * \r\n     *  > The credentials objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | credentials object | comments |\r\n     *  > | --- | --- | --- |\r\n     *  > | eth-web3 | N/A | |\r\n     *  > | ohledger | `{address:..,secret:..}` | `address` is optional, if not set will be extracted from `secret` |\r\n     *  > | ohledger-web3 | N/A | |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onCredentialsUpdate](#eventoncredentialsupdate) event against `oh$`\r\n     */\r\n    setCredentials = setCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function setNetwork\r\n     * @description\r\n     *   For imparters that can have networks changed via oh$, changes it.  \r\n     * \r\n     *   Fires [onNetworkChange](#eventonnetworkchange) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {Object} details - network details object of imparter specific parameters to set.\r\n     * \r\n     *  > The network details objects are as follows:\r\n     *  >\r\n     *  > | imparter tag | network details object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | N/A |\r\n     *  > | ohledger | `{currency:'USD', mode:'prod'|'test'}` |\r\n     *  > | ohledger-web3 | `{currency:'USD', mode:'prod'|'test'}` |\r\n     *\r\n     * @returns {Promise} representing a 'true' if success else 'false'; also fires [onNetworkChange](#eventonnetworkchange) event against `oh$`\r\n     */\r\n    setNetwork = setNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getOverhideRemunerationAPIUri\r\n     * @description\r\n     *   Based on current network set returns the *overhide* remuneration API URI configured in the library.\r\n     * @param {string} imparterTag\r\n     * @returns {string} the URI.\r\n     */\r\n    getOverhideRemunerationAPIUri = getOverhideRemunerationAPIUri;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getCredentials\r\n     * @description\r\n     *   Retrieves current credentials for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current credentials, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..,secret:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     */\r\n    getCredentials = getCredentials;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getNetwork\r\n     * @description\r\n     *   Retrieves current network for an imparterTag.\r\n     * @param {string} imparterTag\r\n     * @returns {Object} details - an object describing current network, imparterTag dependant:\r\n     * \r\n     *  > | imparter tag | network details object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{name:('main'|'rinkeby'|'kovan').., uri:..}` |\r\n     *  > | ohledger | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     *  > | ohledger-web3 | `{currency:'USD',mode:('prod'|'test'), uri:..}` |\r\n     */\r\n    getNetwork = getNetwork;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getFromDollars\r\n     * @description\r\n     *   Retrieve a converted amount in imparter specific denomination from a provided dollar amount.\r\n     * @param {string} imparterTag\r\n     * @param {number} dollarAmount - the dollar amount.\r\n     * @returns {Promise} with the value in imparter specific currency at the present time (based on recent exchange rate).\r\n     */\r\n     getFromDollars = getFromDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTallyDollars\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range--converted to a US dollar amount.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the tally value in US dollars: all transactions are exchanged to USD at an approximate exchange rate\r\n     *   close to the transactions' time.\r\n     */\r\n     getTallyDollars = getTallyDollars;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTally\r\n     * @description\r\n     *   Retrieve a tally of all transactions on the imparter's ledger--perhaps within a date range.\r\n     * @param {string} imparterTag\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @returns {Promise} with the tally value in imparter specific currency\r\n     */\r\n    getTally = getTally;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function getTransactions\r\n     * @description\r\n     *   Retrieve transactions on the imparter's ledger, perhaps within a date range, from credentials set against \r\n     *   imparter to a recipient\r\n     * @param {string} imparterTag\r\n     * @param {Date} since - date to start tally since: date of oldest transaction to include.  No restriction if 'null'.\r\n     * @param {Object} recepient - imparter specific object describing recipient of transactions to tally for.\r\n     *\r\n     *  > Recipient objects are as per:\r\n     *  >\r\n     *  > | imparter tag | recipient object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | `{address:..}` |\r\n     *  > | ohledger | `{address:..}` |\r\n     *  > | ohledger-web3 | `{address:..}` |\r\n     *\r\n     * @returns {Promise} with the transactions: `[{\"transaction-value\":..,\"transaction-date\":..},..]`\r\n     */\r\n    getTransactions = getTransactions;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function isOnLedger\r\n     * @description\r\n     *   Determine if current credentials have some transaction on the imparter's ledger: transaction can be to anyone.\r\n     * \r\n     *   Intent is to validate beyond just a valid address.  To validate the address has been used.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @returns {Promise} with 'true' or 'false'; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    isOnLedger = isOnLedger;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function sign\r\n     * @description\r\n     *   Sign using the provided message using the credentials set against the specific imparter.\r\n     * \r\n     *   Note: wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`.\r\n     * @param {string} imparterTag\r\n     * @param {string} message - to sign\r\n     * @returns {Promise} with the signature; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    sign = sign;\r\n\r\n    /**\r\n     * @namespace oh$\r\n     * @function createTransaction\r\n     * @description\r\n     *   Create a transaction on the imparter's ledger.\r\n     * \r\n     *   May fire [onWalletPopup](#eventonwalletpopup) event against `oh$`; wallet might pop up a dialog upon this call, consider that in your UX flow.\r\n     * @param {string} imparterTag\r\n     * @param {number} amount\r\n     * @param {string} to - address of recipient\r\n     * \r\n     *  > $0 (*amount*) transactions against *ohledger* or *ohledger-web* *imparters* use the current credential \r\n     *  > as the *to* address, not the specified *to* address.\r\n     *  \r\n     * @param {Object} options - other options required for the specific imparter.\r\n     * \r\n     *  > The options objects are as follows:\r\n     *  > \r\n     *  > | imparter tag | credentials object |\r\n     *  > | --- | --- |\r\n     *  > | eth-web3 | null |\r\n     *  > | ohledger | {message:.., signature:..} |\r\n     *  > | ohledger-web3 | {message:.., signature:..} |\r\n     *  > \r\n     *  > If *message* and *signature* are provided they are used instead of oh$ asking for wallet to resign message.\r\n     *\r\n     * @returns {Promise} of a 'true' for success or an Error; may fire [onWalletPopup](#eventonwalletpopup) event against `oh$`\r\n     */\r\n    createTransaction = createTransaction;\r\n  }();\r\n\r\n  var doEnable = null;\r\n  const isEnabled = new Promise((resolve) => doEnable = resolve);\r\n  var token = null;\r\n  var __fetch = null;\r\n  var imparterTags = [ohledger.tag];\r\n\r\n  /**\r\n   * Function to fire events.\r\n   * \r\n   * @param {string} which - event name to fire\r\n   * @param {Object} params - to copy to event\r\n   */\r\n  function fire(which, params) {\r\n    let event = document.createEvent(\"Event\");\r\n    event.initEvent(which, true, true);\r\n    for (var param in params) {\r\n      event[param] = params[param];\r\n    }\r\n    oh$.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * @param {string} tag -- to add to `imparterTags` if not in `imparterTags`\r\n   */\r\n  function addTag(tag) {\r\n    let imparterTagIndex = imparterTags.findIndex(v => v === tag);\r\n    if (imparterTagIndex == -1) imparterTags.push(tag);\r\n  }\r\n\r\n  /**\r\n   * @param {string} tag -- to remove from `imparterTags` if in `imparterTags`\r\n   */\r\n   function removeTag(tag) {\r\n    let imparterTagIndex = imparterTags.findIndex(v => v === tag);\r\n    if (imparterTagIndex > -1) imparterTags.splice(imparterTagIndex, 1);\r\n  }\r\n\r\n  const web3Wallet = new web3_wallet(\r\n      (tag) => addTag(tag), \r\n      (tag) => removeTag(tag),\r\n      (which, params) => fire(which, params));\r\n\r\n  const overhideWallet = new overhide_wallet();\r\n\r\n  const imparters = {};\r\n  imparters[eth_web3.tag] = new eth_web3(\r\n    web3Wallet, \r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params));\r\n  imparters[ohledger_web3.tag] = new ohledger_web3(\r\n    overhideWallet,\r\n    web3Wallet,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params)\r\n  );\r\n  imparters[ohledger.tag] = new ohledger(\r\n    overhideWallet,\r\n    web3Wallet,\r\n    () => token,\r\n    (...args) => __fetch(...args),\r\n    (which, params) => fire(which, params)\r\n  );\r\n\r\n  overhideWallet.createPopup();\r\n  web3Wallet.detectWeb3Wallet();\r\n\r\n  function enable(_token, {fetcher} = {fetcher: fetch}) {\r\n    token = _token;\r\n    __fetch = fetcher;\r\n    doEnable(true);\r\n  }\r\n\r\n  function getImparterTags() {\r\n    return imparterTags;\r\n  }\r\n\r\n  function canSetCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canSetCredentials();\r\n  }\r\n\r\n  function canGenerateCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canGenerateCredentials();\r\n  }\r\n\r\n  function canChangeNetwork(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].canChangeNetwork();\r\n  }\r\n\r\n  async function setCredentials(imparterTag, credentials) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    \r\n    return imparters[imparterTag].setCredentials(credentials);\r\n  }\r\n\r\n  function getCredentials(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getCredentials();\r\n  }\r\n\r\n  async function generateCredentials(imparterTag, options) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].generateCredentials(options);\r\n  }\r\n\r\n  async function setNetwork(imparterTag, details) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].setNetwork(details);\r\n  }\r\n\r\n  function getNetwork(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getNetwork();    \r\n  }\r\n\r\n  function getOverhideRemunerationAPIUri(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n\r\n    return imparters[imparterTag].getOverhideRemunerationAPIUri();    \r\n  }\r\n\r\n  async function getFromDollars(imparterTag, dollarAmount) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].getFromDollars(dollarAmount);\r\n  }\r\n\r\n  async function getTallyDollars(imparterTag, recipient, date) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].getTallyDollars(recipient, date);\r\n  }\r\n\r\n  async function getTally(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, true)).tally;\r\n  }\r\n\r\n  async function getTransactions(imparterTag, recipient, date) {\r\n    return (await getTxs(imparterTag, recipient, date, false)).transactions;\r\n  }\r\n\r\n  async function getTxs(imparterTag, recipient, date, tallyOnly) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].getTxs(recipient, date, tallyOnly);\r\n  }\r\n\r\n  async function isOnLedger(imparterTag) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].isOnLedger();\r\n  }\r\n\r\n  async function sign(imparterTag, message) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].sign(message);\r\n  }\r\n\r\n  async function createTransaction(imparterTag, amount, to, options) {\r\n    if (!imparterTag in imparters) throw new Error(\"invalid imparterTag\");\r\n    if (await isEnabled && !__fetch) throw new Error('did you forget to `oh$.enable(..)`?');\r\n\r\n    return await imparters[imparterTag].createTransaction(amount, to, options);\r\n  }\r\n\r\n  return root.oh$;\r\n})();\r\n\r\nexport default oh$;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}